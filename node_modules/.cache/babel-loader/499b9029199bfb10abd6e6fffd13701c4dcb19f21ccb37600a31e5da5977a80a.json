{"ast":null,"code":"var _jsxFileName = \"/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/ReactFlowSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst labelView = /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 19\n}, this);\nconst initialNodes = [{\n  id: '1',\n  position: {\n    x: 500,\n    y: 100\n  },\n  data: {\n    label: ' ds ss d'\n  }\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2'\n}];\nconst ReactFlowSection = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ReactFlowSection, \"mmoxFmHOvuuD77aIm5gUqDEdUKU=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = ReactFlowSection;\nexport default ReactFlowSection;\nvar _c;\n$RefreshReg$(_c, \"ReactFlowSection\");","map":{"version":3,"names":["React","useCallback","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","labelView","children","fileName","_jsxFileName","lineNumber","columnNumber","initialNodes","id","position","x","y","data","label","initialEdges","source","target","ReactFlowSection","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","onConnect","params","eds","style","width","height","variant","gap","size","_c","$RefreshReg$"],"sources":["/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/ReactFlowSection.jsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport ReactFlow, {\n    MiniMap,\n    Controls,\n    Background,\n    useNodesState,\n    useEdgesState,\n    addEdge,\n  } from 'reactflow';\n\nimport 'reactflow/dist/style.css';\n\nconst labelView = <div>\n    <div></div>\n</div>\n\nconst initialNodes = [\n    { id: '1', position: { x: 500, y: 100 }, data: { label: ' ds ss d' } },\n  ];\n  const initialEdges = [{ id: 'e1-2', source: '1', target: '2' }];\n  \n const ReactFlowSection = () => {\n    const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n    const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  \n    const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), [setEdges]);\n  \n    return (\n        <div style={{ width: '100vw', height: '100vh' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n        >\n          <Controls />\n          <MiniMap />\n          <Background variant=\"dots\" gap={12} size={1} />\n        </ReactFlow>\n      </div>\n    );\n  }\n\n  export default ReactFlowSection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,SAAS,IACZC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,aAAa,EACbC,aAAa,EACbC,OAAO,QACF,WAAW;AAEpB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,gBAAGD,OAAA;EAAAE,QAAA,eACdF,OAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAW;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACT;AAEN,MAAMC,YAAY,GAAG,CACjB;EAAEC,EAAE,EAAE,GAAG;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAAEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAW;AAAE,CAAC,CACvE;AACD,MAAMC,YAAY,GAAG,CAAC;EAAEN,EAAE,EAAE,MAAM;EAAEO,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAI,CAAC,CAAC;AAEhE,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGzB,aAAa,CAACW,YAAY,CAAC;EACpE,MAAM,CAACe,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG3B,aAAa,CAACiB,YAAY,CAAC;EAEpE,MAAMW,SAAS,GAAGlC,WAAW,CAAEmC,MAAM,IAAKH,QAAQ,CAAEI,GAAG,IAAK7B,OAAO,CAAC4B,MAAM,EAAEC,GAAG,CAAC,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAE9F,oBACIvB,OAAA;IAAK4B,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAA5B,QAAA,eAChDF,OAAA,CAACR,SAAS;MACR2B,KAAK,EAAEA,KAAM;MACbG,KAAK,EAAEA,KAAM;MACbD,aAAa,EAAEA,aAAc;MAC7BG,aAAa,EAAEA,aAAc;MAC7BC,SAAS,EAAEA,SAAU;MAAAvB,QAAA,gBAErBF,OAAA,CAACN,QAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACZN,OAAA,CAACP,OAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACXN,OAAA,CAACL,UAAU;QAACoC,OAAO,EAAC,MAAM;QAACC,GAAG,EAAE,EAAG;QAACC,IAAI,EAAE;MAAE;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAEV,CAAC;AAAAY,EAAA,CArBID,gBAAgB;EAAA,QACsBrB,aAAa,EACbC,aAAa;AAAA;AAAAqC,EAAA,GAFnDjB,gBAAgB;AAuBrB,eAAeA,gBAAgB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}