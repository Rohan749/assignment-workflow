{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/aaruni/Github/workflow_assignment/workflow-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"/home/aaruni/Github/workflow_assignment/workflow-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/home/aaruni/Github/workflow_assignment/workflow-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/home/aaruni/Github/workflow_assignment/workflow-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/aaruni/Github/workflow_assignment/workflow-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/aaruni/Github/workflow_assignment/workflow-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _handleDirections, _MarkerSymbols, _oppositePosition;\nvar _excluded = [\"position\", \"children\", \"className\", \"style\"],\n  _excluded2 = [\"x\", \"y\", \"label\", \"labelStyle\", \"labelShowBg\", \"labelBgStyle\", \"labelBgPadding\", \"labelBgBorderRadius\", \"children\", \"className\"],\n  _excluded3 = [\"id\"],\n  _excluded4 = [\"type\", \"position\", \"isValidConnection\", \"isConnectable\", \"isConnectableStart\", \"isConnectableEnd\", \"id\", \"onConnect\", \"children\", \"className\", \"onMouseDown\", \"onTouchStart\"],\n  _excluded5 = [\"nodes\", \"edges\", \"defaultNodes\", \"defaultEdges\", \"className\", \"nodeTypes\", \"edgeTypes\", \"onNodeClick\", \"onEdgeClick\", \"onInit\", \"onMove\", \"onMoveStart\", \"onMoveEnd\", \"onConnect\", \"onConnectStart\", \"onConnectEnd\", \"onClickConnectStart\", \"onClickConnectEnd\", \"onNodeMouseEnter\", \"onNodeMouseMove\", \"onNodeMouseLeave\", \"onNodeContextMenu\", \"onNodeDoubleClick\", \"onNodeDragStart\", \"onNodeDrag\", \"onNodeDragStop\", \"onNodesDelete\", \"onEdgesDelete\", \"onSelectionChange\", \"onSelectionDragStart\", \"onSelectionDrag\", \"onSelectionDragStop\", \"onSelectionContextMenu\", \"onSelectionStart\", \"onSelectionEnd\", \"connectionMode\", \"connectionLineType\", \"connectionLineStyle\", \"connectionLineComponent\", \"connectionLineContainerStyle\", \"deleteKeyCode\", \"selectionKeyCode\", \"selectionOnDrag\", \"selectionMode\", \"panActivationKeyCode\", \"multiSelectionKeyCode\", \"zoomActivationKeyCode\", \"snapToGrid\", \"snapGrid\", \"onlyRenderVisibleElements\", \"selectNodesOnDrag\", \"nodesDraggable\", \"nodesConnectable\", \"nodesFocusable\", \"nodeOrigin\", \"edgesFocusable\", \"edgesUpdatable\", \"elementsSelectable\", \"defaultViewport\", \"minZoom\", \"maxZoom\", \"translateExtent\", \"preventScrolling\", \"nodeExtent\", \"defaultMarkerColor\", \"zoomOnScroll\", \"zoomOnPinch\", \"panOnScroll\", \"panOnScrollSpeed\", \"panOnScrollMode\", \"zoomOnDoubleClick\", \"panOnDrag\", \"onPaneClick\", \"onPaneMouseEnter\", \"onPaneMouseMove\", \"onPaneMouseLeave\", \"onPaneScroll\", \"onPaneContextMenu\", \"children\", \"onEdgeUpdate\", \"onEdgeContextMenu\", \"onEdgeDoubleClick\", \"onEdgeMouseEnter\", \"onEdgeMouseMove\", \"onEdgeMouseLeave\", \"onEdgeUpdateStart\", \"onEdgeUpdateEnd\", \"edgeUpdaterRadius\", \"onNodesChange\", \"onEdgesChange\", \"noDragClassName\", \"noWheelClassName\", \"noPanClassName\", \"fitView\", \"fitViewOptions\", \"connectOnClick\", \"attributionPosition\", \"proOptions\", \"defaultEdgeOptions\", \"elevateNodesOnSelect\", \"elevateEdgesOnSelect\", \"disableKeyboardA11y\", \"autoPanOnConnect\", \"autoPanOnNodeDrag\", \"connectionRadius\", \"isValidConnection\", \"onError\", \"style\", \"id\"];\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport { shallow } from 'zustand/shallow';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { createPortal } from 'react-dom';\nvar StoreContext = createContext(null);\nvar Provider$1 = StoreContext.Provider;\nvar errorMessages = {\n  error001: function error001() {\n    return '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001';\n  },\n  error002: function error002() {\n    return \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\";\n  },\n  error003: function error003(nodeType) {\n    return \"Node type \\\"\".concat(nodeType, \"\\\" not found. Using fallback type \\\"default\\\".\");\n  },\n  error004: function error004() {\n    return 'The React Flow parent container needs a width and a height to render the graph.';\n  },\n  error005: function error005() {\n    return 'Only child nodes can use a parent extent.';\n  },\n  error006: function error006() {\n    return \"Can't create edge. An edge needs a source and a target.\";\n  },\n  error007: function error007(id) {\n    return \"The old edge with id=\".concat(id, \" does not exist.\");\n  },\n  error009: function error009(type) {\n    return \"Marker type \\\"\".concat(type, \"\\\" doesn't exist.\");\n  },\n  error008: function error008(sourceHandle, edge) {\n    return \"Couldn't create edge for \".concat(!sourceHandle ? 'source' : 'target', \" handle id: \\\"\").concat(!sourceHandle ? edge.sourceHandle : edge.targetHandle, \"\\\", edge id: \").concat(edge.id, \".\");\n  },\n  error010: function error010() {\n    return 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.';\n  },\n  error011: function error011(edgeType) {\n    return \"Edge type \\\"\".concat(edgeType, \"\\\" not found. Using fallback type \\\"default\\\".\");\n  }\n};\nvar zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n  var store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useStore$1(store, selector, equalityFn);\n}\nvar useStoreApi = function useStoreApi() {\n  var store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useMemo(function () {\n    return {\n      getState: store.getState,\n      setState: store.setState,\n      subscribe: store.subscribe,\n      destroy: store.destroy\n    };\n  }, [store]);\n};\nvar selector$g = function selector$g(s) {\n  return s.userSelectionActive ? 'none' : 'all';\n};\nfunction Panel(_ref) {\n  var position = _ref.position,\n    children = _ref.children,\n    className = _ref.className,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var pointerEvents = useStore(selector$g);\n  var positionClasses = \"\".concat(position).split('-');\n  return jsx(\"div\", _objectSpread(_objectSpread({\n    className: cc(['react-flow__panel', className].concat(_toConsumableArray(positionClasses))),\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      pointerEvents: pointerEvents\n    })\n  }, rest), {}, {\n    children: children\n  }));\n}\nfunction Attribution(_ref2) {\n  var proOptions = _ref2.proOptions,\n    _ref2$position = _ref2.position,\n    position = _ref2$position === void 0 ? 'bottom-right' : _ref2$position;\n  if (proOptions !== null && proOptions !== void 0 && proOptions.hideAttribution) {\n    return null;\n  }\n  return jsx(Panel, {\n    position: position,\n    className: \"react-flow__attribution\",\n    \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\",\n    children: jsx(\"a\", {\n      href: \"https://reactflow.dev\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": \"React Flow attribution\",\n      children: \"React Flow\"\n    })\n  });\n}\nvar EdgeText = function EdgeText(_ref3) {\n  var x = _ref3.x,\n    y = _ref3.y,\n    label = _ref3.label,\n    _ref3$labelStyle = _ref3.labelStyle,\n    labelStyle = _ref3$labelStyle === void 0 ? {} : _ref3$labelStyle,\n    _ref3$labelShowBg = _ref3.labelShowBg,\n    labelShowBg = _ref3$labelShowBg === void 0 ? true : _ref3$labelShowBg,\n    _ref3$labelBgStyle = _ref3.labelBgStyle,\n    labelBgStyle = _ref3$labelBgStyle === void 0 ? {} : _ref3$labelBgStyle,\n    _ref3$labelBgPadding = _ref3.labelBgPadding,\n    labelBgPadding = _ref3$labelBgPadding === void 0 ? [2, 4] : _ref3$labelBgPadding,\n    _ref3$labelBgBorderRa = _ref3.labelBgBorderRadius,\n    labelBgBorderRadius = _ref3$labelBgBorderRa === void 0 ? 2 : _ref3$labelBgBorderRa,\n    children = _ref3.children,\n    className = _ref3.className,\n    rest = _objectWithoutProperties(_ref3, _excluded2);\n  var edgeRef = useRef(null);\n  var _useState = useState({\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    edgeTextBbox = _useState2[0],\n    setEdgeTextBbox = _useState2[1];\n  var edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n  useEffect(function () {\n    if (edgeRef.current) {\n      var textBbox = edgeRef.current.getBBox();\n      setEdgeTextBbox({\n        x: textBbox.x,\n        y: textBbox.y,\n        width: textBbox.width,\n        height: textBbox.height\n      });\n    }\n  }, [label]);\n  if (typeof label === 'undefined' || !label) {\n    return null;\n  }\n  return jsxs(\"g\", _objectSpread(_objectSpread({\n    transform: \"translate(\".concat(x - edgeTextBbox.width / 2, \" \").concat(y - edgeTextBbox.height / 2, \")\"),\n    className: edgeTextClasses,\n    visibility: edgeTextBbox.width ? 'visible' : 'hidden'\n  }, rest), {}, {\n    children: [labelShowBg && jsx(\"rect\", {\n      width: edgeTextBbox.width + 2 * labelBgPadding[0],\n      x: -labelBgPadding[0],\n      y: -labelBgPadding[1],\n      height: edgeTextBbox.height + 2 * labelBgPadding[1],\n      className: \"react-flow__edge-textbg\",\n      style: labelBgStyle,\n      rx: labelBgBorderRadius,\n      ry: labelBgBorderRadius\n    }), jsx(\"text\", {\n      className: \"react-flow__edge-text\",\n      y: edgeTextBbox.height / 2,\n      dy: \"0.3em\",\n      ref: edgeRef,\n      style: labelStyle,\n      children: label\n    }), children]\n  }));\n};\nvar EdgeText$1 = memo(EdgeText);\nvar getDimensions = function getDimensions(node) {\n  return {\n    width: node.offsetWidth,\n    height: node.offsetHeight\n  };\n};\nvar clamp = function clamp(val) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(Math.max(val, min), max);\n};\nvar clampPosition = function clampPosition() {\n  var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    x: 0,\n    y: 0\n  };\n  var extent = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1])\n  };\n};\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nvar calcAutoPanVelocity = function calcAutoPanVelocity(value, min, max) {\n  if (value < min) {\n    return clamp(Math.abs(value - min), 1, 50) / 50;\n  } else if (value > max) {\n    return -clamp(Math.abs(value - max), 1, 50) / 50;\n  }\n  return 0;\n};\nvar calcAutoPan = function calcAutoPan(pos, bounds) {\n  var xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n  var yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n  return [xMovement, yMovement];\n};\nvar getHostForElement = function getHostForElement(element) {\n  var _element$getRootNode, _window;\n  return ((_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element)) || ((_window = window) === null || _window === void 0 ? void 0 : _window.document);\n};\nvar getBoundsOfBoxes = function getBoundsOfBoxes(box1, box2) {\n  return {\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2)\n  };\n};\nvar rectToBox = function rectToBox(_ref4) {\n  var x = _ref4.x,\n    y = _ref4.y,\n    width = _ref4.width,\n    height = _ref4.height;\n  return {\n    x: x,\n    y: y,\n    x2: x + width,\n    y2: y + height\n  };\n};\nvar boxToRect = function boxToRect(_ref5) {\n  var x = _ref5.x,\n    y = _ref5.y,\n    x2 = _ref5.x2,\n    y2 = _ref5.y2;\n  return {\n    x: x,\n    y: y,\n    width: x2 - x,\n    height: y2 - y\n  };\n};\nvar nodeToRect = function nodeToRect(node) {\n  return _objectSpread(_objectSpread({}, node.positionAbsolute || {\n    x: 0,\n    y: 0\n  }), {}, {\n    width: node.width || 0,\n    height: node.height || 0\n  });\n};\nvar getBoundsOfRects = function getBoundsOfRects(rect1, rect2) {\n  return boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\n};\nvar getOverlappingArea = function getOverlappingArea(rectA, rectB) {\n  var xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n  var yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n  return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar isRectObject = function isRectObject(obj) {\n  return isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n};\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(n) && isFinite(n);\n};\nvar internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nvar elementSelectionKeys = ['Enter', ' ', 'Escape'];\nvar devWarn = function devWarn(id, message) {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\"[React Flow]: \".concat(message, \" Help: https://reactflow.dev/error#\").concat(id));\n  }\n};\nvar isReactKeyboardEvent = function isReactKeyboardEvent(event) {\n  return 'nativeEvent' in event;\n};\nfunction isInputDOMNode(event) {\n  var _kbEvent$composedPath, _kbEvent$composedPath2;\n  var kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n  // using composed path for handling shadow dom\n  var target = ((_kbEvent$composedPath = kbEvent.composedPath) === null || _kbEvent$composedPath === void 0 ? void 0 : (_kbEvent$composedPath2 = _kbEvent$composedPath.call(kbEvent)) === null || _kbEvent$composedPath2 === void 0 ? void 0 : _kbEvent$composedPath2[0]) || event.target;\n  var isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target === null || target === void 0 ? void 0 : target.nodeName) || (target === null || target === void 0 ? void 0 : target.hasAttribute('contenteditable'));\n  // when an input field is focused we don't want to trigger deletion or movement of nodes\n  return isInput || !!(target !== null && target !== void 0 && target.closest('.nokey'));\n}\nvar isMouseEvent = function isMouseEvent(event) {\n  return 'clientX' in event;\n};\nvar getEventPosition = function getEventPosition(event, bounds) {\n  var _event$touches, _event$touches2, _bounds$left, _bounds$top;\n  var isMouseTriggered = isMouseEvent(event);\n  var evtX = isMouseTriggered ? event.clientX : (_event$touches = event.touches) === null || _event$touches === void 0 ? void 0 : _event$touches[0].clientX;\n  var evtY = isMouseTriggered ? event.clientY : (_event$touches2 = event.touches) === null || _event$touches2 === void 0 ? void 0 : _event$touches2[0].clientY;\n  return {\n    x: evtX - ((_bounds$left = bounds === null || bounds === void 0 ? void 0 : bounds.left) !== null && _bounds$left !== void 0 ? _bounds$left : 0),\n    y: evtY - ((_bounds$top = bounds === null || bounds === void 0 ? void 0 : bounds.top) !== null && _bounds$top !== void 0 ? _bounds$top : 0)\n  };\n};\nvar BaseEdge = function BaseEdge(_ref6) {\n  var path = _ref6.path,\n    labelX = _ref6.labelX,\n    labelY = _ref6.labelY,\n    label = _ref6.label,\n    labelStyle = _ref6.labelStyle,\n    labelShowBg = _ref6.labelShowBg,\n    labelBgStyle = _ref6.labelBgStyle,\n    labelBgPadding = _ref6.labelBgPadding,\n    labelBgBorderRadius = _ref6.labelBgBorderRadius,\n    style = _ref6.style,\n    markerEnd = _ref6.markerEnd,\n    markerStart = _ref6.markerStart,\n    _ref6$interactionWidt = _ref6.interactionWidth,\n    interactionWidth = _ref6$interactionWidt === void 0 ? 20 : _ref6$interactionWidt;\n  return jsxs(Fragment, {\n    children: [jsx(\"path\", {\n      style: style,\n      d: path,\n      fill: \"none\",\n      className: \"react-flow__edge-path\",\n      markerEnd: markerEnd,\n      markerStart: markerStart\n    }), interactionWidth && jsx(\"path\", {\n      d: path,\n      fill: \"none\",\n      strokeOpacity: 0,\n      strokeWidth: interactionWidth,\n      className: \"react-flow__edge-interaction\"\n    }), label && isNumeric(labelX) && isNumeric(labelY) ? jsx(EdgeText$1, {\n      x: labelX,\n      y: labelY,\n      label: label,\n      labelStyle: labelStyle,\n      labelShowBg: labelShowBg,\n      labelBgStyle: labelBgStyle,\n      labelBgPadding: labelBgPadding,\n      labelBgBorderRadius: labelBgBorderRadius\n    }) : null]\n  });\n};\nBaseEdge.displayName = 'BaseEdge';\nvar getMarkerEnd = function getMarkerEnd(markerType, markerEndId) {\n  if (typeof markerEndId !== 'undefined' && markerEndId) {\n    return \"url(#\".concat(markerEndId, \")\");\n  }\n  return typeof markerType !== 'undefined' ? \"url(#react-flow__\".concat(markerType, \")\") : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n  return handler === undefined ? handler : function (event) {\n    var edge = getState().edges.find(function (e) {\n      return e.id === id;\n    });\n    if (edge) {\n      handler(event, _objectSpread({}, edge));\n    }\n  };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter(_ref7) {\n  var sourceX = _ref7.sourceX,\n    sourceY = _ref7.sourceY,\n    targetX = _ref7.targetX,\n    targetY = _ref7.targetY;\n  var xOffset = Math.abs(targetX - sourceX) / 2;\n  var centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n  var yOffset = Math.abs(targetY - sourceY) / 2;\n  var centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n  return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter(_ref8) {\n  var sourceX = _ref8.sourceX,\n    sourceY = _ref8.sourceY,\n    targetX = _ref8.targetX,\n    targetY = _ref8.targetY,\n    sourceControlX = _ref8.sourceControlX,\n    sourceControlY = _ref8.sourceControlY,\n    targetControlX = _ref8.targetControlX,\n    targetControlY = _ref8.targetControlY;\n  // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n  // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n  var centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n  var centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n  var offsetX = Math.abs(centerX - sourceX);\n  var offsetY = Math.abs(centerY - sourceY);\n  return [centerX, centerY, offsetX, offsetY];\n}\nvar ConnectionMode;\n(function (ConnectionMode) {\n  ConnectionMode[\"Strict\"] = \"strict\";\n  ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n  PanOnScrollMode[\"Free\"] = \"free\";\n  PanOnScrollMode[\"Vertical\"] = \"vertical\";\n  PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n  SelectionMode[\"Partial\"] = \"partial\";\n  SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n  ConnectionLineType[\"Bezier\"] = \"default\";\n  ConnectionLineType[\"Straight\"] = \"straight\";\n  ConnectionLineType[\"Step\"] = \"step\";\n  ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n  ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n  MarkerType[\"Arrow\"] = \"arrow\";\n  MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\nvar Position;\n(function (Position) {\n  Position[\"Left\"] = \"left\";\n  Position[\"Top\"] = \"top\";\n  Position[\"Right\"] = \"right\";\n  Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nfunction getControl(_ref9) {\n  var pos = _ref9.pos,\n    x1 = _ref9.x1,\n    y1 = _ref9.y1,\n    x2 = _ref9.x2,\n    y2 = _ref9.y2;\n  if (pos === Position.Left || pos === Position.Right) {\n    return [0.5 * (x1 + x2), y1];\n  }\n  return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath(_ref10) {\n  var sourceX = _ref10.sourceX,\n    sourceY = _ref10.sourceY,\n    _ref10$sourcePosition = _ref10.sourcePosition,\n    sourcePosition = _ref10$sourcePosition === void 0 ? Position.Bottom : _ref10$sourcePosition,\n    targetX = _ref10.targetX,\n    targetY = _ref10.targetY,\n    _ref10$targetPosition = _ref10.targetPosition,\n    targetPosition = _ref10$targetPosition === void 0 ? Position.Top : _ref10$targetPosition;\n  var _getControl = getControl({\n      pos: sourcePosition,\n      x1: sourceX,\n      y1: sourceY,\n      x2: targetX,\n      y2: targetY\n    }),\n    _getControl2 = _slicedToArray(_getControl, 2),\n    sourceControlX = _getControl2[0],\n    sourceControlY = _getControl2[1];\n  var _getControl3 = getControl({\n      pos: targetPosition,\n      x1: targetX,\n      y1: targetY,\n      x2: sourceX,\n      y2: sourceY\n    }),\n    _getControl4 = _slicedToArray(_getControl3, 2),\n    targetControlX = _getControl4[0],\n    targetControlY = _getControl4[1];\n  var _getBezierEdgeCenter = getBezierEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY,\n      sourceControlX: sourceControlX,\n      sourceControlY: sourceControlY,\n      targetControlX: targetControlX,\n      targetControlY: targetControlY\n    }),\n    _getBezierEdgeCenter2 = _slicedToArray(_getBezierEdgeCenter, 4),\n    labelX = _getBezierEdgeCenter2[0],\n    labelY = _getBezierEdgeCenter2[1],\n    offsetX = _getBezierEdgeCenter2[2],\n    offsetY = _getBezierEdgeCenter2[3];\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar SimpleBezierEdge = memo(function (_ref11) {\n  var sourceX = _ref11.sourceX,\n    sourceY = _ref11.sourceY,\n    targetX = _ref11.targetX,\n    targetY = _ref11.targetY,\n    _ref11$sourcePosition = _ref11.sourcePosition,\n    sourcePosition = _ref11$sourcePosition === void 0 ? Position.Bottom : _ref11$sourcePosition,\n    _ref11$targetPosition = _ref11.targetPosition,\n    targetPosition = _ref11$targetPosition === void 0 ? Position.Top : _ref11$targetPosition,\n    label = _ref11.label,\n    labelStyle = _ref11.labelStyle,\n    labelShowBg = _ref11.labelShowBg,\n    labelBgStyle = _ref11.labelBgStyle,\n    labelBgPadding = _ref11.labelBgPadding,\n    labelBgBorderRadius = _ref11.labelBgBorderRadius,\n    style = _ref11.style,\n    markerEnd = _ref11.markerEnd,\n    markerStart = _ref11.markerStart,\n    interactionWidth = _ref11.interactionWidth;\n  var _getSimpleBezierPath = getSimpleBezierPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition\n    }),\n    _getSimpleBezierPath2 = _slicedToArray(_getSimpleBezierPath, 3),\n    path = _getSimpleBezierPath2[0],\n    labelX = _getSimpleBezierPath2[1],\n    labelY = _getSimpleBezierPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nvar handleDirections = (_handleDirections = {}, _defineProperty(_handleDirections, Position.Left, {\n  x: -1,\n  y: 0\n}), _defineProperty(_handleDirections, Position.Right, {\n  x: 1,\n  y: 0\n}), _defineProperty(_handleDirections, Position.Top, {\n  x: 0,\n  y: -1\n}), _defineProperty(_handleDirections, Position.Bottom, {\n  x: 0,\n  y: 1\n}), _handleDirections);\nvar getDirection = function getDirection(_ref12) {\n  var source = _ref12.source,\n    _ref12$sourcePosition = _ref12.sourcePosition,\n    sourcePosition = _ref12$sourcePosition === void 0 ? Position.Bottom : _ref12$sourcePosition,\n    target = _ref12.target;\n  if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n    return source.x < target.x ? {\n      x: 1,\n      y: 0\n    } : {\n      x: -1,\n      y: 0\n    };\n  }\n  return source.y < target.y ? {\n    x: 0,\n    y: 1\n  } : {\n    x: 0,\n    y: -1\n  };\n};\nvar distance = function distance(a, b) {\n  return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n};\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints(_ref13) {\n  var source = _ref13.source,\n    _ref13$sourcePosition = _ref13.sourcePosition,\n    sourcePosition = _ref13$sourcePosition === void 0 ? Position.Bottom : _ref13$sourcePosition,\n    target = _ref13.target,\n    _ref13$targetPosition = _ref13.targetPosition,\n    targetPosition = _ref13$targetPosition === void 0 ? Position.Top : _ref13$targetPosition,\n    center = _ref13.center,\n    offset = _ref13.offset;\n  var sourceDir = handleDirections[sourcePosition];\n  var targetDir = handleDirections[targetPosition];\n  var sourceGapped = {\n    x: source.x + sourceDir.x * offset,\n    y: source.y + sourceDir.y * offset\n  };\n  var targetGapped = {\n    x: target.x + targetDir.x * offset,\n    y: target.y + targetDir.y * offset\n  };\n  var dir = getDirection({\n    source: sourceGapped,\n    sourcePosition: sourcePosition,\n    target: targetGapped\n  });\n  var dirAccessor = dir.x !== 0 ? 'x' : 'y';\n  var currDir = dir[dirAccessor];\n  var points = [];\n  var centerX, centerY;\n  var _getEdgeCenter = getEdgeCenter({\n      sourceX: source.x,\n      sourceY: source.y,\n      targetX: target.x,\n      targetY: target.y\n    }),\n    _getEdgeCenter2 = _slicedToArray(_getEdgeCenter, 4),\n    defaultCenterX = _getEdgeCenter2[0],\n    defaultCenterY = _getEdgeCenter2[1],\n    defaultOffsetX = _getEdgeCenter2[2],\n    defaultOffsetY = _getEdgeCenter2[3];\n  // opposite handle positions, default case\n  if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n    centerX = center.x || defaultCenterX;\n    centerY = center.y || defaultCenterY;\n    //    --->\n    //    |\n    // >---\n    var verticalSplit = [{\n      x: centerX,\n      y: sourceGapped.y\n    }, {\n      x: centerX,\n      y: targetGapped.y\n    }];\n    //    |\n    //  ---\n    //  |\n    var horizontalSplit = [{\n      x: sourceGapped.x,\n      y: centerY\n    }, {\n      x: targetGapped.x,\n      y: centerY\n    }];\n    if (sourceDir[dirAccessor] === currDir) {\n      points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n    } else {\n      points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n    }\n  } else {\n    // sourceTarget means we take x from source and y from target, targetSource is the opposite\n    var sourceTarget = [{\n      x: sourceGapped.x,\n      y: targetGapped.y\n    }];\n    var targetSource = [{\n      x: targetGapped.x,\n      y: sourceGapped.y\n    }];\n    // this handles edges with same handle positions\n    if (dirAccessor === 'x') {\n      points = sourceDir.x === currDir ? targetSource : sourceTarget;\n    } else {\n      points = sourceDir.y === currDir ? sourceTarget : targetSource;\n    }\n    // these are conditions for handling mixed handle positions like Right -> Bottom for example\n    if (sourcePosition !== targetPosition) {\n      var dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n      var isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n      var sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n      var sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n      var flipSourceTarget = sourceDir[dirAccessor] === 1 && (!isSameDir && sourceGtTargetOppo || isSameDir && sourceLtTargetOppo) || sourceDir[dirAccessor] !== 1 && (!isSameDir && sourceLtTargetOppo || isSameDir && sourceGtTargetOppo);\n      if (flipSourceTarget) {\n        points = dirAccessor === 'x' ? sourceTarget : targetSource;\n      }\n    }\n    centerX = points[0].x;\n    centerY = points[0].y;\n  }\n  var pathPoints = [source, sourceGapped].concat(_toConsumableArray(points), [targetGapped, target]);\n  return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n  var bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n  var x = b.x,\n    y = b.y;\n  // no bend\n  if (a.x === x && x === c.x || a.y === y && y === c.y) {\n    return \"L\".concat(x, \" \").concat(y);\n  }\n  // first segment is horizontal\n  if (a.y === y) {\n    var _xDir = a.x < c.x ? -1 : 1;\n    var _yDir = a.y < c.y ? 1 : -1;\n    return \"L \".concat(x + bendSize * _xDir, \",\").concat(y, \"Q \").concat(x, \",\").concat(y, \" \").concat(x, \",\").concat(y + bendSize * _yDir);\n  }\n  var xDir = a.x < c.x ? 1 : -1;\n  var yDir = a.y < c.y ? -1 : 1;\n  return \"L \".concat(x, \",\").concat(y + bendSize * yDir, \"Q \").concat(x, \",\").concat(y, \" \").concat(x + bendSize * xDir, \",\").concat(y);\n}\nfunction getSmoothStepPath(_ref14) {\n  var sourceX = _ref14.sourceX,\n    sourceY = _ref14.sourceY,\n    _ref14$sourcePosition = _ref14.sourcePosition,\n    sourcePosition = _ref14$sourcePosition === void 0 ? Position.Bottom : _ref14$sourcePosition,\n    targetX = _ref14.targetX,\n    targetY = _ref14.targetY,\n    _ref14$targetPosition = _ref14.targetPosition,\n    targetPosition = _ref14$targetPosition === void 0 ? Position.Top : _ref14$targetPosition,\n    _ref14$borderRadius = _ref14.borderRadius,\n    borderRadius = _ref14$borderRadius === void 0 ? 5 : _ref14$borderRadius,\n    centerX = _ref14.centerX,\n    centerY = _ref14.centerY,\n    _ref14$offset = _ref14.offset,\n    offset = _ref14$offset === void 0 ? 20 : _ref14$offset;\n  var _getPoints = getPoints({\n      source: {\n        x: sourceX,\n        y: sourceY\n      },\n      sourcePosition: sourcePosition,\n      target: {\n        x: targetX,\n        y: targetY\n      },\n      targetPosition: targetPosition,\n      center: {\n        x: centerX,\n        y: centerY\n      },\n      offset: offset\n    }),\n    _getPoints2 = _slicedToArray(_getPoints, 5),\n    points = _getPoints2[0],\n    labelX = _getPoints2[1],\n    labelY = _getPoints2[2],\n    offsetX = _getPoints2[3],\n    offsetY = _getPoints2[4];\n  var path = points.reduce(function (res, p, i) {\n    var segment = '';\n    if (i > 0 && i < points.length - 1) {\n      segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n    } else {\n      segment = \"\".concat(i === 0 ? 'M' : 'L').concat(p.x, \" \").concat(p.y);\n    }\n    res += segment;\n    return res;\n  }, '');\n  return [path, labelX, labelY, offsetX, offsetY];\n}\nvar SmoothStepEdge = memo(function (_ref15) {\n  var sourceX = _ref15.sourceX,\n    sourceY = _ref15.sourceY,\n    targetX = _ref15.targetX,\n    targetY = _ref15.targetY,\n    label = _ref15.label,\n    labelStyle = _ref15.labelStyle,\n    labelShowBg = _ref15.labelShowBg,\n    labelBgStyle = _ref15.labelBgStyle,\n    labelBgPadding = _ref15.labelBgPadding,\n    labelBgBorderRadius = _ref15.labelBgBorderRadius,\n    style = _ref15.style,\n    _ref15$sourcePosition = _ref15.sourcePosition,\n    sourcePosition = _ref15$sourcePosition === void 0 ? Position.Bottom : _ref15$sourcePosition,\n    _ref15$targetPosition = _ref15.targetPosition,\n    targetPosition = _ref15$targetPosition === void 0 ? Position.Top : _ref15$targetPosition,\n    markerEnd = _ref15.markerEnd,\n    markerStart = _ref15.markerStart,\n    pathOptions = _ref15.pathOptions,\n    interactionWidth = _ref15.interactionWidth;\n  var _getSmoothStepPath = getSmoothStepPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition,\n      borderRadius: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.borderRadius,\n      offset: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.offset\n    }),\n    _getSmoothStepPath2 = _slicedToArray(_getSmoothStepPath, 3),\n    path = _getSmoothStepPath2[0],\n    labelX = _getSmoothStepPath2[1],\n    labelY = _getSmoothStepPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nvar StepEdge = memo(function (props) {\n  var _props$pathOptions2;\n  return jsx(SmoothStepEdge, _objectSpread(_objectSpread({}, props), {}, {\n    pathOptions: useMemo(function () {\n      var _props$pathOptions;\n      return {\n        borderRadius: 0,\n        offset: (_props$pathOptions = props.pathOptions) === null || _props$pathOptions === void 0 ? void 0 : _props$pathOptions.offset\n      };\n    }, [(_props$pathOptions2 = props.pathOptions) === null || _props$pathOptions2 === void 0 ? void 0 : _props$pathOptions2.offset])\n  }));\n});\nStepEdge.displayName = 'StepEdge';\nfunction getStraightPath(_ref16) {\n  var sourceX = _ref16.sourceX,\n    sourceY = _ref16.sourceY,\n    targetX = _ref16.targetX,\n    targetY = _ref16.targetY;\n  var _getEdgeCenter3 = getEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY\n    }),\n    _getEdgeCenter4 = _slicedToArray(_getEdgeCenter3, 4),\n    labelX = _getEdgeCenter4[0],\n    labelY = _getEdgeCenter4[1],\n    offsetX = _getEdgeCenter4[2],\n    offsetY = _getEdgeCenter4[3];\n  return [\"M \".concat(sourceX, \",\").concat(sourceY, \"L \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar StraightEdge = memo(function (_ref17) {\n  var sourceX = _ref17.sourceX,\n    sourceY = _ref17.sourceY,\n    targetX = _ref17.targetX,\n    targetY = _ref17.targetY,\n    label = _ref17.label,\n    labelStyle = _ref17.labelStyle,\n    labelShowBg = _ref17.labelShowBg,\n    labelBgStyle = _ref17.labelBgStyle,\n    labelBgPadding = _ref17.labelBgPadding,\n    labelBgBorderRadius = _ref17.labelBgBorderRadius,\n    style = _ref17.style,\n    markerEnd = _ref17.markerEnd,\n    markerStart = _ref17.markerStart,\n    interactionWidth = _ref17.interactionWidth;\n  var _getStraightPath = getStraightPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY\n    }),\n    _getStraightPath2 = _slicedToArray(_getStraightPath, 3),\n    path = _getStraightPath2[0],\n    labelX = _getStraightPath2[1],\n    labelY = _getStraightPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nStraightEdge.displayName = 'StraightEdge';\nfunction calculateControlOffset(distance, curvature) {\n  if (distance >= 0) {\n    return 0.5 * distance;\n  }\n  return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature(_ref18) {\n  var pos = _ref18.pos,\n    x1 = _ref18.x1,\n    y1 = _ref18.y1,\n    x2 = _ref18.x2,\n    y2 = _ref18.y2,\n    c = _ref18.c;\n  switch (pos) {\n    case Position.Left:\n      return [x1 - calculateControlOffset(x1 - x2, c), y1];\n    case Position.Right:\n      return [x1 + calculateControlOffset(x2 - x1, c), y1];\n    case Position.Top:\n      return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n    case Position.Bottom:\n      return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n  }\n}\nfunction getBezierPath(_ref19) {\n  var sourceX = _ref19.sourceX,\n    sourceY = _ref19.sourceY,\n    _ref19$sourcePosition = _ref19.sourcePosition,\n    sourcePosition = _ref19$sourcePosition === void 0 ? Position.Bottom : _ref19$sourcePosition,\n    targetX = _ref19.targetX,\n    targetY = _ref19.targetY,\n    _ref19$targetPosition = _ref19.targetPosition,\n    targetPosition = _ref19$targetPosition === void 0 ? Position.Top : _ref19$targetPosition,\n    _ref19$curvature = _ref19.curvature,\n    curvature = _ref19$curvature === void 0 ? 0.25 : _ref19$curvature;\n  var _getControlWithCurvat = getControlWithCurvature({\n      pos: sourcePosition,\n      x1: sourceX,\n      y1: sourceY,\n      x2: targetX,\n      y2: targetY,\n      c: curvature\n    }),\n    _getControlWithCurvat2 = _slicedToArray(_getControlWithCurvat, 2),\n    sourceControlX = _getControlWithCurvat2[0],\n    sourceControlY = _getControlWithCurvat2[1];\n  var _getControlWithCurvat3 = getControlWithCurvature({\n      pos: targetPosition,\n      x1: targetX,\n      y1: targetY,\n      x2: sourceX,\n      y2: sourceY,\n      c: curvature\n    }),\n    _getControlWithCurvat4 = _slicedToArray(_getControlWithCurvat3, 2),\n    targetControlX = _getControlWithCurvat4[0],\n    targetControlY = _getControlWithCurvat4[1];\n  var _getBezierEdgeCenter3 = getBezierEdgeCenter({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      targetX: targetX,\n      targetY: targetY,\n      sourceControlX: sourceControlX,\n      sourceControlY: sourceControlY,\n      targetControlX: targetControlX,\n      targetControlY: targetControlY\n    }),\n    _getBezierEdgeCenter4 = _slicedToArray(_getBezierEdgeCenter3, 4),\n    labelX = _getBezierEdgeCenter4[0],\n    labelY = _getBezierEdgeCenter4[1],\n    offsetX = _getBezierEdgeCenter4[2],\n    offsetY = _getBezierEdgeCenter4[3];\n  return [\"M\".concat(sourceX, \",\").concat(sourceY, \" C\").concat(sourceControlX, \",\").concat(sourceControlY, \" \").concat(targetControlX, \",\").concat(targetControlY, \" \").concat(targetX, \",\").concat(targetY), labelX, labelY, offsetX, offsetY];\n}\nvar BezierEdge = memo(function (_ref20) {\n  var sourceX = _ref20.sourceX,\n    sourceY = _ref20.sourceY,\n    targetX = _ref20.targetX,\n    targetY = _ref20.targetY,\n    _ref20$sourcePosition = _ref20.sourcePosition,\n    sourcePosition = _ref20$sourcePosition === void 0 ? Position.Bottom : _ref20$sourcePosition,\n    _ref20$targetPosition = _ref20.targetPosition,\n    targetPosition = _ref20$targetPosition === void 0 ? Position.Top : _ref20$targetPosition,\n    label = _ref20.label,\n    labelStyle = _ref20.labelStyle,\n    labelShowBg = _ref20.labelShowBg,\n    labelBgStyle = _ref20.labelBgStyle,\n    labelBgPadding = _ref20.labelBgPadding,\n    labelBgBorderRadius = _ref20.labelBgBorderRadius,\n    style = _ref20.style,\n    markerEnd = _ref20.markerEnd,\n    markerStart = _ref20.markerStart,\n    pathOptions = _ref20.pathOptions,\n    interactionWidth = _ref20.interactionWidth;\n  var _getBezierPath = getBezierPath({\n      sourceX: sourceX,\n      sourceY: sourceY,\n      sourcePosition: sourcePosition,\n      targetX: targetX,\n      targetY: targetY,\n      targetPosition: targetPosition,\n      curvature: pathOptions === null || pathOptions === void 0 ? void 0 : pathOptions.curvature\n    }),\n    _getBezierPath2 = _slicedToArray(_getBezierPath, 3),\n    path = _getBezierPath2[0],\n    labelX = _getBezierPath2[1],\n    labelY = _getBezierPath2[2];\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nBezierEdge.displayName = 'BezierEdge';\nvar NodeIdContext = createContext(null);\nvar Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nvar useNodeId = function useNodeId() {\n  var nodeId = useContext(NodeIdContext);\n  return nodeId;\n};\nvar isEdge = function isEdge(element) {\n  return 'id' in element && 'source' in element && 'target' in element;\n};\nvar isNode = function isNode(element) {\n  return 'id' in element && !('source' in element) && !('target' in element);\n};\nvar getOutgoers = function getOutgoers(node, nodes, edges) {\n  if (!isNode(node)) {\n    return [];\n  }\n  var outgoerIds = edges.filter(function (e) {\n    return e.source === node.id;\n  }).map(function (e) {\n    return e.target;\n  });\n  return nodes.filter(function (n) {\n    return outgoerIds.includes(n.id);\n  });\n};\nvar getIncomers = function getIncomers(node, nodes, edges) {\n  if (!isNode(node)) {\n    return [];\n  }\n  var incomersIds = edges.filter(function (e) {\n    return e.target === node.id;\n  }).map(function (e) {\n    return e.source;\n  });\n  return nodes.filter(function (n) {\n    return incomersIds.includes(n.id);\n  });\n};\nvar getEdgeId = function getEdgeId(_ref21) {\n  var source = _ref21.source,\n    sourceHandle = _ref21.sourceHandle,\n    target = _ref21.target,\n    targetHandle = _ref21.targetHandle;\n  return \"reactflow__edge-\".concat(source).concat(sourceHandle || '', \"-\").concat(target).concat(targetHandle || '');\n};\nvar getMarkerId = function getMarkerId(marker, rfId) {\n  if (typeof marker === 'undefined') {\n    return '';\n  }\n  if (typeof marker === 'string') {\n    return marker;\n  }\n  var idPrefix = rfId ? \"\".concat(rfId, \"__\") : '';\n  return \"\".concat(idPrefix).concat(Object.keys(marker).sort().map(function (key) {\n    return \"\".concat(key, \"=\").concat(marker[key]);\n  }).join('&'));\n};\nvar connectionExists = function connectionExists(edge, edges) {\n  return edges.some(function (el) {\n    return el.source === edge.source && el.target === edge.target && (el.sourceHandle === edge.sourceHandle || !el.sourceHandle && !edge.sourceHandle) && (el.targetHandle === edge.targetHandle || !el.targetHandle && !edge.targetHandle);\n  });\n};\nvar addEdge = function addEdge(edgeParams, edges) {\n  if (!edgeParams.source || !edgeParams.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  var edge;\n  if (isEdge(edgeParams)) {\n    edge = _objectSpread({}, edgeParams);\n  } else {\n    edge = _objectSpread(_objectSpread({}, edgeParams), {}, {\n      id: getEdgeId(edgeParams)\n    });\n  }\n  if (connectionExists(edge, edges)) {\n    return edges;\n  }\n  return edges.concat(edge);\n};\nvar updateEdge = function updateEdge(oldEdge, newConnection, edges) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    shouldReplaceId: true\n  };\n  var oldEdgeId = oldEdge.id,\n    rest = _objectWithoutProperties(oldEdge, _excluded3);\n  if (!newConnection.source || !newConnection.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  var foundEdge = edges.find(function (e) {\n    return e.id === oldEdgeId;\n  });\n  if (!foundEdge) {\n    devWarn('007', errorMessages['error007'](oldEdgeId));\n    return edges;\n  }\n  // Remove old edge and create the new edge with parameters of old edge.\n  var edge = _objectSpread(_objectSpread({}, rest), {}, {\n    id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n    source: newConnection.source,\n    target: newConnection.target,\n    sourceHandle: newConnection.sourceHandle,\n    targetHandle: newConnection.targetHandle\n  });\n  return edges.filter(function (e) {\n    return e.id !== oldEdgeId;\n  }).concat(edge);\n};\nvar pointToRendererPoint = function pointToRendererPoint(_ref22, _ref23, snapToGrid, _ref24) {\n  var x = _ref22.x,\n    y = _ref22.y;\n  var _ref25 = _slicedToArray(_ref23, 3),\n    tx = _ref25[0],\n    ty = _ref25[1],\n    tScale = _ref25[2];\n  var _ref26 = _slicedToArray(_ref24, 2),\n    snapX = _ref26[0],\n    snapY = _ref26[1];\n  var position = {\n    x: (x - tx) / tScale,\n    y: (y - ty) / tScale\n  };\n  if (snapToGrid) {\n    return {\n      x: snapX * Math.round(position.x / snapX),\n      y: snapY * Math.round(position.y / snapY)\n    };\n  }\n  return position;\n};\nvar rendererPointToPoint = function rendererPointToPoint(_ref27, _ref28) {\n  var x = _ref27.x,\n    y = _ref27.y;\n  var _ref29 = _slicedToArray(_ref28, 3),\n    tx = _ref29[0],\n    ty = _ref29[1],\n    tScale = _ref29[2];\n  return {\n    x: x * tScale + tx,\n    y: y * tScale + ty\n  };\n};\nvar getNodePositionWithOrigin = function getNodePositionWithOrigin(node) {\n  var _node$width, _node$height;\n  var nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (!node) {\n    return {\n      x: 0,\n      y: 0,\n      positionAbsolute: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n  var offsetX = ((_node$width = node.width) !== null && _node$width !== void 0 ? _node$width : 0) * nodeOrigin[0];\n  var offsetY = ((_node$height = node.height) !== null && _node$height !== void 0 ? _node$height : 0) * nodeOrigin[1];\n  var position = {\n    x: node.position.x - offsetX,\n    y: node.position.y - offsetY\n  };\n  return _objectSpread(_objectSpread({}, position), {}, {\n    positionAbsolute: node.positionAbsolute ? {\n      x: node.positionAbsolute.x - offsetX,\n      y: node.positionAbsolute.y - offsetY\n    } : position\n  });\n};\nvar getRectOfNodes = function getRectOfNodes(nodes) {\n  var nodeOrigin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n  if (nodes.length === 0) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  var box = nodes.reduce(function (currBox, node) {\n    var _getNodePositionWithO = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute,\n      x = _getNodePositionWithO.x,\n      y = _getNodePositionWithO.y;\n    return getBoundsOfBoxes(currBox, rectToBox({\n      x: x,\n      y: y,\n      width: node.width || 0,\n      height: node.height || 0\n    }));\n  }, {\n    x: Infinity,\n    y: Infinity,\n    x2: -Infinity,\n    y2: -Infinity\n  });\n  return boxToRect(box);\n};\nvar getNodesInside = function getNodesInside(nodeInternals, rect) {\n  var _ref30 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0, 1],\n    _ref31 = _slicedToArray(_ref30, 3),\n    tx = _ref31[0],\n    ty = _ref31[1],\n    tScale = _ref31[2];\n  var partially = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var excludeNonSelectableNodes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var nodeOrigin = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [0, 0];\n  var paneRect = {\n    x: (rect.x - tx) / tScale,\n    y: (rect.y - ty) / tScale,\n    width: rect.width / tScale,\n    height: rect.height / tScale\n  };\n  var visibleNodes = [];\n  nodeInternals.forEach(function (node) {\n    var width = node.width,\n      height = node.height,\n      _node$selectable = node.selectable,\n      selectable = _node$selectable === void 0 ? true : _node$selectable,\n      _node$hidden = node.hidden,\n      hidden = _node$hidden === void 0 ? false : _node$hidden;\n    if (excludeNonSelectableNodes && !selectable || hidden) {\n      return false;\n    }\n    var _getNodePositionWithO2 = getNodePositionWithOrigin(node, nodeOrigin),\n      positionAbsolute = _getNodePositionWithO2.positionAbsolute;\n    var nodeRect = {\n      x: positionAbsolute.x,\n      y: positionAbsolute.y,\n      width: width || 0,\n      height: height || 0\n    };\n    var overlappingArea = getOverlappingArea(paneRect, nodeRect);\n    var notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n    var partiallyVisible = partially && overlappingArea > 0;\n    var area = (width || 0) * (height || 0);\n    var isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n    if (isVisible || node.dragging) {\n      visibleNodes.push(node);\n    }\n  });\n  return visibleNodes;\n};\nvar getConnectedEdges = function getConnectedEdges(nodes, edges) {\n  var nodeIds = nodes.map(function (node) {\n    return node.id;\n  });\n  return edges.filter(function (edge) {\n    return nodeIds.includes(edge.source) || nodeIds.includes(edge.target);\n  });\n};\nvar getTransformForBounds = function getTransformForBounds(bounds, width, height, minZoom, maxZoom) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n  var xZoom = width / (bounds.width * (1 + padding));\n  var yZoom = height / (bounds.height * (1 + padding));\n  var zoom = Math.min(xZoom, yZoom);\n  var clampedZoom = clamp(zoom, minZoom, maxZoom);\n  var boundsCenterX = bounds.x + bounds.width / 2;\n  var boundsCenterY = bounds.y + bounds.height / 2;\n  var x = width / 2 - boundsCenterX * clampedZoom;\n  var y = height / 2 - boundsCenterY * clampedZoom;\n  return [x, y, clampedZoom];\n};\nvar getD3Transition = function getD3Transition(selection) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n  return (handleBounds[type] || []).reduce(function (res, h) {\n    if (\"\".concat(node.id, \"-\").concat(h.id, \"-\").concat(type) !== currentHandle) {\n      var _node$positionAbsolut, _node$positionAbsolut2, _node$positionAbsolut3, _node$positionAbsolut4;\n      res.push({\n        id: h.id || null,\n        type: type,\n        nodeId: node.id,\n        x: ((_node$positionAbsolut = (_node$positionAbsolut2 = node.positionAbsolute) === null || _node$positionAbsolut2 === void 0 ? void 0 : _node$positionAbsolut2.x) !== null && _node$positionAbsolut !== void 0 ? _node$positionAbsolut : 0) + h.x + h.width / 2,\n        y: ((_node$positionAbsolut3 = (_node$positionAbsolut4 = node.positionAbsolute) === null || _node$positionAbsolut4 === void 0 ? void 0 : _node$positionAbsolut4.y) !== null && _node$positionAbsolut3 !== void 0 ? _node$positionAbsolut3 : 0) + h.y + h.height / 2\n      });\n    }\n    return res;\n  }, []);\n}\nfunction getClosestHandle(pos, connectionRadius, handles) {\n  var closestHandle = null;\n  var minDistance = Infinity;\n  handles.forEach(function (handle) {\n    var distance = Math.sqrt(Math.pow(handle.x - pos.x, 2) + Math.pow(handle.y - pos.y, 2));\n    if (distance <= connectionRadius && distance < minDistance) {\n      minDistance = distance;\n      closestHandle = handle;\n    }\n  });\n  return closestHandle;\n}\nvar nullConnection = {\n  source: null,\n  target: null,\n  sourceHandle: null,\n  targetHandle: null\n};\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(event, handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n  var isTarget = fromType === 'target';\n  var handleDomNode = doc.querySelector(\".react-flow__handle[data-id=\\\"\".concat(handle === null || handle === void 0 ? void 0 : handle.nodeId, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.id, \"-\").concat(handle === null || handle === void 0 ? void 0 : handle.type, \"\\\"]\"));\n  var _getEventPosition = getEventPosition(event),\n    x = _getEventPosition.x,\n    y = _getEventPosition.y;\n  var handleBelow = doc.elementFromPoint(x, y);\n  var handleToCheck = handleBelow !== null && handleBelow !== void 0 && handleBelow.classList.contains('react-flow__handle') ? handleBelow : handleDomNode;\n  var result = {\n    handleDomNode: handleToCheck,\n    isValid: false,\n    connection: nullConnection,\n    endHandle: null\n  };\n  if (handleToCheck) {\n    var handleType = getHandleType(undefined, handleToCheck);\n    var handleNodeId = handleToCheck.getAttribute('data-nodeid');\n    var handleId = handleToCheck.getAttribute('data-handleid');\n    var connectable = handleToCheck.classList.contains('connectable');\n    var connectableEnd = handleToCheck.classList.contains('connectableend');\n    var connection = {\n      source: isTarget ? handleNodeId : fromNodeId,\n      sourceHandle: isTarget ? handleId : fromHandleId,\n      target: isTarget ? fromNodeId : handleNodeId,\n      targetHandle: isTarget ? fromHandleId : handleId\n    };\n    result.connection = connection;\n    var isConnectable = connectable && connectableEnd;\n    // in strict mode we don't allow target to target or source to source connections\n    var isValid = isConnectable && (connectionMode === ConnectionMode.Strict ? isTarget && handleType === 'source' || !isTarget && handleType === 'target' : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n    if (isValid) {\n      result.endHandle = {\n        nodeId: handleNodeId,\n        handleId: handleId,\n        type: handleType\n      };\n      result.isValid = isValidConnection(connection);\n    }\n  }\n  return result;\n}\nfunction getHandleLookup(_ref32) {\n  var nodes = _ref32.nodes,\n    nodeId = _ref32.nodeId,\n    handleId = _ref32.handleId,\n    handleType = _ref32.handleType;\n  return nodes.reduce(function (res, node) {\n    if (node[internalsSymbol]) {\n      var handleBounds = node[internalsSymbol].handleBounds;\n      var sourceHandles = [];\n      var targetHandles = [];\n      if (handleBounds) {\n        sourceHandles = getHandles(node, handleBounds, 'source', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n        targetHandles = getHandles(node, handleBounds, 'target', \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(handleType));\n      }\n      res.push.apply(res, _toConsumableArray(sourceHandles).concat(_toConsumableArray(targetHandles)));\n    }\n    return res;\n  }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n  if (edgeUpdaterType) {\n    return edgeUpdaterType;\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('target')) {\n    return 'target';\n  } else if (handleDomNode !== null && handleDomNode !== void 0 && handleDomNode.classList.contains('source')) {\n    return 'source';\n  }\n  return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n  handleDomNode === null || handleDomNode === void 0 ? void 0 : handleDomNode.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n  var connectionStatus = null;\n  if (isHandleValid) {\n    connectionStatus = 'valid';\n  } else if (isInsideConnectionRadius && !isHandleValid) {\n    connectionStatus = 'invalid';\n  }\n  return connectionStatus;\n}\nfunction handlePointerDown(_ref33) {\n  var event = _ref33.event,\n    handleId = _ref33.handleId,\n    nodeId = _ref33.nodeId,\n    onConnect = _ref33.onConnect,\n    isTarget = _ref33.isTarget,\n    getState = _ref33.getState,\n    setState = _ref33.setState,\n    isValidConnection = _ref33.isValidConnection,\n    edgeUpdaterType = _ref33.edgeUpdaterType,\n    onEdgeUpdateEnd = _ref33.onEdgeUpdateEnd;\n  // when react-flow is used inside a shadow root we can't use document\n  var doc = getHostForElement(event.target);\n  var _getState = getState(),\n    connectionMode = _getState.connectionMode,\n    domNode = _getState.domNode,\n    autoPanOnConnect = _getState.autoPanOnConnect,\n    connectionRadius = _getState.connectionRadius,\n    onConnectStart = _getState.onConnectStart,\n    panBy = _getState.panBy,\n    getNodes = _getState.getNodes,\n    cancelConnection = _getState.cancelConnection;\n  var autoPanId = 0;\n  var prevClosestHandle;\n  var _getEventPosition2 = getEventPosition(event),\n    x = _getEventPosition2.x,\n    y = _getEventPosition2.y;\n  var clickedHandle = doc === null || doc === void 0 ? void 0 : doc.elementFromPoint(x, y);\n  var handleType = getHandleType(edgeUpdaterType, clickedHandle);\n  var containerBounds = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n  if (!containerBounds || !handleType) {\n    return;\n  }\n  var prevActiveHandle;\n  var connectionPosition = getEventPosition(event, containerBounds);\n  var autoPanStarted = false;\n  var connection = null;\n  var isValid = false;\n  var handleDomNode = null;\n  var handleLookup = getHandleLookup({\n    nodes: getNodes(),\n    nodeId: nodeId,\n    handleId: handleId,\n    handleType: handleType\n  });\n  // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n  var autoPan = function autoPan() {\n    if (!autoPanOnConnect) {\n      return;\n    }\n    var _calcAutoPan = calcAutoPan(connectionPosition, containerBounds),\n      _calcAutoPan2 = _slicedToArray(_calcAutoPan, 2),\n      xMovement = _calcAutoPan2[0],\n      yMovement = _calcAutoPan2[1];\n    panBy({\n      x: xMovement,\n      y: yMovement\n    });\n    autoPanId = requestAnimationFrame(autoPan);\n  };\n  setState({\n    connectionPosition: connectionPosition,\n    connectionStatus: null,\n    // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n    connectionNodeId: nodeId,\n    connectionHandleId: handleId,\n    connectionHandleType: handleType,\n    connectionStartHandle: {\n      nodeId: nodeId,\n      handleId: handleId,\n      type: handleType\n    },\n    connectionEndHandle: null\n  });\n  onConnectStart === null || onConnectStart === void 0 ? void 0 : onConnectStart(event, {\n    nodeId: nodeId,\n    handleId: handleId,\n    handleType: handleType\n  });\n  function onPointerMove(event) {\n    var _getState2 = getState(),\n      transform = _getState2.transform;\n    connectionPosition = getEventPosition(event, containerBounds);\n    prevClosestHandle = getClosestHandle(pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup);\n    if (!autoPanStarted) {\n      autoPan();\n      autoPanStarted = true;\n    }\n    var result = isValidHandle(event, prevClosestHandle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc);\n    handleDomNode = result.handleDomNode;\n    connection = result.connection;\n    isValid = result.isValid;\n    setState({\n      connectionPosition: prevClosestHandle && isValid ? rendererPointToPoint({\n        x: prevClosestHandle.x,\n        y: prevClosestHandle.y\n      }, transform) : connectionPosition,\n      connectionStatus: getConnectionStatus(!!prevClosestHandle, isValid),\n      connectionEndHandle: result.endHandle\n    });\n    if (!prevClosestHandle && !isValid && !handleDomNode) {\n      return resetRecentHandle(prevActiveHandle);\n    }\n    if (connection.source !== connection.target && handleDomNode) {\n      resetRecentHandle(prevActiveHandle);\n      prevActiveHandle = handleDomNode;\n      // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n      handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n      handleDomNode.classList.toggle('valid', isValid);\n      handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n    }\n  }\n  function onPointerUp(event) {\n    var _getState$onConnectEn, _getState3;\n    if ((prevClosestHandle || handleDomNode) && connection && isValid) {\n      onConnect === null || onConnect === void 0 ? void 0 : onConnect(connection);\n    }\n    // it's important to get a fresh reference from the store here\n    // in order to get the latest state of onConnectEnd\n    (_getState$onConnectEn = (_getState3 = getState()).onConnectEnd) === null || _getState$onConnectEn === void 0 ? void 0 : _getState$onConnectEn.call(_getState3, event);\n    if (edgeUpdaterType) {\n      onEdgeUpdateEnd === null || onEdgeUpdateEnd === void 0 ? void 0 : onEdgeUpdateEnd(event);\n    }\n    resetRecentHandle(prevActiveHandle);\n    cancelConnection();\n    cancelAnimationFrame(autoPanId);\n    autoPanStarted = false;\n    isValid = false;\n    connection = null;\n    handleDomNode = null;\n    doc.removeEventListener('mousemove', onPointerMove);\n    doc.removeEventListener('mouseup', onPointerUp);\n    doc.removeEventListener('touchmove', onPointerMove);\n    doc.removeEventListener('touchend', onPointerUp);\n  }\n  doc.addEventListener('mousemove', onPointerMove);\n  doc.addEventListener('mouseup', onPointerUp);\n  doc.addEventListener('touchmove', onPointerMove);\n  doc.addEventListener('touchend', onPointerUp);\n}\nvar alwaysValid = function alwaysValid() {\n  return true;\n};\nvar selector$f = function selector$f(s) {\n  return {\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName\n  };\n};\nvar connectingSelector = function connectingSelector(nodeId, handleId, type) {\n  return function (state) {\n    var startHandle = state.connectionStartHandle,\n      endHandle = state.connectionEndHandle,\n      clickHandle = state.connectionClickStartHandle;\n    return {\n      connecting: (startHandle === null || startHandle === void 0 ? void 0 : startHandle.nodeId) === nodeId && (startHandle === null || startHandle === void 0 ? void 0 : startHandle.handleId) === handleId && (startHandle === null || startHandle === void 0 ? void 0 : startHandle.type) === type || (endHandle === null || endHandle === void 0 ? void 0 : endHandle.nodeId) === nodeId && (endHandle === null || endHandle === void 0 ? void 0 : endHandle.handleId) === handleId && (endHandle === null || endHandle === void 0 ? void 0 : endHandle.type) === type,\n      clickConnecting: (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.nodeId) === nodeId && (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.handleId) === handleId && (clickHandle === null || clickHandle === void 0 ? void 0 : clickHandle.type) === type\n    };\n  };\n};\nvar Handle = forwardRef(function (_ref34, ref) {\n  var _ref34$type = _ref34.type,\n    type = _ref34$type === void 0 ? 'source' : _ref34$type,\n    _ref34$position = _ref34.position,\n    position = _ref34$position === void 0 ? Position.Top : _ref34$position,\n    isValidConnection = _ref34.isValidConnection,\n    _ref34$isConnectable = _ref34.isConnectable,\n    isConnectable = _ref34$isConnectable === void 0 ? true : _ref34$isConnectable,\n    _ref34$isConnectableS = _ref34.isConnectableStart,\n    isConnectableStart = _ref34$isConnectableS === void 0 ? true : _ref34$isConnectableS,\n    _ref34$isConnectableE = _ref34.isConnectableEnd,\n    isConnectableEnd = _ref34$isConnectableE === void 0 ? true : _ref34$isConnectableE,\n    id = _ref34.id,\n    onConnect = _ref34.onConnect,\n    children = _ref34.children,\n    className = _ref34.className,\n    onMouseDown = _ref34.onMouseDown,\n    onTouchStart = _ref34.onTouchStart,\n    rest = _objectWithoutProperties(_ref34, _excluded4);\n  var handleId = id || null;\n  var isTarget = type === 'target';\n  var store = useStoreApi();\n  var nodeId = useNodeId();\n  var _useStore = useStore(selector$f, shallow),\n    connectOnClick = _useStore.connectOnClick,\n    noPanClassName = _useStore.noPanClassName;\n  var _useStore2 = useStore(connectingSelector(nodeId, handleId, type)),\n    connecting = _useStore2.connecting,\n    clickConnecting = _useStore2.clickConnecting;\n  if (!nodeId) {\n    var _store$getState$onErr, _store$getState;\n    (_store$getState$onErr = (_store$getState = store.getState()).onError) === null || _store$getState$onErr === void 0 ? void 0 : _store$getState$onErr.call(_store$getState, '010', errorMessages['error010']());\n  }\n  var onConnectExtended = function onConnectExtended(params) {\n    var _store$getState2 = store.getState(),\n      defaultEdgeOptions = _store$getState2.defaultEdgeOptions,\n      onConnectAction = _store$getState2.onConnect,\n      hasDefaultEdges = _store$getState2.hasDefaultEdges;\n    var edgeParams = _objectSpread(_objectSpread({}, defaultEdgeOptions), params);\n    if (hasDefaultEdges) {\n      var _store$getState3 = store.getState(),\n        edges = _store$getState3.edges,\n        setEdges = _store$getState3.setEdges;\n      setEdges(addEdge(edgeParams, edges));\n    }\n    onConnectAction === null || onConnectAction === void 0 ? void 0 : onConnectAction(edgeParams);\n    onConnect === null || onConnect === void 0 ? void 0 : onConnect(edgeParams);\n  };\n  var onPointerDown = function onPointerDown(event) {\n    if (!nodeId) {\n      return;\n    }\n    var isMouseTriggered = isMouseEvent(event);\n    if (isConnectableStart && (isMouseTriggered && event.button === 0 || !isMouseTriggered)) {\n      handlePointerDown({\n        event: event,\n        handleId: handleId,\n        nodeId: nodeId,\n        onConnect: onConnectExtended,\n        isTarget: isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid\n      });\n    }\n    if (isMouseTriggered) {\n      onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown(event);\n    } else {\n      onTouchStart === null || onTouchStart === void 0 ? void 0 : onTouchStart(event);\n    }\n  };\n  var onClick = function onClick(event) {\n    var _store$getState4 = store.getState(),\n      onClickConnectStart = _store$getState4.onClickConnectStart,\n      onClickConnectEnd = _store$getState4.onClickConnectEnd,\n      connectionClickStartHandle = _store$getState4.connectionClickStartHandle,\n      connectionMode = _store$getState4.connectionMode,\n      isValidConnectionStore = _store$getState4.isValidConnection;\n    if (!nodeId || !connectionClickStartHandle && !isConnectableStart) {\n      return;\n    }\n    if (!connectionClickStartHandle) {\n      onClickConnectStart === null || onClickConnectStart === void 0 ? void 0 : onClickConnectStart(event, {\n        nodeId: nodeId,\n        handleId: handleId,\n        handleType: type\n      });\n      store.setState({\n        connectionClickStartHandle: {\n          nodeId: nodeId,\n          type: type,\n          handleId: handleId\n        }\n      });\n      return;\n    }\n    var doc = getHostForElement(event.target);\n    var isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n    var _isValidHandle = isValidHandle(event, {\n        nodeId: nodeId,\n        id: handleId,\n        type: type\n      }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc),\n      connection = _isValidHandle.connection,\n      isValid = _isValidHandle.isValid;\n    if (isValid) {\n      onConnectExtended(connection);\n    }\n    onClickConnectEnd === null || onClickConnectEnd === void 0 ? void 0 : onClickConnectEnd(event);\n    store.setState({\n      connectionClickStartHandle: null\n    });\n  };\n  return jsx(\"div\", _objectSpread(_objectSpread({\n    \"data-handleid\": handleId,\n    \"data-nodeid\": nodeId,\n    \"data-handlepos\": position,\n    \"data-id\": \"\".concat(nodeId, \"-\").concat(handleId, \"-\").concat(type),\n    className: cc(['react-flow__handle', \"react-flow__handle-\".concat(position), 'nodrag', noPanClassName, className, {\n      source: !isTarget,\n      target: isTarget,\n      connectable: isConnectable,\n      connectablestart: isConnectableStart,\n      connectableend: isConnectableEnd,\n      connecting: clickConnecting,\n      // this class is used to style the handle when the user is connecting\n      connectionindicator: isConnectable && (isConnectableStart && !connecting || isConnectableEnd && connecting)\n    }]),\n    onMouseDown: onPointerDown,\n    onTouchStart: onPointerDown,\n    onClick: connectOnClick ? onClick : undefined,\n    ref: ref\n  }, rest), {}, {\n    children: children\n  }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\nvar DefaultNode = function DefaultNode(_ref35) {\n  var data = _ref35.data,\n    isConnectable = _ref35.isConnectable,\n    _ref35$targetPosition = _ref35.targetPosition,\n    targetPosition = _ref35$targetPosition === void 0 ? Position.Top : _ref35$targetPosition,\n    _ref35$sourcePosition = _ref35.sourcePosition,\n    sourcePosition = _ref35$sourcePosition === void 0 ? Position.Bottom : _ref35$sourcePosition;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data === null || data === void 0 ? void 0 : data.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\nvar InputNode = function InputNode(_ref36) {\n  var data = _ref36.data,\n    isConnectable = _ref36.isConnectable,\n    _ref36$sourcePosition = _ref36.sourcePosition,\n    sourcePosition = _ref36$sourcePosition === void 0 ? Position.Bottom : _ref36$sourcePosition;\n  return jsxs(Fragment, {\n    children: [data === null || data === void 0 ? void 0 : data.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\nvar OutputNode = function OutputNode(_ref37) {\n  var data = _ref37.data,\n    isConnectable = _ref37.isConnectable,\n    _ref37$targetPosition = _ref37.targetPosition,\n    targetPosition = _ref37$targetPosition === void 0 ? Position.Top : _ref37$targetPosition;\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data === null || data === void 0 ? void 0 : data.label]\n  });\n};\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\nvar GroupNode = function GroupNode() {\n  return null;\n};\nGroupNode.displayName = 'GroupNode';\nvar selector$e = function selector$e(s) {\n  return {\n    selectedNodes: s.getNodes().filter(function (n) {\n      return n.selected;\n    }),\n    selectedEdges: s.edges.filter(function (e) {\n      return e.selected;\n    })\n  };\n};\nvar selectId = function selectId(obj) {\n  return obj.id;\n};\nfunction areEqual(a, b) {\n  return shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) && shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nvar SelectionListener = memo(function (_ref38) {\n  var onSelectionChange = _ref38.onSelectionChange;\n  var store = useStoreApi();\n  var _useStore3 = useStore(selector$e, areEqual),\n    selectedNodes = _useStore3.selectedNodes,\n    selectedEdges = _useStore3.selectedEdges;\n  useEffect(function () {\n    var _store$getState$onSel, _store$getState5;\n    var params = {\n      nodes: selectedNodes,\n      edges: selectedEdges\n    };\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(params);\n    (_store$getState$onSel = (_store$getState5 = store.getState()).onSelectionChange) === null || _store$getState$onSel === void 0 ? void 0 : _store$getState$onSel.call(_store$getState5, params);\n  }, [selectedNodes, selectedEdges, onSelectionChange]);\n  return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nvar changeSelector = function changeSelector(s) {\n  return !!s.onSelectionChange;\n};\nfunction Wrapper$1(_ref39) {\n  var onSelectionChange = _ref39.onSelectionChange;\n  var storeHasSelectionChange = useStore(changeSelector);\n  if (onSelectionChange || storeHasSelectionChange) {\n    return jsx(SelectionListener, {\n      onSelectionChange: onSelectionChange\n    });\n  }\n  return null;\n}\nvar selector$d = function selector$d(s) {\n  return {\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset\n  };\n};\nfunction useStoreUpdater(value, setStoreState) {\n  useEffect(function () {\n    if (typeof value !== 'undefined') {\n      setStoreState(value);\n    }\n  }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n  useEffect(function () {\n    if (typeof value !== 'undefined') {\n      setState(_defineProperty({}, key, value));\n    }\n  }, [value]);\n}\nvar StoreUpdater = function StoreUpdater(_ref40) {\n  var nodes = _ref40.nodes,\n    edges = _ref40.edges,\n    defaultNodes = _ref40.defaultNodes,\n    defaultEdges = _ref40.defaultEdges,\n    onConnect = _ref40.onConnect,\n    onConnectStart = _ref40.onConnectStart,\n    onConnectEnd = _ref40.onConnectEnd,\n    onClickConnectStart = _ref40.onClickConnectStart,\n    onClickConnectEnd = _ref40.onClickConnectEnd,\n    nodesDraggable = _ref40.nodesDraggable,\n    nodesConnectable = _ref40.nodesConnectable,\n    nodesFocusable = _ref40.nodesFocusable,\n    edgesFocusable = _ref40.edgesFocusable,\n    edgesUpdatable = _ref40.edgesUpdatable,\n    elevateNodesOnSelect = _ref40.elevateNodesOnSelect,\n    minZoom = _ref40.minZoom,\n    maxZoom = _ref40.maxZoom,\n    nodeExtent = _ref40.nodeExtent,\n    onNodesChange = _ref40.onNodesChange,\n    onEdgesChange = _ref40.onEdgesChange,\n    elementsSelectable = _ref40.elementsSelectable,\n    connectionMode = _ref40.connectionMode,\n    snapGrid = _ref40.snapGrid,\n    snapToGrid = _ref40.snapToGrid,\n    translateExtent = _ref40.translateExtent,\n    connectOnClick = _ref40.connectOnClick,\n    defaultEdgeOptions = _ref40.defaultEdgeOptions,\n    fitView = _ref40.fitView,\n    fitViewOptions = _ref40.fitViewOptions,\n    onNodesDelete = _ref40.onNodesDelete,\n    onEdgesDelete = _ref40.onEdgesDelete,\n    onNodeDrag = _ref40.onNodeDrag,\n    onNodeDragStart = _ref40.onNodeDragStart,\n    onNodeDragStop = _ref40.onNodeDragStop,\n    onSelectionDrag = _ref40.onSelectionDrag,\n    onSelectionDragStart = _ref40.onSelectionDragStart,\n    onSelectionDragStop = _ref40.onSelectionDragStop,\n    noPanClassName = _ref40.noPanClassName,\n    nodeOrigin = _ref40.nodeOrigin,\n    rfId = _ref40.rfId,\n    autoPanOnConnect = _ref40.autoPanOnConnect,\n    autoPanOnNodeDrag = _ref40.autoPanOnNodeDrag,\n    onError = _ref40.onError,\n    connectionRadius = _ref40.connectionRadius,\n    isValidConnection = _ref40.isValidConnection;\n  var _useStore4 = useStore(selector$d, shallow),\n    setNodes = _useStore4.setNodes,\n    setEdges = _useStore4.setEdges,\n    setDefaultNodesAndEdges = _useStore4.setDefaultNodesAndEdges,\n    setMinZoom = _useStore4.setMinZoom,\n    setMaxZoom = _useStore4.setMaxZoom,\n    setTranslateExtent = _useStore4.setTranslateExtent,\n    setNodeExtent = _useStore4.setNodeExtent,\n    reset = _useStore4.reset;\n  var store = useStoreApi();\n  useEffect(function () {\n    var edgesWithDefaults = defaultEdges === null || defaultEdges === void 0 ? void 0 : defaultEdges.map(function (e) {\n      return _objectSpread(_objectSpread({}, e), defaultEdgeOptions);\n    });\n    setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n    return function () {\n      reset();\n    };\n  }, []);\n  useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n  useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n  useDirectStoreUpdater('onConnect', onConnect, store.setState);\n  useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n  useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n  useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n  useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n  useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n  useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n  useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n  useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n  useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n  useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n  useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n  useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n  useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n  useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n  useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n  useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n  useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n  useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n  useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n  useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n  useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n  useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n  useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n  useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n  useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n  useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n  useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n  useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n  useDirectStoreUpdater('rfId', rfId, store.setState);\n  useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n  useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n  useDirectStoreUpdater('onError', onError, store.setState);\n  useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n  useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n  useStoreUpdater(nodes, setNodes);\n  useStoreUpdater(edges, setEdges);\n  useStoreUpdater(minZoom, setMinZoom);\n  useStoreUpdater(maxZoom, setMaxZoom);\n  useStoreUpdater(translateExtent, setTranslateExtent);\n  useStoreUpdater(nodeExtent, setNodeExtent);\n  return null;\n};\nvar style = {\n  display: 'none'\n};\nvar ariaLiveStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0px, 0px, 0px, 0px)',\n  clipPath: 'inset(100%)'\n};\nvar ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nvar ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nvar ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nvar selector$c = function selector$c(s) {\n  return s.ariaLiveMessage;\n};\nfunction AriaLiveMessage(_ref41) {\n  var rfId = _ref41.rfId;\n  var ariaLiveMessage = useStore(selector$c);\n  return jsx(\"div\", {\n    id: \"\".concat(ARIA_LIVE_MESSAGE, \"-\").concat(rfId),\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    style: ariaLiveStyle,\n    children: ariaLiveMessage\n  });\n}\nfunction A11yDescriptions(_ref42) {\n  var rfId = _ref42.rfId,\n    disableKeyboardA11y = _ref42.disableKeyboardA11y;\n  return jsxs(Fragment, {\n    children: [jsxs(\"div\", {\n      id: \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n      style: style,\n      children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' ']\n    }), jsx(\"div\", {\n      id: \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId),\n      style: style,\n      children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"\n    }), !disableKeyboardA11y && jsx(AriaLiveMessage, {\n      rfId: rfId\n    })]\n  });\n}\nvar shiftX = function shiftX(x, shift, position) {\n  if (position === Position.Left) return x - shift;\n  if (position === Position.Right) return x + shift;\n  return x;\n};\nvar shiftY = function shiftY(y, shift, position) {\n  if (position === Position.Top) return y - shift;\n  if (position === Position.Bottom) return y + shift;\n  return y;\n};\nvar EdgeUpdaterClassName = 'react-flow__edgeupdater';\nvar EdgeAnchor = function EdgeAnchor(_ref43) {\n  var position = _ref43.position,\n    centerX = _ref43.centerX,\n    centerY = _ref43.centerY,\n    _ref43$radius = _ref43.radius,\n    radius = _ref43$radius === void 0 ? 10 : _ref43$radius,\n    onMouseDown = _ref43.onMouseDown,\n    onMouseEnter = _ref43.onMouseEnter,\n    onMouseOut = _ref43.onMouseOut,\n    type = _ref43.type;\n  return jsx(\"circle\", {\n    onMouseDown: onMouseDown,\n    onMouseEnter: onMouseEnter,\n    onMouseOut: onMouseOut,\n    className: cc([EdgeUpdaterClassName, \"\".concat(EdgeUpdaterClassName, \"-\").concat(type)]),\n    cx: shiftX(centerX, radius, position),\n    cy: shiftY(centerY, radius, position),\n    r: radius,\n    stroke: \"transparent\",\n    fill: \"transparent\"\n  });\n};\nvar alwaysValidConnection = function alwaysValidConnection() {\n  return true;\n};\nvar wrapEdge = function wrapEdge(EdgeComponent) {\n  var EdgeWrapper = function EdgeWrapper(_ref44) {\n    var id = _ref44.id,\n      className = _ref44.className,\n      type = _ref44.type,\n      data = _ref44.data,\n      onClick = _ref44.onClick,\n      onEdgeDoubleClick = _ref44.onEdgeDoubleClick,\n      selected = _ref44.selected,\n      animated = _ref44.animated,\n      label = _ref44.label,\n      labelStyle = _ref44.labelStyle,\n      labelShowBg = _ref44.labelShowBg,\n      labelBgStyle = _ref44.labelBgStyle,\n      labelBgPadding = _ref44.labelBgPadding,\n      labelBgBorderRadius = _ref44.labelBgBorderRadius,\n      style = _ref44.style,\n      source = _ref44.source,\n      target = _ref44.target,\n      sourceX = _ref44.sourceX,\n      sourceY = _ref44.sourceY,\n      targetX = _ref44.targetX,\n      targetY = _ref44.targetY,\n      sourcePosition = _ref44.sourcePosition,\n      targetPosition = _ref44.targetPosition,\n      elementsSelectable = _ref44.elementsSelectable,\n      hidden = _ref44.hidden,\n      sourceHandleId = _ref44.sourceHandleId,\n      targetHandleId = _ref44.targetHandleId,\n      onContextMenu = _ref44.onContextMenu,\n      onMouseEnter = _ref44.onMouseEnter,\n      onMouseMove = _ref44.onMouseMove,\n      onMouseLeave = _ref44.onMouseLeave,\n      edgeUpdaterRadius = _ref44.edgeUpdaterRadius,\n      onEdgeUpdate = _ref44.onEdgeUpdate,\n      onEdgeUpdateStart = _ref44.onEdgeUpdateStart,\n      onEdgeUpdateEnd = _ref44.onEdgeUpdateEnd,\n      markerEnd = _ref44.markerEnd,\n      markerStart = _ref44.markerStart,\n      rfId = _ref44.rfId,\n      ariaLabel = _ref44.ariaLabel,\n      isFocusable = _ref44.isFocusable,\n      isUpdatable = _ref44.isUpdatable,\n      pathOptions = _ref44.pathOptions,\n      interactionWidth = _ref44.interactionWidth;\n    var edgeRef = useRef(null);\n    var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateHover = _useState4[0],\n      setUpdateHover = _useState4[1];\n    var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updating = _useState6[0],\n      setUpdating = _useState6[1];\n    var store = useStoreApi();\n    var markerStartUrl = useMemo(function () {\n      return \"url(#\".concat(getMarkerId(markerStart, rfId), \")\");\n    }, [markerStart, rfId]);\n    var markerEndUrl = useMemo(function () {\n      return \"url(#\".concat(getMarkerId(markerEnd, rfId), \")\");\n    }, [markerEnd, rfId]);\n    if (hidden) {\n      return null;\n    }\n    var onEdgeClick = function onEdgeClick(event) {\n      var _store$getState6 = store.getState(),\n        edges = _store$getState6.edges,\n        addSelectedEdges = _store$getState6.addSelectedEdges;\n      if (elementsSelectable) {\n        store.setState({\n          nodesSelectionActive: false\n        });\n        addSelectedEdges([id]);\n      }\n      if (onClick) {\n        var edge = edges.find(function (e) {\n          return e.id === id;\n        });\n        onClick(event, edge);\n      }\n    };\n    var onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n    var onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n    var onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n    var onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n    var onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n    var handleEdgeUpdater = function handleEdgeUpdater(event, isSourceHandle) {\n      // avoid triggering edge updater if mouse btn is not left\n      if (event.button !== 0) {\n        return;\n      }\n      var _store$getState7 = store.getState(),\n        edges = _store$getState7.edges,\n        isValidConnectionStore = _store$getState7.isValidConnection;\n      var nodeId = isSourceHandle ? target : source;\n      var handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n      var handleType = isSourceHandle ? 'target' : 'source';\n      var isValidConnection = isValidConnectionStore || alwaysValidConnection;\n      var isTarget = isSourceHandle;\n      var edge = edges.find(function (e) {\n        return e.id === id;\n      });\n      setUpdating(true);\n      onEdgeUpdateStart === null || onEdgeUpdateStart === void 0 ? void 0 : onEdgeUpdateStart(event, edge, handleType);\n      var _onEdgeUpdateEnd = function _onEdgeUpdateEnd(evt) {\n        setUpdating(false);\n        onEdgeUpdateEnd === null || onEdgeUpdateEnd === void 0 ? void 0 : onEdgeUpdateEnd(evt, edge, handleType);\n      };\n      var onConnectEdge = function onConnectEdge(connection) {\n        return onEdgeUpdate === null || onEdgeUpdate === void 0 ? void 0 : onEdgeUpdate(edge, connection);\n      };\n      handlePointerDown({\n        event: event,\n        handleId: handleId,\n        nodeId: nodeId,\n        onConnect: onConnectEdge,\n        isTarget: isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection,\n        edgeUpdaterType: handleType,\n        onEdgeUpdateEnd: _onEdgeUpdateEnd\n      });\n    };\n    var onEdgeUpdaterSourceMouseDown = function onEdgeUpdaterSourceMouseDown(event) {\n      return handleEdgeUpdater(event, true);\n    };\n    var onEdgeUpdaterTargetMouseDown = function onEdgeUpdaterTargetMouseDown(event) {\n      return handleEdgeUpdater(event, false);\n    };\n    var onEdgeUpdaterMouseEnter = function onEdgeUpdaterMouseEnter() {\n      return setUpdateHover(true);\n    };\n    var onEdgeUpdaterMouseOut = function onEdgeUpdaterMouseOut() {\n      return setUpdateHover(false);\n    };\n    var inactive = !elementsSelectable && !onClick;\n    var onKeyDown = function onKeyDown(event) {\n      if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n        var _store$getState8 = store.getState(),\n          unselectNodesAndEdges = _store$getState8.unselectNodesAndEdges,\n          addSelectedEdges = _store$getState8.addSelectedEdges,\n          edges = _store$getState8.edges;\n        var unselect = event.key === 'Escape';\n        if (unselect) {\n          var _edgeRef$current;\n          (_edgeRef$current = edgeRef.current) === null || _edgeRef$current === void 0 ? void 0 : _edgeRef$current.blur();\n          unselectNodesAndEdges({\n            edges: [edges.find(function (e) {\n              return e.id === id;\n            })]\n          });\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n    };\n    return jsxs(\"g\", {\n      className: cc(['react-flow__edge', \"react-flow__edge-\".concat(type), className, {\n        selected: selected,\n        animated: animated,\n        inactive: inactive,\n        updating: updateHover\n      }]),\n      onClick: onEdgeClick,\n      onDoubleClick: onEdgeDoubleClickHandler,\n      onContextMenu: onEdgeContextMenu,\n      onMouseEnter: onEdgeMouseEnter,\n      onMouseMove: onEdgeMouseMove,\n      onMouseLeave: onEdgeMouseLeave,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"data-testid\": \"rf__edge-\".concat(id),\n      \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : \"Edge from \".concat(source, \" to \").concat(target),\n      \"aria-describedby\": isFocusable ? \"\".concat(ARIA_EDGE_DESC_KEY, \"-\").concat(rfId) : undefined,\n      ref: edgeRef,\n      children: [!updating && jsx(EdgeComponent, {\n        id: id,\n        source: source,\n        target: target,\n        selected: selected,\n        animated: animated,\n        label: label,\n        labelStyle: labelStyle,\n        labelShowBg: labelShowBg,\n        labelBgStyle: labelBgStyle,\n        labelBgPadding: labelBgPadding,\n        labelBgBorderRadius: labelBgBorderRadius,\n        data: data,\n        style: style,\n        sourceX: sourceX,\n        sourceY: sourceY,\n        targetX: targetX,\n        targetY: targetY,\n        sourcePosition: sourcePosition,\n        targetPosition: targetPosition,\n        sourceHandleId: sourceHandleId,\n        targetHandleId: targetHandleId,\n        markerStart: markerStartUrl,\n        markerEnd: markerEndUrl,\n        pathOptions: pathOptions,\n        interactionWidth: interactionWidth\n      }), isUpdatable && jsxs(Fragment, {\n        children: [(isUpdatable === 'source' || isUpdatable === true) && jsx(EdgeAnchor, {\n          position: sourcePosition,\n          centerX: sourceX,\n          centerY: sourceY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterSourceMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"source\"\n        }), (isUpdatable === 'target' || isUpdatable === true) && jsx(EdgeAnchor, {\n          position: targetPosition,\n          centerX: targetX,\n          centerY: targetY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterTargetMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"target\"\n        })]\n      })]\n    });\n  };\n  EdgeWrapper.displayName = 'EdgeWrapper';\n  return memo(EdgeWrapper);\n};\nfunction createEdgeTypes(edgeTypes) {\n  var standardTypes = {\n    default: wrapEdge(edgeTypes.default || BezierEdge),\n    straight: wrapEdge(edgeTypes.bezier || StraightEdge),\n    step: wrapEdge(edgeTypes.step || StepEdge),\n    smoothstep: wrapEdge(edgeTypes.step || SmoothStepEdge),\n    simplebezier: wrapEdge(edgeTypes.simplebezier || SimpleBezierEdge)\n  };\n  var wrappedTypes = {};\n  var specialTypes = Object.keys(edgeTypes).filter(function (k) {\n    return !['default', 'bezier'].includes(k);\n  }).reduce(function (res, key) {\n    res[key] = wrapEdge(edgeTypes[key] || BezierEdge);\n    return res;\n  }, wrappedTypes);\n  return _objectSpread(_objectSpread({}, standardTypes), specialTypes);\n}\nfunction getHandlePosition(position, nodeRect) {\n  var handle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var x = ((handle === null || handle === void 0 ? void 0 : handle.x) || 0) + nodeRect.x;\n  var y = ((handle === null || handle === void 0 ? void 0 : handle.y) || 0) + nodeRect.y;\n  var width = (handle === null || handle === void 0 ? void 0 : handle.width) || nodeRect.width;\n  var height = (handle === null || handle === void 0 ? void 0 : handle.height) || nodeRect.height;\n  switch (position) {\n    case Position.Top:\n      return {\n        x: x + width / 2,\n        y: y\n      };\n    case Position.Right:\n      return {\n        x: x + width,\n        y: y + height / 2\n      };\n    case Position.Bottom:\n      return {\n        x: x + width / 2,\n        y: y + height\n      };\n    case Position.Left:\n      return {\n        x: x,\n        y: y + height / 2\n      };\n  }\n}\nfunction getHandle(bounds, handleId) {\n  if (!bounds) {\n    return null;\n  }\n  if (bounds.length === 1 || !handleId) {\n    return bounds[0];\n  } else if (handleId) {\n    return bounds.find(function (d) {\n      return d.id === handleId;\n    }) || null;\n  }\n  return null;\n}\nvar getEdgePositions = function getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) {\n  var sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n  var targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n  return {\n    sourceX: sourceHandlePos.x,\n    sourceY: sourceHandlePos.y,\n    targetX: targetHandlePos.x,\n    targetY: targetHandlePos.y\n  };\n};\nfunction isEdgeVisible(_ref45) {\n  var sourcePos = _ref45.sourcePos,\n    targetPos = _ref45.targetPos,\n    sourceWidth = _ref45.sourceWidth,\n    sourceHeight = _ref45.sourceHeight,\n    targetWidth = _ref45.targetWidth,\n    targetHeight = _ref45.targetHeight,\n    width = _ref45.width,\n    height = _ref45.height,\n    transform = _ref45.transform;\n  var edgeBox = {\n    x: Math.min(sourcePos.x, targetPos.x),\n    y: Math.min(sourcePos.y, targetPos.y),\n    x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n    y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight)\n  };\n  if (edgeBox.x === edgeBox.x2) {\n    edgeBox.x2 += 1;\n  }\n  if (edgeBox.y === edgeBox.y2) {\n    edgeBox.y2 += 1;\n  }\n  var viewBox = rectToBox({\n    x: (0 - transform[0]) / transform[2],\n    y: (0 - transform[1]) / transform[2],\n    width: width / transform[2],\n    height: height / transform[2]\n  });\n  var xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n  var yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n  var overlappingArea = Math.ceil(xOverlap * yOverlap);\n  return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n  var _node$internalsSymbol, _node$positionAbsolut5, _node$positionAbsolut6, _node$positionAbsolut7, _node$positionAbsolut8;\n  var handleBounds = (node === null || node === void 0 ? void 0 : (_node$internalsSymbol = node[internalsSymbol]) === null || _node$internalsSymbol === void 0 ? void 0 : _node$internalsSymbol.handleBounds) || null;\n  var isValid = handleBounds && (node === null || node === void 0 ? void 0 : node.width) && (node === null || node === void 0 ? void 0 : node.height) && typeof (node === null || node === void 0 ? void 0 : (_node$positionAbsolut5 = node.positionAbsolute) === null || _node$positionAbsolut5 === void 0 ? void 0 : _node$positionAbsolut5.x) !== 'undefined' && typeof (node === null || node === void 0 ? void 0 : (_node$positionAbsolut6 = node.positionAbsolute) === null || _node$positionAbsolut6 === void 0 ? void 0 : _node$positionAbsolut6.y) !== 'undefined';\n  return [{\n    x: (node === null || node === void 0 ? void 0 : (_node$positionAbsolut7 = node.positionAbsolute) === null || _node$positionAbsolut7 === void 0 ? void 0 : _node$positionAbsolut7.x) || 0,\n    y: (node === null || node === void 0 ? void 0 : (_node$positionAbsolut8 = node.positionAbsolute) === null || _node$positionAbsolut8 === void 0 ? void 0 : _node$positionAbsolut8.y) || 0,\n    width: (node === null || node === void 0 ? void 0 : node.width) || 0,\n    height: (node === null || node === void 0 ? void 0 : node.height) || 0\n  }, handleBounds, !!isValid];\n}\nfunction isParentSelected(node, nodeInternals) {\n  if (!node.parentNode) {\n    return false;\n  }\n  var parentNode = nodeInternals.get(node.parentNode);\n  if (!parentNode) {\n    return false;\n  }\n  if (parentNode.selected) {\n    return true;\n  }\n  return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n  var current = target;\n  do {\n    var _current;\n    if ((_current = current) !== null && _current !== void 0 && _current.matches(selector)) return true;\n    if (current === nodeRef.current) return false;\n    current = current.parentElement;\n  } while (current);\n  return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n  return Array.from(nodeInternals.values()).filter(function (n) {\n    return (n.selected || n.id === nodeId) && (!n.parentNode || !isParentSelected(n, nodeInternals)) && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined');\n  }).map(function (n) {\n    var _n$positionAbsolute$x, _n$positionAbsolute, _n$positionAbsolute$y, _n$positionAbsolute2;\n    return {\n      id: n.id,\n      position: n.position || {\n        x: 0,\n        y: 0\n      },\n      positionAbsolute: n.positionAbsolute || {\n        x: 0,\n        y: 0\n      },\n      distance: {\n        x: mousePos.x - ((_n$positionAbsolute$x = (_n$positionAbsolute = n.positionAbsolute) === null || _n$positionAbsolute === void 0 ? void 0 : _n$positionAbsolute.x) !== null && _n$positionAbsolute$x !== void 0 ? _n$positionAbsolute$x : 0),\n        y: mousePos.y - ((_n$positionAbsolute$y = (_n$positionAbsolute2 = n.positionAbsolute) === null || _n$positionAbsolute2 === void 0 ? void 0 : _n$positionAbsolute2.y) !== null && _n$positionAbsolute$y !== void 0 ? _n$positionAbsolute$y : 0)\n      },\n      delta: {\n        x: 0,\n        y: 0\n      },\n      extent: n.extent,\n      parentNode: n.parentNode,\n      width: n.width,\n      height: n.height\n    };\n  });\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent) {\n  var nodeOrigin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [0, 0];\n  var onError = arguments.length > 5 ? arguments[5] : undefined;\n  var currentExtent = node.extent || nodeExtent;\n  if (node.extent === 'parent') {\n    if (node.parentNode && node.width && node.height) {\n      var parent = nodeInternals.get(node.parentNode);\n      var _getNodePositionWithO3 = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute,\n        parentX = _getNodePositionWithO3.x,\n        parentY = _getNodePositionWithO3.y;\n      currentExtent = parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height) ? [[parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]], [parentX + parent.width - node.width + node.width * nodeOrigin[0], parentY + parent.height - node.height + node.height * nodeOrigin[1]]] : currentExtent;\n    } else {\n      onError === null || onError === void 0 ? void 0 : onError('005', errorMessages['error005']());\n      currentExtent = nodeExtent;\n    }\n  } else if (node.extent && node.parentNode) {\n    var _parent = nodeInternals.get(node.parentNode);\n    var _getNodePositionWithO4 = getNodePositionWithOrigin(_parent, nodeOrigin).positionAbsolute,\n      _parentX = _getNodePositionWithO4.x,\n      _parentY = _getNodePositionWithO4.y;\n    currentExtent = [[node.extent[0][0] + _parentX, node.extent[0][1] + _parentY], [node.extent[1][0] + _parentX, node.extent[1][1] + _parentY]];\n  }\n  var parentPosition = {\n    x: 0,\n    y: 0\n  };\n  if (node.parentNode) {\n    var parentNode = nodeInternals.get(node.parentNode);\n    parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n  }\n  var positionAbsolute = currentExtent ? clampPosition(nextPosition, currentExtent) : nextPosition;\n  return {\n    position: {\n      x: positionAbsolute.x - parentPosition.x,\n      y: positionAbsolute.y - parentPosition.y\n    },\n    positionAbsolute: positionAbsolute\n  };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams(_ref46) {\n  var nodeId = _ref46.nodeId,\n    dragItems = _ref46.dragItems,\n    nodeInternals = _ref46.nodeInternals;\n  var extentedDragItems = dragItems.map(function (n) {\n    var node = nodeInternals.get(n.id);\n    return _objectSpread(_objectSpread({}, node), {}, {\n      position: n.position,\n      positionAbsolute: n.positionAbsolute\n    });\n  });\n  return [nodeId ? extentedDragItems.find(function (n) {\n    return n.id === nodeId;\n  }) : extentedDragItems[0], extentedDragItems];\n}\nvar getHandleBounds = function getHandleBounds(selector, nodeElement, zoom, nodeOrigin) {\n  var handles = nodeElement.querySelectorAll(selector);\n  if (!handles || !handles.length) {\n    return null;\n  }\n  var handlesArray = Array.from(handles);\n  var nodeBounds = nodeElement.getBoundingClientRect();\n  var nodeOffset = {\n    x: nodeBounds.width * nodeOrigin[0],\n    y: nodeBounds.height * nodeOrigin[1]\n  };\n  return handlesArray.map(function (handle) {\n    var handleBounds = handle.getBoundingClientRect();\n    return _objectSpread({\n      id: handle.getAttribute('data-handleid'),\n      position: handle.getAttribute('data-handlepos'),\n      x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n      y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom\n    }, getDimensions(handle));\n  });\n};\nfunction getMouseHandler(id, getState, handler) {\n  return handler === undefined ? handler : function (event) {\n    var node = getState().nodeInternals.get(id);\n    handler(event, _objectSpread({}, node));\n  };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick(_ref47) {\n  var id = _ref47.id,\n    store = _ref47.store,\n    _ref47$unselect = _ref47.unselect,\n    unselect = _ref47$unselect === void 0 ? false : _ref47$unselect,\n    nodeRef = _ref47.nodeRef;\n  var _store$getState9 = store.getState(),\n    addSelectedNodes = _store$getState9.addSelectedNodes,\n    unselectNodesAndEdges = _store$getState9.unselectNodesAndEdges,\n    multiSelectionActive = _store$getState9.multiSelectionActive,\n    nodeInternals = _store$getState9.nodeInternals;\n  var node = nodeInternals.get(id);\n  store.setState({\n    nodesSelectionActive: false\n  });\n  if (!node.selected) {\n    addSelectedNodes([id]);\n  } else if (unselect || node.selected && multiSelectionActive) {\n    unselectNodesAndEdges({\n      nodes: [node]\n    });\n    requestAnimationFrame(function () {\n      var _nodeRef$current;\n      return nodeRef === null || nodeRef === void 0 ? void 0 : (_nodeRef$current = nodeRef.current) === null || _nodeRef$current === void 0 ? void 0 : _nodeRef$current.blur();\n    });\n  }\n}\nfunction useGetPointerPosition() {\n  var store = useStoreApi();\n  // returns the pointer position projected to the RF coordinate system\n  var getPointerPosition = useCallback(function (_ref48) {\n    var sourceEvent = _ref48.sourceEvent;\n    var _store$getState10 = store.getState(),\n      transform = _store$getState10.transform,\n      snapGrid = _store$getState10.snapGrid,\n      snapToGrid = _store$getState10.snapToGrid;\n    var x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n    var y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n    var pointerPos = {\n      x: (x - transform[0]) / transform[2],\n      y: (y - transform[1]) / transform[2]\n    };\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return _objectSpread({\n      xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n      ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y\n    }, pointerPos);\n  }, []);\n  return getPointerPosition;\n}\nfunction wrapSelectionDragFunc(selectionFunc) {\n  return function (event, _, nodes) {\n    return selectionFunc === null || selectionFunc === void 0 ? void 0 : selectionFunc(event, nodes);\n  };\n}\nfunction useDrag(_ref49) {\n  var nodeRef = _ref49.nodeRef,\n    _ref49$disabled = _ref49.disabled,\n    disabled = _ref49$disabled === void 0 ? false : _ref49$disabled,\n    noDragClassName = _ref49.noDragClassName,\n    handleSelector = _ref49.handleSelector,\n    nodeId = _ref49.nodeId,\n    isSelectable = _ref49.isSelectable,\n    selectNodesOnDrag = _ref49.selectNodesOnDrag;\n  var store = useStoreApi();\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    dragging = _useState8[0],\n    setDragging = _useState8[1];\n  var dragItems = useRef([]);\n  var lastPos = useRef({\n    x: null,\n    y: null\n  });\n  var autoPanId = useRef(0);\n  var containerBounds = useRef(null);\n  var mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  var dragEvent = useRef(null);\n  var autoPanStarted = useRef(false);\n  var getPointerPosition = useGetPointerPosition();\n  useEffect(function () {\n    if (nodeRef !== null && nodeRef !== void 0 && nodeRef.current) {\n      var selection = select(nodeRef.current);\n      var updateNodes = function updateNodes(_ref50) {\n        var x = _ref50.x,\n          y = _ref50.y;\n        var _store$getState11 = store.getState(),\n          nodeInternals = _store$getState11.nodeInternals,\n          onNodeDrag = _store$getState11.onNodeDrag,\n          onSelectionDrag = _store$getState11.onSelectionDrag,\n          updateNodePositions = _store$getState11.updateNodePositions,\n          nodeExtent = _store$getState11.nodeExtent,\n          snapGrid = _store$getState11.snapGrid,\n          snapToGrid = _store$getState11.snapToGrid,\n          nodeOrigin = _store$getState11.nodeOrigin,\n          onError = _store$getState11.onError;\n        lastPos.current = {\n          x: x,\n          y: y\n        };\n        var hasChange = false;\n        dragItems.current = dragItems.current.map(function (n) {\n          var nextPosition = {\n            x: x - n.distance.x,\n            y: y - n.distance.y\n          };\n          if (snapToGrid) {\n            nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n            nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n          }\n          var updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, nodeOrigin, onError);\n          // we want to make sure that we only fire a change event when there is a changes\n          hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n          n.position = updatedPos.position;\n          n.positionAbsolute = updatedPos.positionAbsolute;\n          return n;\n        });\n        if (!hasChange) {\n          return;\n        }\n        updateNodePositions(dragItems.current, true, true);\n        setDragging(true);\n        var onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n        if (onDrag && dragEvent.current) {\n          var _getEventHandlerParam = getEventHandlerParams({\n              nodeId: nodeId,\n              dragItems: dragItems.current,\n              nodeInternals: nodeInternals\n            }),\n            _getEventHandlerParam2 = _slicedToArray(_getEventHandlerParam, 2),\n            currentNode = _getEventHandlerParam2[0],\n            nodes = _getEventHandlerParam2[1];\n          onDrag(dragEvent.current, currentNode, nodes);\n        }\n      };\n      var autoPan = function autoPan() {\n        if (!containerBounds.current) {\n          return;\n        }\n        var _calcAutoPan3 = calcAutoPan(mousePosition.current, containerBounds.current),\n          _calcAutoPan4 = _slicedToArray(_calcAutoPan3, 2),\n          xMovement = _calcAutoPan4[0],\n          yMovement = _calcAutoPan4[1];\n        if (xMovement !== 0 || yMovement !== 0) {\n          var _lastPos$current$x, _lastPos$current$y;\n          var _store$getState12 = store.getState(),\n            transform = _store$getState12.transform,\n            panBy = _store$getState12.panBy;\n          lastPos.current.x = ((_lastPos$current$x = lastPos.current.x) !== null && _lastPos$current$x !== void 0 ? _lastPos$current$x : 0) - xMovement / transform[2];\n          lastPos.current.y = ((_lastPos$current$y = lastPos.current.y) !== null && _lastPos$current$y !== void 0 ? _lastPos$current$y : 0) - yMovement / transform[2];\n          updateNodes(lastPos.current);\n          panBy({\n            x: xMovement,\n            y: yMovement\n          });\n        }\n        autoPanId.current = requestAnimationFrame(autoPan);\n      };\n      if (disabled) {\n        selection.on('.drag', null);\n      } else {\n        var dragHandler = drag().on('start', function (event) {\n          var _store$getState13 = store.getState(),\n            nodeInternals = _store$getState13.nodeInternals,\n            multiSelectionActive = _store$getState13.multiSelectionActive,\n            domNode = _store$getState13.domNode,\n            nodesDraggable = _store$getState13.nodesDraggable,\n            unselectNodesAndEdges = _store$getState13.unselectNodesAndEdges,\n            onNodeDragStart = _store$getState13.onNodeDragStart,\n            onSelectionDragStart = _store$getState13.onSelectionDragStart;\n          var onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n          if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n            var _nodeInternals$get;\n            if (!((_nodeInternals$get = nodeInternals.get(nodeId)) !== null && _nodeInternals$get !== void 0 && _nodeInternals$get.selected)) {\n              // we need to reset selected nodes when selectNodesOnDrag=false\n              unselectNodesAndEdges();\n            }\n          }\n          if (nodeId && isSelectable && selectNodesOnDrag) {\n            handleNodeClick({\n              id: nodeId,\n              store: store,\n              nodeRef: nodeRef\n            });\n          }\n          var pointerPos = getPointerPosition(event);\n          lastPos.current = pointerPos;\n          dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n          if (onStart && dragItems.current) {\n            var _getEventHandlerParam3 = getEventHandlerParams({\n                nodeId: nodeId,\n                dragItems: dragItems.current,\n                nodeInternals: nodeInternals\n              }),\n              _getEventHandlerParam4 = _slicedToArray(_getEventHandlerParam3, 2),\n              currentNode = _getEventHandlerParam4[0],\n              nodes = _getEventHandlerParam4[1];\n            onStart(event.sourceEvent, currentNode, nodes);\n          }\n          containerBounds.current = (domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect()) || null;\n          mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n        }).on('drag', function (event) {\n          var pointerPos = getPointerPosition(event);\n          var _store$getState14 = store.getState(),\n            autoPanOnNodeDrag = _store$getState14.autoPanOnNodeDrag;\n          if (!autoPanStarted.current && autoPanOnNodeDrag) {\n            autoPanStarted.current = true;\n            autoPan();\n          }\n          // skip events without movement\n          if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) && dragItems.current) {\n            dragEvent.current = event.sourceEvent;\n            mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n            updateNodes(pointerPos);\n          }\n        }).on('end', function (event) {\n          setDragging(false);\n          autoPanStarted.current = false;\n          cancelAnimationFrame(autoPanId.current);\n          if (dragItems.current) {\n            var _store$getState15 = store.getState(),\n              updateNodePositions = _store$getState15.updateNodePositions,\n              nodeInternals = _store$getState15.nodeInternals,\n              onNodeDragStop = _store$getState15.onNodeDragStop,\n              onSelectionDragStop = _store$getState15.onSelectionDragStop;\n            var onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n            updateNodePositions(dragItems.current, false, false);\n            if (onStop) {\n              var _getEventHandlerParam5 = getEventHandlerParams({\n                  nodeId: nodeId,\n                  dragItems: dragItems.current,\n                  nodeInternals: nodeInternals\n                }),\n                _getEventHandlerParam6 = _slicedToArray(_getEventHandlerParam5, 2),\n                currentNode = _getEventHandlerParam6[0],\n                nodes = _getEventHandlerParam6[1];\n              onStop(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).filter(function (event) {\n          var target = event.target;\n          var isDraggable = !event.button && (!noDragClassName || !hasSelector(target, \".\".concat(noDragClassName), nodeRef)) && (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n          return isDraggable;\n        });\n        selection.call(dragHandler);\n        return function () {\n          selection.on('.drag', null);\n        };\n      }\n    }\n  }, [nodeRef, disabled, noDragClassName, handleSelector, isSelectable, store, nodeId, selectNodesOnDrag, getPointerPosition]);\n  return dragging;\n}\nfunction useUpdateNodePositions() {\n  var store = useStoreApi();\n  var updatePositions = useCallback(function (params) {\n    var _store$getState16 = store.getState(),\n      nodeInternals = _store$getState16.nodeInternals,\n      nodeExtent = _store$getState16.nodeExtent,\n      updateNodePositions = _store$getState16.updateNodePositions,\n      getNodes = _store$getState16.getNodes,\n      snapToGrid = _store$getState16.snapToGrid,\n      snapGrid = _store$getState16.snapGrid,\n      onError = _store$getState16.onError,\n      nodesDraggable = _store$getState16.nodesDraggable;\n    var selectedNodes = getNodes().filter(function (n) {\n      return n.selected && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined');\n    });\n    // by default a node moves 5px on each key press, or 20px if shift is pressed\n    // if snap grid is enabled, we use that for the velocity.\n    var xVelo = snapToGrid ? snapGrid[0] : 5;\n    var yVelo = snapToGrid ? snapGrid[1] : 5;\n    var factor = params.isShiftPressed ? 4 : 1;\n    var positionDiffX = params.x * xVelo * factor;\n    var positionDiffY = params.y * yVelo * factor;\n    var nodeUpdates = selectedNodes.map(function (n) {\n      if (n.positionAbsolute) {\n        var nextPosition = {\n          x: n.positionAbsolute.x + positionDiffX,\n          y: n.positionAbsolute.y + positionDiffY\n        };\n        if (snapToGrid) {\n          nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n          nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n        }\n        var _calcNextPosition = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError),\n          positionAbsolute = _calcNextPosition.positionAbsolute,\n          position = _calcNextPosition.position;\n        n.position = position;\n        n.positionAbsolute = positionAbsolute;\n      }\n      return n;\n    });\n    updateNodePositions(nodeUpdates, true, false);\n  }, []);\n  return updatePositions;\n}\nvar arrowKeyDiffs = {\n  ArrowUp: {\n    x: 0,\n    y: -1\n  },\n  ArrowDown: {\n    x: 0,\n    y: 1\n  },\n  ArrowLeft: {\n    x: -1,\n    y: 0\n  },\n  ArrowRight: {\n    x: 1,\n    y: 0\n  }\n};\nvar wrapNode = function wrapNode(NodeComponent) {\n  var NodeWrapper = function NodeWrapper(_ref51) {\n    var id = _ref51.id,\n      type = _ref51.type,\n      data = _ref51.data,\n      xPos = _ref51.xPos,\n      yPos = _ref51.yPos,\n      xPosOrigin = _ref51.xPosOrigin,\n      yPosOrigin = _ref51.yPosOrigin,\n      selected = _ref51.selected,\n      onClick = _ref51.onClick,\n      onMouseEnter = _ref51.onMouseEnter,\n      onMouseMove = _ref51.onMouseMove,\n      onMouseLeave = _ref51.onMouseLeave,\n      onContextMenu = _ref51.onContextMenu,\n      onDoubleClick = _ref51.onDoubleClick,\n      style = _ref51.style,\n      className = _ref51.className,\n      isDraggable = _ref51.isDraggable,\n      isSelectable = _ref51.isSelectable,\n      isConnectable = _ref51.isConnectable,\n      isFocusable = _ref51.isFocusable,\n      selectNodesOnDrag = _ref51.selectNodesOnDrag,\n      sourcePosition = _ref51.sourcePosition,\n      targetPosition = _ref51.targetPosition,\n      hidden = _ref51.hidden,\n      resizeObserver = _ref51.resizeObserver,\n      dragHandle = _ref51.dragHandle,\n      zIndex = _ref51.zIndex,\n      isParent = _ref51.isParent,\n      noDragClassName = _ref51.noDragClassName,\n      noPanClassName = _ref51.noPanClassName,\n      initialized = _ref51.initialized,\n      disableKeyboardA11y = _ref51.disableKeyboardA11y,\n      ariaLabel = _ref51.ariaLabel,\n      rfId = _ref51.rfId;\n    var store = useStoreApi();\n    var nodeRef = useRef(null);\n    var prevSourcePosition = useRef(sourcePosition);\n    var prevTargetPosition = useRef(targetPosition);\n    var prevType = useRef(type);\n    var hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    var updatePositions = useUpdateNodePositions();\n    var onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n    var onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n    var onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n    var onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n    var onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n    var onSelectNodeHandler = function onSelectNodeHandler(event) {\n      if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n        // this handler gets called within the drag start event when selectNodesOnDrag=true\n        handleNodeClick({\n          id: id,\n          store: store,\n          nodeRef: nodeRef\n        });\n      }\n      if (onClick) {\n        var node = store.getState().nodeInternals.get(id);\n        onClick(event, _objectSpread({}, node));\n      }\n    };\n    var onKeyDown = function onKeyDown(event) {\n      if (isInputDOMNode(event)) {\n        return;\n      }\n      if (elementSelectionKeys.includes(event.key) && isSelectable) {\n        var unselect = event.key === 'Escape';\n        handleNodeClick({\n          id: id,\n          store: store,\n          unselect: unselect,\n          nodeRef: nodeRef\n        });\n      } else if (!disableKeyboardA11y && isDraggable && selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n        store.setState({\n          ariaLiveMessage: \"Moved selected node \".concat(event.key.replace('Arrow', '').toLowerCase(), \". New position, x: \").concat(~~xPos, \", y: \").concat(~~yPos)\n        });\n        updatePositions({\n          x: arrowKeyDiffs[event.key].x,\n          y: arrowKeyDiffs[event.key].y,\n          isShiftPressed: event.shiftKey\n        });\n      }\n    };\n    useEffect(function () {\n      if (nodeRef.current && !hidden) {\n        var currNode = nodeRef.current;\n        resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.observe(currNode);\n        return function () {\n          return resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.unobserve(currNode);\n        };\n      }\n    }, [hidden]);\n    useEffect(function () {\n      // when the user programmatically changes the source or handle position, we re-initialize the node\n      var typeChanged = prevType.current !== type;\n      var sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n      var targetPosChanged = prevTargetPosition.current !== targetPosition;\n      if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n        if (typeChanged) {\n          prevType.current = type;\n        }\n        if (sourcePosChanged) {\n          prevSourcePosition.current = sourcePosition;\n        }\n        if (targetPosChanged) {\n          prevTargetPosition.current = targetPosition;\n        }\n        store.getState().updateNodeDimensions([{\n          id: id,\n          nodeElement: nodeRef.current,\n          forceUpdate: true\n        }]);\n      }\n    }, [id, type, sourcePosition, targetPosition]);\n    var dragging = useDrag({\n      nodeRef: nodeRef,\n      disabled: hidden || !isDraggable,\n      noDragClassName: noDragClassName,\n      handleSelector: dragHandle,\n      nodeId: id,\n      isSelectable: isSelectable,\n      selectNodesOnDrag: selectNodesOnDrag\n    });\n    if (hidden) {\n      return null;\n    }\n    return jsx(\"div\", {\n      className: cc(['react-flow__node', \"react-flow__node-\".concat(type), _defineProperty({}, noPanClassName, isDraggable), className, {\n        selected: selected,\n        selectable: isSelectable,\n        parent: isParent,\n        dragging: dragging\n      }]),\n      ref: nodeRef,\n      style: _objectSpread({\n        zIndex: zIndex,\n        transform: \"translate(\".concat(xPosOrigin, \"px,\").concat(yPosOrigin, \"px)\"),\n        pointerEvents: hasPointerEvents ? 'all' : 'none',\n        visibility: initialized ? 'visible' : 'hidden'\n      }, style),\n      \"data-id\": id,\n      \"data-testid\": \"rf__node-\".concat(id),\n      onMouseEnter: onMouseEnterHandler,\n      onMouseMove: onMouseMoveHandler,\n      onMouseLeave: onMouseLeaveHandler,\n      onContextMenu: onContextMenuHandler,\n      onClick: onSelectNodeHandler,\n      onDoubleClick: onDoubleClickHandler,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"aria-describedby\": disableKeyboardA11y ? undefined : \"\".concat(ARIA_NODE_DESC_KEY, \"-\").concat(rfId),\n      \"aria-label\": ariaLabel,\n      children: jsx(Provider, {\n        value: id,\n        children: jsx(NodeComponent, {\n          id: id,\n          data: data,\n          type: type,\n          xPos: xPos,\n          yPos: yPos,\n          selected: selected,\n          isConnectable: isConnectable,\n          sourcePosition: sourcePosition,\n          targetPosition: targetPosition,\n          dragging: dragging,\n          dragHandle: dragHandle,\n          zIndex: zIndex\n        })\n      })\n    });\n  };\n  NodeWrapper.displayName = 'NodeWrapper';\n  return memo(NodeWrapper);\n};\nfunction createNodeTypes(nodeTypes) {\n  var standardTypes = {\n    input: wrapNode(nodeTypes.input || InputNode$1),\n    default: wrapNode(nodeTypes.default || DefaultNode$1),\n    output: wrapNode(nodeTypes.output || OutputNode$1),\n    group: wrapNode(nodeTypes.group || GroupNode)\n  };\n  var wrappedTypes = {};\n  var specialTypes = Object.keys(nodeTypes).filter(function (k) {\n    return !['input', 'default', 'output', 'group'].includes(k);\n  }).reduce(function (res, key) {\n    res[key] = wrapNode(nodeTypes[key] || DefaultNode$1);\n    return res;\n  }, wrappedTypes);\n  return _objectSpread(_objectSpread({}, standardTypes), specialTypes);\n}\nvar getPositionWithOrigin = function getPositionWithOrigin(_ref53) {\n  var x = _ref53.x,\n    y = _ref53.y,\n    width = _ref53.width,\n    height = _ref53.height,\n    origin = _ref53.origin;\n  if (!width || !height) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n  if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n  return {\n    x: x - width * origin[0],\n    y: y - height * origin[1]\n  };\n};\nvar doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = function useKeyPress() {\n  var keyCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    target: doc\n  };\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    keyPressed = _useState10[0],\n    setKeyPressed = _useState10[1];\n  // we need to remember if a modifier key is pressed in order to track it\n  var modifierPressed = useRef(false);\n  // we need to remember the pressed keys in order to support combinations\n  var pressedKeys = useRef(new Set([]));\n  // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n  // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n  // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n  // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n  // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n  // we can't find it in the list of keysToWatch.\n  var _useMemo = useMemo(function () {\n      if (keyCode !== null) {\n        var keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n        var keys = keyCodeArr.filter(function (kc) {\n          return typeof kc === 'string';\n        }).map(function (kc) {\n          return kc.split('+');\n        });\n        var keysFlat = keys.reduce(function (res, item) {\n          return res.concat.apply(res, _toConsumableArray(item));\n        }, []);\n        return [keys, keysFlat];\n      }\n      return [[], []];\n    }, [keyCode]),\n    _useMemo2 = _slicedToArray(_useMemo, 2),\n    keyCodes = _useMemo2[0],\n    keysToWatch = _useMemo2[1];\n  useEffect(function () {\n    if (keyCode !== null) {\n      var _options$target, _options$target2;\n      var downHandler = function downHandler(event) {\n        modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n        if (!modifierPressed.current && isInputDOMNode(event)) {\n          return false;\n        }\n        var keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        pressedKeys.current.add(event[keyOrCode]);\n        if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n          event.preventDefault();\n          setKeyPressed(true);\n        }\n      };\n      var upHandler = function upHandler(event) {\n        if (!modifierPressed.current && isInputDOMNode(event)) {\n          return false;\n        }\n        var keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n          setKeyPressed(false);\n          pressedKeys.current.clear();\n        } else {\n          pressedKeys.current.delete(event[keyOrCode]);\n        }\n        modifierPressed.current = false;\n      };\n      var resetHandler = function resetHandler() {\n        pressedKeys.current.clear();\n        setKeyPressed(false);\n      };\n      options === null || options === void 0 ? void 0 : (_options$target = options.target) === null || _options$target === void 0 ? void 0 : _options$target.addEventListener('keydown', downHandler);\n      options === null || options === void 0 ? void 0 : (_options$target2 = options.target) === null || _options$target2 === void 0 ? void 0 : _options$target2.addEventListener('keyup', upHandler);\n      window.addEventListener('blur', resetHandler);\n      return function () {\n        var _options$target3, _options$target4;\n        options === null || options === void 0 ? void 0 : (_options$target3 = options.target) === null || _options$target3 === void 0 ? void 0 : _options$target3.removeEventListener('keydown', downHandler);\n        options === null || options === void 0 ? void 0 : (_options$target4 = options.target) === null || _options$target4 === void 0 ? void 0 : _options$target4.removeEventListener('keyup', upHandler);\n        window.removeEventListener('blur', resetHandler);\n      };\n    }\n  }, [keyCode, setKeyPressed]);\n  return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n  return keyCodes\n  // we only want to compare same sizes of keyCode definitions\n  // and pressed keys. When the user specified 'Meta' as a key somewhere\n  // this would also be truthy without this filter when user presses 'Meta' + 'r'\n  .filter(function (keys) {\n    return isUp || keys.length === pressedKeys.size;\n  })\n  // since we want to support multiple possibilities only one of the\n  // combinations need to be part of the pressed keys\n  .some(function (keys) {\n    return keys.every(function (k) {\n      return pressedKeys.has(k);\n    });\n  });\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n  return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n  var _result$x, _result$y, _parentNode$internals, _parentNode$internals2, _result$z, _parentNode$internals3, _parentNode$internals4, _result$z2;\n  if (!node.parentNode) {\n    return result;\n  }\n  var parentNode = nodeInternals.get(node.parentNode);\n  var parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n  return calculateXYZPosition(parentNode, nodeInternals, {\n    x: ((_result$x = result.x) !== null && _result$x !== void 0 ? _result$x : 0) + parentNodePosition.x,\n    y: ((_result$y = result.y) !== null && _result$y !== void 0 ? _result$y : 0) + parentNodePosition.y,\n    z: ((_parentNode$internals = (_parentNode$internals2 = parentNode[internalsSymbol]) === null || _parentNode$internals2 === void 0 ? void 0 : _parentNode$internals2.z) !== null && _parentNode$internals !== void 0 ? _parentNode$internals : 0) > ((_result$z = result.z) !== null && _result$z !== void 0 ? _result$z : 0) ? (_parentNode$internals3 = (_parentNode$internals4 = parentNode[internalsSymbol]) === null || _parentNode$internals4 === void 0 ? void 0 : _parentNode$internals4.z) !== null && _parentNode$internals3 !== void 0 ? _parentNode$internals3 : 0 : (_result$z2 = result.z) !== null && _result$z2 !== void 0 ? _result$z2 : 0\n  }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n  nodeInternals.forEach(function (node) {\n    if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n      throw new Error(\"Parent node \".concat(node.parentNode, \" not found\"));\n    }\n    if (node.parentNode || parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n      var _node$internalsSymbol2, _node$internalsSymbol3;\n      var _calculateXYZPosition = calculateXYZPosition(node, nodeInternals, _objectSpread(_objectSpread({}, node.position), {}, {\n          z: (_node$internalsSymbol2 = (_node$internalsSymbol3 = node[internalsSymbol]) === null || _node$internalsSymbol3 === void 0 ? void 0 : _node$internalsSymbol3.z) !== null && _node$internalsSymbol2 !== void 0 ? _node$internalsSymbol2 : 0\n        }), nodeOrigin),\n        x = _calculateXYZPosition.x,\n        y = _calculateXYZPosition.y,\n        z = _calculateXYZPosition.z;\n      node.positionAbsolute = {\n        x: x,\n        y: y\n      };\n      node[internalsSymbol].z = z;\n      if (parentNodes !== null && parentNodes !== void 0 && parentNodes[node.id]) {\n        node[internalsSymbol].isParent = true;\n      }\n    }\n  });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n  var nextNodeInternals = new Map();\n  var parentNodes = {};\n  var selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n  nodes.forEach(function (node) {\n    var _currInternals$intern;\n    var z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n    var currInternals = nodeInternals.get(node.id);\n    var internals = _objectSpread(_objectSpread({\n      width: currInternals === null || currInternals === void 0 ? void 0 : currInternals.width,\n      height: currInternals === null || currInternals === void 0 ? void 0 : currInternals.height\n    }, node), {}, {\n      positionAbsolute: {\n        x: node.position.x,\n        y: node.position.y\n      }\n    });\n    if (node.parentNode) {\n      internals.parentNode = node.parentNode;\n      parentNodes[node.parentNode] = true;\n    }\n    Object.defineProperty(internals, internalsSymbol, {\n      enumerable: false,\n      value: {\n        handleBounds: currInternals === null || currInternals === void 0 ? void 0 : (_currInternals$intern = currInternals[internalsSymbol]) === null || _currInternals$intern === void 0 ? void 0 : _currInternals$intern.handleBounds,\n        z: z\n      }\n    });\n    nextNodeInternals.set(node.id, internals);\n  });\n  updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n  return nextNodeInternals;\n}\nfunction _fitView(get) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _get = get(),\n    getNodes = _get.getNodes,\n    width = _get.width,\n    height = _get.height,\n    minZoom = _get.minZoom,\n    maxZoom = _get.maxZoom,\n    d3Zoom = _get.d3Zoom,\n    d3Selection = _get.d3Selection,\n    fitViewOnInitDone = _get.fitViewOnInitDone,\n    fitViewOnInit = _get.fitViewOnInit,\n    nodeOrigin = _get.nodeOrigin;\n  var isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n  var d3initialized = d3Zoom && d3Selection;\n  if (d3initialized && (isInitialFitView || !options.initial)) {\n    var nodes = getNodes().filter(function (n) {\n      var _options$nodes;\n      var isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n      if ((_options$nodes = options.nodes) !== null && _options$nodes !== void 0 && _options$nodes.length) {\n        return isVisible && options.nodes.some(function (optionNode) {\n          return optionNode.id === n.id;\n        });\n      }\n      return isVisible;\n    });\n    var nodesInitialized = nodes.every(function (n) {\n      return n.width && n.height;\n    });\n    if (nodes.length > 0 && nodesInitialized) {\n      var _options$minZoom, _options$maxZoom, _options$padding;\n      var bounds = getRectOfNodes(nodes, nodeOrigin);\n      var _getTransformForBound = getTransformForBounds(bounds, width, height, (_options$minZoom = options.minZoom) !== null && _options$minZoom !== void 0 ? _options$minZoom : minZoom, (_options$maxZoom = options.maxZoom) !== null && _options$maxZoom !== void 0 ? _options$maxZoom : maxZoom, (_options$padding = options.padding) !== null && _options$padding !== void 0 ? _options$padding : 0.1),\n        _getTransformForBound2 = _slicedToArray(_getTransformForBound, 3),\n        x = _getTransformForBound2[0],\n        y = _getTransformForBound2[1],\n        _zoom = _getTransformForBound2[2];\n      var nextTransform = zoomIdentity.translate(x, y).scale(_zoom);\n      if (typeof options.duration === 'number' && options.duration > 0) {\n        d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n      } else {\n        d3Zoom.transform(d3Selection, nextTransform);\n      }\n      return true;\n    }\n  }\n  return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n  nodeChanges.forEach(function (change) {\n    var node = nodeInternals.get(change.id);\n    if (node) {\n      var _objectSpread2;\n      nodeInternals.set(node.id, _objectSpread(_objectSpread({}, node), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, internalsSymbol, node[internalsSymbol]), _defineProperty(_objectSpread2, \"selected\", change.selected), _objectSpread2)));\n    }\n  });\n  return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n  return edges.map(function (e) {\n    var change = edgeChanges.find(function (change) {\n      return change.id === e.id;\n    });\n    if (change) {\n      e.selected = change.selected;\n    }\n    return e;\n  });\n}\nfunction updateNodesAndEdgesSelections(_ref54) {\n  var changedNodes = _ref54.changedNodes,\n    changedEdges = _ref54.changedEdges,\n    get = _ref54.get,\n    set = _ref54.set;\n  var _get2 = get(),\n    nodeInternals = _get2.nodeInternals,\n    edges = _get2.edges,\n    onNodesChange = _get2.onNodesChange,\n    onEdgesChange = _get2.onEdgesChange,\n    hasDefaultNodes = _get2.hasDefaultNodes,\n    hasDefaultEdges = _get2.hasDefaultEdges;\n  if (changedNodes !== null && changedNodes !== void 0 && changedNodes.length) {\n    if (hasDefaultNodes) {\n      set({\n        nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals)\n      });\n    }\n    onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changedNodes);\n  }\n  if (changedEdges !== null && changedEdges !== void 0 && changedEdges.length) {\n    if (hasDefaultEdges) {\n      set({\n        edges: handleControlledEdgeSelectionChange(changedEdges, edges)\n      });\n    }\n    onEdgesChange === null || onEdgesChange === void 0 ? void 0 : onEdgesChange(changedEdges);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nvar noop = function noop() {};\nvar initialViewportHelper = {\n  zoomIn: noop,\n  zoomOut: noop,\n  zoomTo: noop,\n  getZoom: function getZoom() {\n    return 1;\n  },\n  setViewport: noop,\n  getViewport: function getViewport() {\n    return {\n      x: 0,\n      y: 0,\n      zoom: 1\n    };\n  },\n  fitView: function fitView() {\n    return false;\n  },\n  setCenter: noop,\n  fitBounds: noop,\n  project: function project(position) {\n    return position;\n  },\n  viewportInitialized: false\n};\nvar selector$b = function selector$b(s) {\n  return {\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection\n  };\n};\nvar useViewportHelper = function useViewportHelper() {\n  var store = useStoreApi();\n  var _useStore5 = useStore(selector$b, shallow),\n    d3Zoom = _useStore5.d3Zoom,\n    d3Selection = _useStore5.d3Selection;\n  var viewportHelperFunctions = useMemo(function () {\n    if (d3Selection && d3Zoom) {\n      return {\n        zoomIn: function zoomIn(options) {\n          return d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1.2);\n        },\n        zoomOut: function zoomOut(options) {\n          return d3Zoom.scaleBy(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), 1 / 1.2);\n        },\n        zoomTo: function zoomTo(zoomLevel, options) {\n          return d3Zoom.scaleTo(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), zoomLevel);\n        },\n        getZoom: function getZoom() {\n          return store.getState().transform[2];\n        },\n        setViewport: function setViewport(transform, options) {\n          var _transform$x, _transform$y, _transform$zoom;\n          var _store$getState$trans = _slicedToArray(store.getState().transform, 3),\n            x = _store$getState$trans[0],\n            y = _store$getState$trans[1],\n            zoom = _store$getState$trans[2];\n          var nextTransform = zoomIdentity.translate((_transform$x = transform.x) !== null && _transform$x !== void 0 ? _transform$x : x, (_transform$y = transform.y) !== null && _transform$y !== void 0 ? _transform$y : y).scale((_transform$zoom = transform.zoom) !== null && _transform$zoom !== void 0 ? _transform$zoom : zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), nextTransform);\n        },\n        getViewport: function getViewport() {\n          var _store$getState$trans2 = _slicedToArray(store.getState().transform, 3),\n            x = _store$getState$trans2[0],\n            y = _store$getState$trans2[1],\n            zoom = _store$getState$trans2[2];\n          return {\n            x: x,\n            y: y,\n            zoom: zoom\n          };\n        },\n        fitView: function fitView(options) {\n          return _fitView(store.getState, options);\n        },\n        setCenter: function setCenter(x, y, options) {\n          var _store$getState17 = store.getState(),\n            width = _store$getState17.width,\n            height = _store$getState17.height,\n            maxZoom = _store$getState17.maxZoom;\n          var nextZoom = typeof (options === null || options === void 0 ? void 0 : options.zoom) !== 'undefined' ? options.zoom : maxZoom;\n          var centerX = width / 2 - x * nextZoom;\n          var centerY = height / 2 - y * nextZoom;\n          var transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        fitBounds: function fitBounds(bounds, options) {\n          var _options$padding2;\n          var _store$getState18 = store.getState(),\n            width = _store$getState18.width,\n            height = _store$getState18.height,\n            minZoom = _store$getState18.minZoom,\n            maxZoom = _store$getState18.maxZoom;\n          var _getTransformForBound3 = getTransformForBounds(bounds, width, height, minZoom, maxZoom, (_options$padding2 = options === null || options === void 0 ? void 0 : options.padding) !== null && _options$padding2 !== void 0 ? _options$padding2 : 0.1),\n            _getTransformForBound4 = _slicedToArray(_getTransformForBound3, 3),\n            x = _getTransformForBound4[0],\n            y = _getTransformForBound4[1],\n            zoom = _getTransformForBound4[2];\n          var transform = zoomIdentity.translate(x, y).scale(zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options === null || options === void 0 ? void 0 : options.duration), transform);\n        },\n        project: function project(position) {\n          var _store$getState19 = store.getState(),\n            transform = _store$getState19.transform,\n            snapToGrid = _store$getState19.snapToGrid,\n            snapGrid = _store$getState19.snapGrid;\n          return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n        },\n        viewportInitialized: true\n      };\n    }\n    return initialViewportHelper;\n  }, [d3Zoom, d3Selection]);\n  return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n  var viewportHelper = useViewportHelper();\n  var store = useStoreApi();\n  var getNodes = useCallback(function () {\n    return store.getState().getNodes().map(function (n) {\n      return _objectSpread({}, n);\n    });\n  }, []);\n  var getNode = useCallback(function (id) {\n    return store.getState().nodeInternals.get(id);\n  }, []);\n  var getEdges = useCallback(function () {\n    var _store$getState20 = store.getState(),\n      _store$getState20$edg = _store$getState20.edges,\n      edges = _store$getState20$edg === void 0 ? [] : _store$getState20$edg;\n    return edges.map(function (e) {\n      return _objectSpread({}, e);\n    });\n  }, []);\n  var getEdge = useCallback(function (id) {\n    var _store$getState21 = store.getState(),\n      _store$getState21$edg = _store$getState21.edges,\n      edges = _store$getState21$edg === void 0 ? [] : _store$getState21$edg;\n    return edges.find(function (e) {\n      return e.id === id;\n    });\n  }, []);\n  var setNodes = useCallback(function (payload) {\n    var _store$getState22 = store.getState(),\n      getNodes = _store$getState22.getNodes,\n      setNodes = _store$getState22.setNodes,\n      hasDefaultNodes = _store$getState22.hasDefaultNodes,\n      onNodesChange = _store$getState22.onNodesChange;\n    var nodes = getNodes();\n    var nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n    if (hasDefaultNodes) {\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      var changes = nextNodes.length === 0 ? nodes.map(function (node) {\n        return {\n          type: 'remove',\n          id: node.id\n        };\n      }) : nextNodes.map(function (node) {\n        return {\n          item: node,\n          type: 'reset'\n        };\n      });\n      onNodesChange(changes);\n    }\n  }, []);\n  var setEdges = useCallback(function (payload) {\n    var _store$getState23 = store.getState(),\n      _store$getState23$edg = _store$getState23.edges,\n      edges = _store$getState23$edg === void 0 ? [] : _store$getState23$edg,\n      setEdges = _store$getState23.setEdges,\n      hasDefaultEdges = _store$getState23.hasDefaultEdges,\n      onEdgesChange = _store$getState23.onEdgesChange;\n    var nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n    if (hasDefaultEdges) {\n      setEdges(nextEdges);\n    } else if (onEdgesChange) {\n      var changes = nextEdges.length === 0 ? edges.map(function (edge) {\n        return {\n          type: 'remove',\n          id: edge.id\n        };\n      }) : nextEdges.map(function (edge) {\n        return {\n          item: edge,\n          type: 'reset'\n        };\n      });\n      onEdgesChange(changes);\n    }\n  }, []);\n  var addNodes = useCallback(function (payload) {\n    var nodes = Array.isArray(payload) ? payload : [payload];\n    var _store$getState24 = store.getState(),\n      getNodes = _store$getState24.getNodes,\n      setNodes = _store$getState24.setNodes,\n      hasDefaultNodes = _store$getState24.hasDefaultNodes,\n      onNodesChange = _store$getState24.onNodesChange;\n    if (hasDefaultNodes) {\n      var currentNodes = getNodes();\n      var nextNodes = [].concat(_toConsumableArray(currentNodes), _toConsumableArray(nodes));\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      var changes = nodes.map(function (node) {\n        return {\n          item: node,\n          type: 'add'\n        };\n      });\n      onNodesChange(changes);\n    }\n  }, []);\n  var addEdges = useCallback(function (payload) {\n    var nextEdges = Array.isArray(payload) ? payload : [payload];\n    var _store$getState25 = store.getState(),\n      _store$getState25$edg = _store$getState25.edges,\n      edges = _store$getState25$edg === void 0 ? [] : _store$getState25$edg,\n      setEdges = _store$getState25.setEdges,\n      hasDefaultEdges = _store$getState25.hasDefaultEdges,\n      onEdgesChange = _store$getState25.onEdgesChange;\n    if (hasDefaultEdges) {\n      setEdges([].concat(_toConsumableArray(edges), _toConsumableArray(nextEdges)));\n    } else if (onEdgesChange) {\n      var changes = nextEdges.map(function (edge) {\n        return {\n          item: edge,\n          type: 'add'\n        };\n      });\n      onEdgesChange(changes);\n    }\n  }, []);\n  var toObject = useCallback(function () {\n    var _store$getState26 = store.getState(),\n      getNodes = _store$getState26.getNodes,\n      _store$getState26$edg = _store$getState26.edges,\n      edges = _store$getState26$edg === void 0 ? [] : _store$getState26$edg,\n      transform = _store$getState26.transform;\n    var _transform = _slicedToArray(transform, 3),\n      x = _transform[0],\n      y = _transform[1],\n      zoom = _transform[2];\n    return {\n      nodes: getNodes().map(function (n) {\n        return _objectSpread({}, n);\n      }),\n      edges: edges.map(function (e) {\n        return _objectSpread({}, e);\n      }),\n      viewport: {\n        x: x,\n        y: y,\n        zoom: zoom\n      }\n    };\n  }, []);\n  var deleteElements = useCallback(function (_ref55) {\n    var nodesDeleted = _ref55.nodes,\n      edgesDeleted = _ref55.edges;\n    var _store$getState27 = store.getState(),\n      nodeInternals = _store$getState27.nodeInternals,\n      getNodes = _store$getState27.getNodes,\n      edges = _store$getState27.edges,\n      hasDefaultNodes = _store$getState27.hasDefaultNodes,\n      hasDefaultEdges = _store$getState27.hasDefaultEdges,\n      onNodesDelete = _store$getState27.onNodesDelete,\n      onEdgesDelete = _store$getState27.onEdgesDelete,\n      onNodesChange = _store$getState27.onNodesChange,\n      onEdgesChange = _store$getState27.onEdgesChange;\n    var nodeIds = (nodesDeleted || []).map(function (node) {\n      return node.id;\n    });\n    var edgeIds = (edgesDeleted || []).map(function (edge) {\n      return edge.id;\n    });\n    var nodesToRemove = getNodes().reduce(function (res, node) {\n      var parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find(function (n) {\n        return n.id === node.parentNode;\n      });\n      var deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n      if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n        res.push(node);\n      }\n      return res;\n    }, []);\n    var deletableEdges = edges.filter(function (e) {\n      return typeof e.deletable === 'boolean' ? e.deletable : true;\n    });\n    var initialHitEdges = deletableEdges.filter(function (e) {\n      return edgeIds.includes(e.id);\n    });\n    if (nodesToRemove || initialHitEdges) {\n      var connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n      var edgesToRemove = [].concat(_toConsumableArray(initialHitEdges), _toConsumableArray(connectedEdges));\n      var edgeIdsToRemove = edgesToRemove.reduce(function (res, edge) {\n        if (!res.includes(edge.id)) {\n          res.push(edge.id);\n        }\n        return res;\n      }, []);\n      if (hasDefaultEdges || hasDefaultNodes) {\n        if (hasDefaultEdges) {\n          store.setState({\n            edges: edges.filter(function (e) {\n              return !edgeIdsToRemove.includes(e.id);\n            })\n          });\n        }\n        if (hasDefaultNodes) {\n          nodesToRemove.forEach(function (node) {\n            nodeInternals.delete(node.id);\n          });\n          store.setState({\n            nodeInternals: new Map(nodeInternals)\n          });\n        }\n      }\n      if (edgeIdsToRemove.length > 0) {\n        onEdgesDelete === null || onEdgesDelete === void 0 ? void 0 : onEdgesDelete(edgesToRemove);\n        if (onEdgesChange) {\n          onEdgesChange(edgeIdsToRemove.map(function (id) {\n            return {\n              id: id,\n              type: 'remove'\n            };\n          }));\n        }\n      }\n      if (nodesToRemove.length > 0) {\n        onNodesDelete === null || onNodesDelete === void 0 ? void 0 : onNodesDelete(nodesToRemove);\n        if (onNodesChange) {\n          var nodeChanges = nodesToRemove.map(function (n) {\n            return {\n              id: n.id,\n              type: 'remove'\n            };\n          });\n          onNodesChange(nodeChanges);\n        }\n      }\n    }\n  }, []);\n  var getNodeRect = useCallback(function (nodeOrRect) {\n    var isRect = isRectObject(nodeOrRect);\n    var node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n    var nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n    return [nodeRect, node, isRect];\n  }, []);\n  var getIntersectingNodes = useCallback(function (nodeOrRect) {\n    var partially = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var nodes = arguments.length > 2 ? arguments[2] : undefined;\n    var _getNodeRect = getNodeRect(nodeOrRect),\n      _getNodeRect2 = _slicedToArray(_getNodeRect, 3),\n      nodeRect = _getNodeRect2[0],\n      node = _getNodeRect2[1],\n      isRect = _getNodeRect2[2];\n    if (!nodeRect) {\n      return [];\n    }\n    return (nodes || store.getState().getNodes()).filter(function (n) {\n      if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n        return false;\n      }\n      var currNodeRect = nodeToRect(n);\n      var overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n      var partiallyVisible = partially && overlappingArea > 0;\n      return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    });\n  }, []);\n  var isNodeIntersecting = useCallback(function (nodeOrRect, area) {\n    var partially = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var _getNodeRect3 = getNodeRect(nodeOrRect),\n      _getNodeRect4 = _slicedToArray(_getNodeRect3, 1),\n      nodeRect = _getNodeRect4[0];\n    if (!nodeRect) {\n      return false;\n    }\n    var overlappingArea = getOverlappingArea(nodeRect, area);\n    var partiallyVisible = partially && overlappingArea > 0;\n    return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n  }, []);\n  return useMemo(function () {\n    return _objectSpread(_objectSpread({}, viewportHelper), {}, {\n      getNodes: getNodes,\n      getNode: getNode,\n      getEdges: getEdges,\n      getEdge: getEdge,\n      setNodes: setNodes,\n      setEdges: setEdges,\n      addNodes: addNodes,\n      addEdges: addEdges,\n      toObject: toObject,\n      deleteElements: deleteElements,\n      getIntersectingNodes: getIntersectingNodes,\n      isNodeIntersecting: isNodeIntersecting\n    });\n  }, [viewportHelper, getNodes, getNode, getEdges, getEdge, setNodes, setEdges, addNodes, addEdges, toObject, deleteElements, getIntersectingNodes, isNodeIntersecting]);\n}\nvar useGlobalKeyHandler = function useGlobalKeyHandler(_ref56) {\n  var deleteKeyCode = _ref56.deleteKeyCode,\n    multiSelectionKeyCode = _ref56.multiSelectionKeyCode;\n  var store = useStoreApi();\n  var _useReactFlow = useReactFlow(),\n    deleteElements = _useReactFlow.deleteElements;\n  var deleteKeyPressed = useKeyPress(deleteKeyCode);\n  var multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n  useEffect(function () {\n    if (deleteKeyPressed) {\n      var _store$getState28 = store.getState(),\n        edges = _store$getState28.edges,\n        getNodes = _store$getState28.getNodes;\n      var selectedNodes = getNodes().filter(function (node) {\n        return node.selected;\n      });\n      var selectedEdges = edges.filter(function (edge) {\n        return edge.selected;\n      });\n      deleteElements({\n        nodes: selectedNodes,\n        edges: selectedEdges\n      });\n      store.setState({\n        nodesSelectionActive: false\n      });\n    }\n  }, [deleteKeyPressed]);\n  useEffect(function () {\n    store.setState({\n      multiSelectionActive: multiSelectionKeyPressed\n    });\n  }, [multiSelectionKeyPressed]);\n};\nfunction useResizeHandler(rendererNode) {\n  var store = useStoreApi();\n  useEffect(function () {\n    var resizeObserver;\n    var updateDimensions = function updateDimensions() {\n      if (!rendererNode.current) {\n        return;\n      }\n      var size = getDimensions(rendererNode.current);\n      if (size.height === 0 || size.width === 0) {\n        var _store$getState$onErr2, _store$getState29;\n        (_store$getState$onErr2 = (_store$getState29 = store.getState()).onError) === null || _store$getState$onErr2 === void 0 ? void 0 : _store$getState$onErr2.call(_store$getState29, '004', errorMessages['error004']());\n      }\n      store.setState({\n        width: size.width || 500,\n        height: size.height || 500\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    if (rendererNode.current) {\n      resizeObserver = new ResizeObserver(function () {\n        return updateDimensions();\n      });\n      resizeObserver.observe(rendererNode.current);\n    }\n    return function () {\n      window.removeEventListener('resize', updateDimensions);\n      if (resizeObserver && rendererNode.current) {\n        resizeObserver.unobserve(rendererNode.current);\n      }\n    };\n  }, []);\n}\nvar containerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0\n};\nvar viewChanged = function viewChanged(prevViewport, eventViewport) {\n  return prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\n};\nvar eventToFlowTransform = function eventToFlowTransform(eventViewport) {\n  return {\n    x: eventViewport.x,\n    y: eventViewport.y,\n    zoom: eventViewport.k\n  };\n};\nvar isWrappedWithClass = function isWrappedWithClass(event, className) {\n  return event.target.closest(\".\".concat(className));\n};\nvar isRightClickPan = function isRightClickPan(panOnDrag, usedButton) {\n  return usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\n};\nvar selector$a = function selector$a(s) {\n  return {\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive\n  };\n};\nvar ZoomPane = function ZoomPane(_ref57) {\n  var onMove = _ref57.onMove,\n    onMoveStart = _ref57.onMoveStart,\n    onMoveEnd = _ref57.onMoveEnd,\n    onPaneContextMenu = _ref57.onPaneContextMenu,\n    _ref57$zoomOnScroll = _ref57.zoomOnScroll,\n    zoomOnScroll = _ref57$zoomOnScroll === void 0 ? true : _ref57$zoomOnScroll,\n    _ref57$zoomOnPinch = _ref57.zoomOnPinch,\n    zoomOnPinch = _ref57$zoomOnPinch === void 0 ? true : _ref57$zoomOnPinch,\n    _ref57$panOnScroll = _ref57.panOnScroll,\n    panOnScroll = _ref57$panOnScroll === void 0 ? false : _ref57$panOnScroll,\n    _ref57$panOnScrollSpe = _ref57.panOnScrollSpeed,\n    panOnScrollSpeed = _ref57$panOnScrollSpe === void 0 ? 0.5 : _ref57$panOnScrollSpe,\n    _ref57$panOnScrollMod = _ref57.panOnScrollMode,\n    panOnScrollMode = _ref57$panOnScrollMod === void 0 ? PanOnScrollMode.Free : _ref57$panOnScrollMod,\n    _ref57$zoomOnDoubleCl = _ref57.zoomOnDoubleClick,\n    zoomOnDoubleClick = _ref57$zoomOnDoubleCl === void 0 ? true : _ref57$zoomOnDoubleCl,\n    elementsSelectable = _ref57.elementsSelectable,\n    _ref57$panOnDrag = _ref57.panOnDrag,\n    panOnDrag = _ref57$panOnDrag === void 0 ? true : _ref57$panOnDrag,\n    defaultViewport = _ref57.defaultViewport,\n    translateExtent = _ref57.translateExtent,\n    minZoom = _ref57.minZoom,\n    maxZoom = _ref57.maxZoom,\n    zoomActivationKeyCode = _ref57.zoomActivationKeyCode,\n    _ref57$preventScrolli = _ref57.preventScrolling,\n    preventScrolling = _ref57$preventScrolli === void 0 ? true : _ref57$preventScrolli,\n    children = _ref57.children,\n    noWheelClassName = _ref57.noWheelClassName,\n    noPanClassName = _ref57.noPanClassName;\n  var timerId = useRef();\n  var store = useStoreApi();\n  var isZoomingOrPanning = useRef(false);\n  var zoomedWithRightMouseButton = useRef(false);\n  var zoomPane = useRef(null);\n  var prevTransform = useRef({\n    x: 0,\n    y: 0,\n    zoom: 0\n  });\n  var _useStore6 = useStore(selector$a, shallow),\n    d3Zoom = _useStore6.d3Zoom,\n    d3Selection = _useStore6.d3Selection,\n    d3ZoomHandler = _useStore6.d3ZoomHandler,\n    userSelectionActive = _useStore6.userSelectionActive;\n  var zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n  var mouseButton = useRef(0);\n  useResizeHandler(zoomPane);\n  useEffect(function () {\n    if (zoomPane.current) {\n      var bbox = zoomPane.current.getBoundingClientRect();\n      var d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n      var selection = select(zoomPane.current).call(d3ZoomInstance);\n      var updatedTransform = zoomIdentity.translate(defaultViewport.x, defaultViewport.y).scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n      var extent = [[0, 0], [bbox.width, bbox.height]];\n      var constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n      d3ZoomInstance.transform(selection, constrainedTransform);\n      store.setState({\n        d3Zoom: d3ZoomInstance,\n        d3Selection: selection,\n        d3ZoomHandler: selection.on('wheel.zoom'),\n        // we need to pass transform because zoom handler is not registered when we set the initial transform\n        transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n        domNode: zoomPane.current.closest('.react-flow')\n      });\n    }\n  }, []);\n  useEffect(function () {\n    if (d3Selection && d3Zoom) {\n      if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n        d3Selection.on('wheel.zoom', function (event) {\n          if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n          }\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          var currentZoom = d3Selection.property('__zoom').k || 1;\n          if (event.ctrlKey && zoomOnPinch) {\n            var point = pointer(event);\n            // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\n            var pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\n            var _zoom2 = currentZoom * Math.pow(2, pinchDelta);\n            d3Zoom.scaleTo(d3Selection, _zoom2, point);\n            return;\n          }\n          // increase scroll speed in firefox\n          // firefox: deltaMode === 1; chrome: deltaMode === 0\n          var deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n          var deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n          var deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n          d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\n        }, {\n          passive: false\n        });\n      } else if (typeof d3ZoomHandler !== 'undefined') {\n        d3Selection.on('wheel.zoom', function (event, d) {\n          if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n          }\n          event.preventDefault();\n          d3ZoomHandler.call(this, event, d);\n        }, {\n          passive: false\n        });\n      }\n    }\n  }, [userSelectionActive, panOnScroll, panOnScrollMode, d3Selection, d3Zoom, d3ZoomHandler, zoomActivationKeyPressed, zoomOnPinch, preventScrolling, noWheelClassName]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.on('start', function (event) {\n        var _event$sourceEvent;\n        if (!event.sourceEvent) {\n          return null;\n        }\n        // we need to remember it here, because it's always 0 in the \"zoom\" event\n        mouseButton.current = event.sourceEvent.button;\n        var _store$getState30 = store.getState(),\n          onViewportChangeStart = _store$getState30.onViewportChangeStart;\n        isZoomingOrPanning.current = true;\n        if (((_event$sourceEvent = event.sourceEvent) === null || _event$sourceEvent === void 0 ? void 0 : _event$sourceEvent.type) === 'mousedown') {\n          store.setState({\n            paneDragging: true\n          });\n        }\n        if (onMoveStart || onViewportChangeStart) {\n          var flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          onViewportChangeStart === null || onViewportChangeStart === void 0 ? void 0 : onViewportChangeStart(flowTransform);\n          onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart(event.sourceEvent, flowTransform);\n        }\n      });\n    }\n  }, [d3Zoom, onMoveStart]);\n  useEffect(function () {\n    if (d3Zoom) {\n      if (userSelectionActive && !isZoomingOrPanning.current) {\n        d3Zoom.on('zoom', null);\n      } else if (!userSelectionActive) {\n        d3Zoom.on('zoom', function (event) {\n          var _mouseButton$current;\n          var _store$getState31 = store.getState(),\n            onViewportChange = _store$getState31.onViewportChange;\n          store.setState({\n            transform: [event.transform.x, event.transform.y, event.transform.k]\n          });\n          zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current = mouseButton.current) !== null && _mouseButton$current !== void 0 ? _mouseButton$current : 0));\n          if (onMove || onViewportChange) {\n            var flowTransform = eventToFlowTransform(event.transform);\n            onViewportChange === null || onViewportChange === void 0 ? void 0 : onViewportChange(flowTransform);\n            onMove === null || onMove === void 0 ? void 0 : onMove(event.sourceEvent, flowTransform);\n          }\n        });\n      }\n    }\n  }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.on('end', function (event) {\n        var _mouseButton$current2;\n        if (!event.sourceEvent) {\n          return null;\n        }\n        var _store$getState32 = store.getState(),\n          onViewportChangeEnd = _store$getState32.onViewportChangeEnd;\n        isZoomingOrPanning.current = false;\n        store.setState({\n          paneDragging: false\n        });\n        if (onPaneContextMenu && isRightClickPan(panOnDrag, (_mouseButton$current2 = mouseButton.current) !== null && _mouseButton$current2 !== void 0 ? _mouseButton$current2 : 0) && !zoomedWithRightMouseButton.current) {\n          onPaneContextMenu(event.sourceEvent);\n        }\n        zoomedWithRightMouseButton.current = false;\n        if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n          var flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          clearTimeout(timerId.current);\n          timerId.current = setTimeout(function () {\n            onViewportChangeEnd === null || onViewportChangeEnd === void 0 ? void 0 : onViewportChangeEnd(flowTransform);\n            onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd(event.sourceEvent, flowTransform);\n          }, panOnScroll ? 150 : 0);\n        }\n      });\n    }\n  }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n  useEffect(function () {\n    if (d3Zoom) {\n      d3Zoom.filter(function (event) {\n        var zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        var pinchZoom = zoomOnPinch && event.ctrlKey;\n        if (event.button === 1 && event.type === 'mousedown' && (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n          return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n          return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n          return false;\n        }\n        // if zoom on double click is disabled, we prevent the double click event\n        if (!zoomOnDoubleClick && event.type === 'dblclick') {\n          return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n          return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n          return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n          return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n          return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        var buttonAllowed = Array.isArray(panOnDrag) && panOnDrag.includes(event.button) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n      });\n    }\n  }, [userSelectionActive, d3Zoom, zoomOnScroll, zoomOnPinch, panOnScroll, zoomOnDoubleClick, panOnDrag, elementsSelectable, zoomActivationKeyPressed]);\n  return jsx(\"div\", {\n    className: \"react-flow__renderer\",\n    ref: zoomPane,\n    style: containerStyle,\n    children: children\n  });\n};\nvar selector$9 = function selector$9(s) {\n  return {\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect\n  };\n};\nfunction UserSelection() {\n  var _useStore7 = useStore(selector$9, shallow),\n    userSelectionActive = _useStore7.userSelectionActive,\n    userSelectionRect = _useStore7.userSelectionRect;\n  var isActive = userSelectionActive && userSelectionRect;\n  if (!isActive) {\n    return null;\n  }\n  return jsx(\"div\", {\n    className: \"react-flow__selection react-flow__container\",\n    style: {\n      width: userSelectionRect.width,\n      height: userSelectionRect.height,\n      transform: \"translate(\".concat(userSelectionRect.x, \"px, \").concat(userSelectionRect.y, \"px)\")\n    }\n  });\n}\nfunction handleParentExpand(res, updateItem) {\n  var parent = res.find(function (e) {\n    return e.id === updateItem.parentNode;\n  });\n  if (parent) {\n    var extendWidth = updateItem.position.x + updateItem.width - parent.width;\n    var extendHeight = updateItem.position.y + updateItem.height - parent.height;\n    if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n      var _parent$style$width, _parent$style$height;\n      parent.style = _objectSpread({}, parent.style) || {};\n      parent.style.width = (_parent$style$width = parent.style.width) !== null && _parent$style$width !== void 0 ? _parent$style$width : parent.width;\n      parent.style.height = (_parent$style$height = parent.style.height) !== null && _parent$style$height !== void 0 ? _parent$style$height : parent.height;\n      if (extendWidth > 0) {\n        parent.style.width += extendWidth;\n      }\n      if (extendHeight > 0) {\n        parent.style.height += extendHeight;\n      }\n      if (updateItem.position.x < 0) {\n        var xDiff = Math.abs(updateItem.position.x);\n        parent.position.x = parent.position.x - xDiff;\n        parent.style.width += xDiff;\n        updateItem.position.x = 0;\n      }\n      if (updateItem.position.y < 0) {\n        var yDiff = Math.abs(updateItem.position.y);\n        parent.position.y = parent.position.y - yDiff;\n        parent.style.height += yDiff;\n        updateItem.position.y = 0;\n      }\n      parent.width = parent.style.width;\n      parent.height = parent.style.height;\n    }\n  }\n}\nfunction applyChanges(changes, elements) {\n  // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n  if (changes.some(function (c) {\n    return c.type === 'reset';\n  })) {\n    return changes.filter(function (c) {\n      return c.type === 'reset';\n    }).map(function (c) {\n      return c.item;\n    });\n  }\n  var initElements = changes.filter(function (c) {\n    return c.type === 'add';\n  }).map(function (c) {\n    return c.item;\n  });\n  return elements.reduce(function (res, item) {\n    var currentChanges = changes.filter(function (c) {\n      return c.id === item.id;\n    });\n    if (currentChanges.length === 0) {\n      res.push(item);\n      return res;\n    }\n    var updateItem = _objectSpread({}, item);\n    var _iterator = _createForOfIteratorHelper(currentChanges),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var currentChange = _step.value;\n        if (currentChange) {\n          switch (currentChange.type) {\n            case 'select':\n              {\n                updateItem.selected = currentChange.selected;\n                break;\n              }\n            case 'position':\n              {\n                if (typeof currentChange.position !== 'undefined') {\n                  updateItem.position = currentChange.position;\n                }\n                if (typeof currentChange.positionAbsolute !== 'undefined') {\n                  updateItem.positionAbsolute = currentChange.positionAbsolute;\n                }\n                if (typeof currentChange.dragging !== 'undefined') {\n                  updateItem.dragging = currentChange.dragging;\n                }\n                if (updateItem.expandParent) {\n                  handleParentExpand(res, updateItem);\n                }\n                break;\n              }\n            case 'dimensions':\n              {\n                if (typeof currentChange.dimensions !== 'undefined') {\n                  updateItem.width = currentChange.dimensions.width;\n                  updateItem.height = currentChange.dimensions.height;\n                }\n                if (typeof currentChange.updateStyle !== 'undefined') {\n                  updateItem.style = _objectSpread(_objectSpread({}, updateItem.style || {}), currentChange.dimensions);\n                }\n                if (typeof currentChange.resizing === 'boolean') {\n                  updateItem.resizing = currentChange.resizing;\n                }\n                if (updateItem.expandParent) {\n                  handleParentExpand(res, updateItem);\n                }\n                break;\n              }\n            case 'remove':\n              {\n                return res;\n              }\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    res.push(updateItem);\n    return res;\n  }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n  return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n  return applyChanges(changes, edges);\n}\nvar createSelectionChange = function createSelectionChange(id, selected) {\n  return {\n    id: id,\n    type: 'select',\n    selected: selected\n  };\n};\nfunction getSelectionChanges(items, selectedIds) {\n  return items.reduce(function (res, item) {\n    var willBeSelected = selectedIds.includes(item.id);\n    if (!item.selected && willBeSelected) {\n      item.selected = true;\n      res.push(createSelectionChange(item.id, true));\n    } else if (item.selected && !willBeSelected) {\n      item.selected = false;\n      res.push(createSelectionChange(item.id, false));\n    }\n    return res;\n  }, []);\n}\nvar wrapHandler = function wrapHandler(handler, containerRef) {\n  return function (event) {\n    if (event.target !== containerRef.current) {\n      return;\n    }\n    handler === null || handler === void 0 ? void 0 : handler(event);\n  };\n};\nvar selector$8 = function selector$8(s) {\n  return {\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging\n  };\n};\nvar Pane = memo(function (_ref58) {\n  var isSelecting = _ref58.isSelecting,\n    _ref58$selectionMode = _ref58.selectionMode,\n    selectionMode = _ref58$selectionMode === void 0 ? SelectionMode.Full : _ref58$selectionMode,\n    panOnDrag = _ref58.panOnDrag,\n    onSelectionStart = _ref58.onSelectionStart,\n    onSelectionEnd = _ref58.onSelectionEnd,\n    onPaneClick = _ref58.onPaneClick,\n    onPaneContextMenu = _ref58.onPaneContextMenu,\n    onPaneScroll = _ref58.onPaneScroll,\n    onPaneMouseEnter = _ref58.onPaneMouseEnter,\n    onPaneMouseMove = _ref58.onPaneMouseMove,\n    onPaneMouseLeave = _ref58.onPaneMouseLeave,\n    children = _ref58.children;\n  var container = useRef(null);\n  var store = useStoreApi();\n  var prevSelectedNodesCount = useRef(0);\n  var prevSelectedEdgesCount = useRef(0);\n  var containerBounds = useRef();\n  var _useStore8 = useStore(selector$8, shallow),\n    userSelectionActive = _useStore8.userSelectionActive,\n    elementsSelectable = _useStore8.elementsSelectable,\n    dragging = _useStore8.dragging;\n  var resetUserSelection = function resetUserSelection() {\n    store.setState({\n      userSelectionActive: false,\n      userSelectionRect: null\n    });\n    prevSelectedNodesCount.current = 0;\n    prevSelectedEdgesCount.current = 0;\n  };\n  var onClick = function onClick(event) {\n    onPaneClick === null || onPaneClick === void 0 ? void 0 : onPaneClick(event);\n    store.getState().resetSelectedElements();\n    store.setState({\n      nodesSelectionActive: false\n    });\n  };\n  var onContextMenu = function onContextMenu(event) {\n    if (Array.isArray(panOnDrag) && panOnDrag !== null && panOnDrag !== void 0 && panOnDrag.includes(2)) {\n      event.preventDefault();\n      return;\n    }\n    onPaneContextMenu === null || onPaneContextMenu === void 0 ? void 0 : onPaneContextMenu(event);\n  };\n  var onWheel = onPaneScroll ? function (event) {\n    return onPaneScroll(event);\n  } : undefined;\n  var onMouseDown = function onMouseDown(event) {\n    var _store$getState33 = store.getState(),\n      resetSelectedElements = _store$getState33.resetSelectedElements,\n      domNode = _store$getState33.domNode;\n    containerBounds.current = domNode === null || domNode === void 0 ? void 0 : domNode.getBoundingClientRect();\n    if (!elementsSelectable || !isSelecting || event.button !== 0 || event.target !== container.current || !containerBounds.current) {\n      return;\n    }\n    var _getEventPosition3 = getEventPosition(event, containerBounds.current),\n      x = _getEventPosition3.x,\n      y = _getEventPosition3.y;\n    resetSelectedElements();\n    store.setState({\n      userSelectionRect: {\n        width: 0,\n        height: 0,\n        startX: x,\n        startY: y,\n        x: x,\n        y: y\n      }\n    });\n    onSelectionStart === null || onSelectionStart === void 0 ? void 0 : onSelectionStart(event);\n  };\n  var onMouseMove = function onMouseMove(event) {\n    var _userSelectionRect$st, _userSelectionRect$st2;\n    var _store$getState34 = store.getState(),\n      userSelectionRect = _store$getState34.userSelectionRect,\n      nodeInternals = _store$getState34.nodeInternals,\n      edges = _store$getState34.edges,\n      transform = _store$getState34.transform,\n      onNodesChange = _store$getState34.onNodesChange,\n      onEdgesChange = _store$getState34.onEdgesChange,\n      nodeOrigin = _store$getState34.nodeOrigin,\n      getNodes = _store$getState34.getNodes;\n    if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n      return;\n    }\n    store.setState({\n      userSelectionActive: true,\n      nodesSelectionActive: false\n    });\n    var mousePos = getEventPosition(event, containerBounds.current);\n    var startX = (_userSelectionRect$st = userSelectionRect.startX) !== null && _userSelectionRect$st !== void 0 ? _userSelectionRect$st : 0;\n    var startY = (_userSelectionRect$st2 = userSelectionRect.startY) !== null && _userSelectionRect$st2 !== void 0 ? _userSelectionRect$st2 : 0;\n    var nextUserSelectRect = _objectSpread(_objectSpread({}, userSelectionRect), {}, {\n      x: mousePos.x < startX ? mousePos.x : startX,\n      y: mousePos.y < startY ? mousePos.y : startY,\n      width: Math.abs(mousePos.x - startX),\n      height: Math.abs(mousePos.y - startY)\n    });\n    var nodes = getNodes();\n    var selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n    var selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map(function (e) {\n      return e.id;\n    });\n    var selectedNodeIds = selectedNodes.map(function (n) {\n      return n.id;\n    });\n    if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n      prevSelectedNodesCount.current = selectedNodeIds.length;\n      var changes = getSelectionChanges(nodes, selectedNodeIds);\n      if (changes.length) {\n        onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changes);\n      }\n    }\n    if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n      prevSelectedEdgesCount.current = selectedEdgeIds.length;\n      var _changes = getSelectionChanges(edges, selectedEdgeIds);\n      if (_changes.length) {\n        onEdgesChange === null || onEdgesChange === void 0 ? void 0 : onEdgesChange(_changes);\n      }\n    }\n    store.setState({\n      userSelectionRect: nextUserSelectRect\n    });\n  };\n  var onMouseUp = function onMouseUp(event) {\n    if (event.button !== 0) {\n      return;\n    }\n    var _store$getState35 = store.getState(),\n      userSelectionRect = _store$getState35.userSelectionRect;\n    // We only want to trigger click functions when in selection mode if\n    // the user did not move the mouse.\n    if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n      onClick === null || onClick === void 0 ? void 0 : onClick(event);\n    }\n    store.setState({\n      nodesSelectionActive: prevSelectedNodesCount.current > 0\n    });\n    resetUserSelection();\n    onSelectionEnd === null || onSelectionEnd === void 0 ? void 0 : onSelectionEnd(event);\n  };\n  var onMouseLeave = function onMouseLeave(event) {\n    if (userSelectionActive) {\n      store.setState({\n        nodesSelectionActive: prevSelectedNodesCount.current > 0\n      });\n      onSelectionEnd === null || onSelectionEnd === void 0 ? void 0 : onSelectionEnd(event);\n    }\n    resetUserSelection();\n  };\n  var hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n  return jsxs(\"div\", {\n    className: cc(['react-flow__pane', {\n      dragging: dragging,\n      selection: isSelecting\n    }]),\n    onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container),\n    onContextMenu: wrapHandler(onContextMenu, container),\n    onWheel: wrapHandler(onWheel, container),\n    onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter,\n    onMouseDown: hasActiveSelection ? onMouseDown : undefined,\n    onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove,\n    onMouseUp: hasActiveSelection ? onMouseUp : undefined,\n    onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave,\n    ref: container,\n    style: containerStyle,\n    children: [children, jsx(UserSelection, {})]\n  });\n});\nPane.displayName = 'Pane';\nvar selector$7 = function selector$7(s) {\n  var selectedNodes = s.getNodes().filter(function (n) {\n    return n.selected;\n  });\n  return _objectSpread(_objectSpread({}, getRectOfNodes(selectedNodes, s.nodeOrigin)), {}, {\n    transformString: \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\"),\n    userSelectionActive: s.userSelectionActive\n  });\n};\nfunction NodesSelection(_ref59) {\n  var onSelectionContextMenu = _ref59.onSelectionContextMenu,\n    noPanClassName = _ref59.noPanClassName,\n    disableKeyboardA11y = _ref59.disableKeyboardA11y;\n  var store = useStoreApi();\n  var _useStore9 = useStore(selector$7, shallow),\n    width = _useStore9.width,\n    height = _useStore9.height,\n    left = _useStore9.x,\n    top = _useStore9.y,\n    transformString = _useStore9.transformString,\n    userSelectionActive = _useStore9.userSelectionActive;\n  var updatePositions = useUpdateNodePositions();\n  var nodeRef = useRef(null);\n  useEffect(function () {\n    if (!disableKeyboardA11y) {\n      var _nodeRef$current2;\n      (_nodeRef$current2 = nodeRef.current) === null || _nodeRef$current2 === void 0 ? void 0 : _nodeRef$current2.focus({\n        preventScroll: true\n      });\n    }\n  }, [disableKeyboardA11y]);\n  useDrag({\n    nodeRef: nodeRef\n  });\n  if (userSelectionActive || !width || !height) {\n    return null;\n  }\n  var onContextMenu = onSelectionContextMenu ? function (event) {\n    var selectedNodes = store.getState().getNodes().filter(function (n) {\n      return n.selected;\n    });\n    onSelectionContextMenu(event, selectedNodes);\n  } : undefined;\n  var onKeyDown = function onKeyDown(event) {\n    if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n      updatePositions({\n        x: arrowKeyDiffs[event.key].x,\n        y: arrowKeyDiffs[event.key].y,\n        isShiftPressed: event.shiftKey\n      });\n    }\n  };\n  return jsx(\"div\", {\n    className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]),\n    style: {\n      transform: transformString\n    },\n    children: jsx(\"div\", {\n      ref: nodeRef,\n      className: \"react-flow__nodesselection-rect\",\n      onContextMenu: onContextMenu,\n      tabIndex: disableKeyboardA11y ? undefined : -1,\n      onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n      style: {\n        width: width,\n        height: height,\n        top: top,\n        left: left\n      }\n    })\n  });\n}\nvar NodesSelection$1 = memo(NodesSelection);\nvar selector$6 = function selector$6(s) {\n  return s.nodesSelectionActive;\n};\nvar FlowRenderer = function FlowRenderer(_ref60) {\n  var children = _ref60.children,\n    onPaneClick = _ref60.onPaneClick,\n    onPaneMouseEnter = _ref60.onPaneMouseEnter,\n    onPaneMouseMove = _ref60.onPaneMouseMove,\n    onPaneMouseLeave = _ref60.onPaneMouseLeave,\n    onPaneContextMenu = _ref60.onPaneContextMenu,\n    onPaneScroll = _ref60.onPaneScroll,\n    deleteKeyCode = _ref60.deleteKeyCode,\n    onMove = _ref60.onMove,\n    onMoveStart = _ref60.onMoveStart,\n    onMoveEnd = _ref60.onMoveEnd,\n    selectionKeyCode = _ref60.selectionKeyCode,\n    selectionOnDrag = _ref60.selectionOnDrag,\n    selectionMode = _ref60.selectionMode,\n    onSelectionStart = _ref60.onSelectionStart,\n    onSelectionEnd = _ref60.onSelectionEnd,\n    multiSelectionKeyCode = _ref60.multiSelectionKeyCode,\n    panActivationKeyCode = _ref60.panActivationKeyCode,\n    zoomActivationKeyCode = _ref60.zoomActivationKeyCode,\n    elementsSelectable = _ref60.elementsSelectable,\n    zoomOnScroll = _ref60.zoomOnScroll,\n    zoomOnPinch = _ref60.zoomOnPinch,\n    panOnScroll = _ref60.panOnScroll,\n    panOnScrollSpeed = _ref60.panOnScrollSpeed,\n    panOnScrollMode = _ref60.panOnScrollMode,\n    zoomOnDoubleClick = _ref60.zoomOnDoubleClick,\n    _panOnDrag = _ref60.panOnDrag,\n    defaultViewport = _ref60.defaultViewport,\n    translateExtent = _ref60.translateExtent,\n    minZoom = _ref60.minZoom,\n    maxZoom = _ref60.maxZoom,\n    preventScrolling = _ref60.preventScrolling,\n    onSelectionContextMenu = _ref60.onSelectionContextMenu,\n    noWheelClassName = _ref60.noWheelClassName,\n    noPanClassName = _ref60.noPanClassName,\n    disableKeyboardA11y = _ref60.disableKeyboardA11y;\n  var nodesSelectionActive = useStore(selector$6);\n  var selectionKeyPressed = useKeyPress(selectionKeyCode);\n  var panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n  var panOnDrag = panActivationKeyPressed || _panOnDrag;\n  var isSelecting = selectionKeyPressed || selectionOnDrag && panOnDrag !== true;\n  useGlobalKeyHandler({\n    deleteKeyCode: deleteKeyCode,\n    multiSelectionKeyCode: multiSelectionKeyCode\n  });\n  return jsx(ZoomPane, {\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    onPaneContextMenu: onPaneContextMenu,\n    elementsSelectable: elementsSelectable,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnDrag: !selectionKeyPressed && panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    preventScrolling: preventScrolling,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    children: jsxs(Pane, {\n      onSelectionStart: onSelectionStart,\n      onSelectionEnd: onSelectionEnd,\n      onPaneClick: onPaneClick,\n      onPaneMouseEnter: onPaneMouseEnter,\n      onPaneMouseMove: onPaneMouseMove,\n      onPaneMouseLeave: onPaneMouseLeave,\n      onPaneContextMenu: onPaneContextMenu,\n      onPaneScroll: onPaneScroll,\n      panOnDrag: panOnDrag,\n      isSelecting: !!isSelecting,\n      selectionMode: selectionMode,\n      children: [children, nodesSelectionActive && jsx(NodesSelection$1, {\n        onSelectionContextMenu: onSelectionContextMenu,\n        noPanClassName: noPanClassName,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  });\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\nfunction useVisibleNodes(onlyRenderVisible) {\n  var nodes = useStore(useCallback(function (s) {\n    return onlyRenderVisible ? getNodesInside(s.nodeInternals, {\n      x: 0,\n      y: 0,\n      width: s.width,\n      height: s.height\n    }, s.transform, true) : s.getNodes();\n  }, [onlyRenderVisible]));\n  return nodes;\n}\nvar selector$5 = function selector$5(s) {\n  return {\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError\n  };\n};\nvar NodeRenderer = function NodeRenderer(props) {\n  var _useStore10 = useStore(selector$5, shallow),\n    nodesDraggable = _useStore10.nodesDraggable,\n    nodesConnectable = _useStore10.nodesConnectable,\n    nodesFocusable = _useStore10.nodesFocusable,\n    elementsSelectable = _useStore10.elementsSelectable,\n    updateNodeDimensions = _useStore10.updateNodeDimensions,\n    onError = _useStore10.onError;\n  var nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n  var resizeObserverRef = useRef();\n  var resizeObserver = useMemo(function () {\n    if (typeof ResizeObserver === 'undefined') {\n      return null;\n    }\n    var observer = new ResizeObserver(function (entries) {\n      var updates = entries.map(function (entry) {\n        return {\n          id: entry.target.getAttribute('data-id'),\n          nodeElement: entry.target,\n          forceUpdate: true\n        };\n      });\n      updateNodeDimensions(updates);\n    });\n    resizeObserverRef.current = observer;\n    return observer;\n  }, []);\n  useEffect(function () {\n    return function () {\n      var _resizeObserverRef$cu;\n      resizeObserverRef === null || resizeObserverRef === void 0 ? void 0 : (_resizeObserverRef$cu = resizeObserverRef.current) === null || _resizeObserverRef$cu === void 0 ? void 0 : _resizeObserverRef$cu.disconnect();\n    };\n  }, []);\n  return jsx(\"div\", {\n    className: \"react-flow__nodes\",\n    style: containerStyle,\n    children: nodes.map(function (node) {\n      var _clampedPosition$x, _clampedPosition$y, _node$width2, _node$height2, _node$internalsSymbol4, _node$internalsSymbol5, _node$internalsSymbol6;\n      var nodeType = node.type || 'default';\n      if (!props.nodeTypes[nodeType]) {\n        onError === null || onError === void 0 ? void 0 : onError('003', errorMessages['error003'](nodeType));\n        nodeType = 'default';\n      }\n      var NodeComponent = props.nodeTypes[nodeType] || props.nodeTypes.default;\n      var isDraggable = !!(node.draggable || nodesDraggable && typeof node.draggable === 'undefined');\n      var isSelectable = !!(node.selectable || elementsSelectable && typeof node.selectable === 'undefined');\n      var isConnectable = !!(node.connectable || nodesConnectable && typeof node.connectable === 'undefined');\n      var isFocusable = !!(node.focusable || nodesFocusable && typeof node.focusable === 'undefined');\n      var clampedPosition = props.nodeExtent ? clampPosition(node.positionAbsolute, props.nodeExtent) : node.positionAbsolute;\n      var posX = (_clampedPosition$x = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.x) !== null && _clampedPosition$x !== void 0 ? _clampedPosition$x : 0;\n      var posY = (_clampedPosition$y = clampedPosition === null || clampedPosition === void 0 ? void 0 : clampedPosition.y) !== null && _clampedPosition$y !== void 0 ? _clampedPosition$y : 0;\n      var posOrigin = getPositionWithOrigin({\n        x: posX,\n        y: posY,\n        width: (_node$width2 = node.width) !== null && _node$width2 !== void 0 ? _node$width2 : 0,\n        height: (_node$height2 = node.height) !== null && _node$height2 !== void 0 ? _node$height2 : 0,\n        origin: props.nodeOrigin\n      });\n      return jsx(NodeComponent, {\n        id: node.id,\n        className: node.className,\n        style: node.style,\n        type: nodeType,\n        data: node.data,\n        sourcePosition: node.sourcePosition || Position.Bottom,\n        targetPosition: node.targetPosition || Position.Top,\n        hidden: node.hidden,\n        xPos: posX,\n        yPos: posY,\n        xPosOrigin: posOrigin.x,\n        yPosOrigin: posOrigin.y,\n        selectNodesOnDrag: props.selectNodesOnDrag,\n        onClick: props.onNodeClick,\n        onMouseEnter: props.onNodeMouseEnter,\n        onMouseMove: props.onNodeMouseMove,\n        onMouseLeave: props.onNodeMouseLeave,\n        onContextMenu: props.onNodeContextMenu,\n        onDoubleClick: props.onNodeDoubleClick,\n        selected: !!node.selected,\n        isDraggable: isDraggable,\n        isSelectable: isSelectable,\n        isConnectable: isConnectable,\n        isFocusable: isFocusable,\n        resizeObserver: resizeObserver,\n        dragHandle: node.dragHandle,\n        zIndex: (_node$internalsSymbol4 = (_node$internalsSymbol5 = node[internalsSymbol]) === null || _node$internalsSymbol5 === void 0 ? void 0 : _node$internalsSymbol5.z) !== null && _node$internalsSymbol4 !== void 0 ? _node$internalsSymbol4 : 0,\n        isParent: !!((_node$internalsSymbol6 = node[internalsSymbol]) !== null && _node$internalsSymbol6 !== void 0 && _node$internalsSymbol6.isParent),\n        noDragClassName: props.noDragClassName,\n        noPanClassName: props.noPanClassName,\n        initialized: !!node.width && !!node.height,\n        rfId: props.rfId,\n        disableKeyboardA11y: props.disableKeyboardA11y,\n        ariaLabel: node.ariaLabel\n      }, node.id);\n    })\n  });\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\nvar defaultEdgeTree = [{\n  level: 0,\n  isMaxLevel: true,\n  edges: []\n}];\nfunction groupEdgesByZLevel(edges, nodeInternals) {\n  var elevateEdgesOnSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var maxLevel = -1;\n  var levelLookup = edges.reduce(function (tree, edge) {\n    var hasZIndex = isNumeric(edge.zIndex);\n    var z = hasZIndex ? edge.zIndex : 0;\n    if (elevateEdgesOnSelect) {\n      var _nodeInternals$get2, _nodeInternals$get2$i, _nodeInternals$get3, _nodeInternals$get3$i;\n      z = hasZIndex ? edge.zIndex : Math.max(((_nodeInternals$get2 = nodeInternals.get(edge.source)) === null || _nodeInternals$get2 === void 0 ? void 0 : (_nodeInternals$get2$i = _nodeInternals$get2[internalsSymbol]) === null || _nodeInternals$get2$i === void 0 ? void 0 : _nodeInternals$get2$i.z) || 0, ((_nodeInternals$get3 = nodeInternals.get(edge.target)) === null || _nodeInternals$get3 === void 0 ? void 0 : (_nodeInternals$get3$i = _nodeInternals$get3[internalsSymbol]) === null || _nodeInternals$get3$i === void 0 ? void 0 : _nodeInternals$get3$i.z) || 0);\n    }\n    if (tree[z]) {\n      tree[z].push(edge);\n    } else {\n      tree[z] = [edge];\n    }\n    maxLevel = z > maxLevel ? z : maxLevel;\n    return tree;\n  }, {});\n  var edgeTree = Object.entries(levelLookup).map(function (_ref61) {\n    var _ref62 = _slicedToArray(_ref61, 2),\n      key = _ref62[0],\n      edges = _ref62[1];\n    var level = +key;\n    return {\n      edges: edges,\n      level: level,\n      isMaxLevel: level === maxLevel\n    };\n  });\n  if (edgeTree.length === 0) {\n    return defaultEdgeTree;\n  }\n  return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n  var edges = useStore(useCallback(function (s) {\n    if (!onlyRenderVisible) {\n      return s.edges;\n    }\n    return s.edges.filter(function (e) {\n      var sourceNode = nodeInternals.get(e.source);\n      var targetNode = nodeInternals.get(e.target);\n      return (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.width) && (sourceNode === null || sourceNode === void 0 ? void 0 : sourceNode.height) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.width) && (targetNode === null || targetNode === void 0 ? void 0 : targetNode.height) && isEdgeVisible({\n        sourcePos: sourceNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        targetPos: targetNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        sourceWidth: sourceNode.width,\n        sourceHeight: sourceNode.height,\n        targetWidth: targetNode.width,\n        targetHeight: targetNode.height,\n        width: s.width,\n        height: s.height,\n        transform: s.transform\n      });\n    });\n  }, [onlyRenderVisible, nodeInternals]));\n  return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\nvar ArrowSymbol = function ArrowSymbol(_ref63) {\n  var _ref63$color = _ref63.color,\n    color = _ref63$color === void 0 ? 'none' : _ref63$color,\n    _ref63$strokeWidth = _ref63.strokeWidth,\n    strokeWidth = _ref63$strokeWidth === void 0 ? 1 : _ref63$strokeWidth;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: \"none\",\n    points: \"-5,-4 0,0 -5,4\"\n  });\n};\nvar ArrowClosedSymbol = function ArrowClosedSymbol(_ref64) {\n  var _ref64$color = _ref64.color,\n    color = _ref64$color === void 0 ? 'none' : _ref64$color,\n    _ref64$strokeWidth = _ref64.strokeWidth,\n    strokeWidth = _ref64$strokeWidth === void 0 ? 1 : _ref64$strokeWidth;\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: color,\n    points: \"-5,-4 0,0 -5,4 -5,-4\"\n  });\n};\nvar MarkerSymbols = (_MarkerSymbols = {}, _defineProperty(_MarkerSymbols, MarkerType.Arrow, ArrowSymbol), _defineProperty(_MarkerSymbols, MarkerType.ArrowClosed, ArrowClosedSymbol), _MarkerSymbols);\nfunction useMarkerSymbol(type) {\n  var store = useStoreApi();\n  var symbol = useMemo(function () {\n    var symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n    if (!symbolExists) {\n      var _store$getState$onErr3, _store$getState36;\n      (_store$getState$onErr3 = (_store$getState36 = store.getState()).onError) === null || _store$getState$onErr3 === void 0 ? void 0 : _store$getState$onErr3.call(_store$getState36, '009', errorMessages['error009'](type));\n      return null;\n    }\n    return MarkerSymbols[type];\n  }, [type]);\n  return symbol;\n}\nvar Marker = function Marker(_ref65) {\n  var id = _ref65.id,\n    type = _ref65.type,\n    color = _ref65.color,\n    _ref65$width = _ref65.width,\n    width = _ref65$width === void 0 ? 12.5 : _ref65$width,\n    _ref65$height = _ref65.height,\n    height = _ref65$height === void 0 ? 12.5 : _ref65$height,\n    _ref65$markerUnits = _ref65.markerUnits,\n    markerUnits = _ref65$markerUnits === void 0 ? 'strokeWidth' : _ref65$markerUnits,\n    strokeWidth = _ref65.strokeWidth,\n    _ref65$orient = _ref65.orient,\n    orient = _ref65$orient === void 0 ? 'auto-start-reverse' : _ref65$orient;\n  var Symbol = useMarkerSymbol(type);\n  if (!Symbol) {\n    return null;\n  }\n  return jsx(\"marker\", {\n    className: \"react-flow__arrowhead\",\n    id: id,\n    markerWidth: \"\".concat(width),\n    markerHeight: \"\".concat(height),\n    viewBox: \"-10 -10 20 20\",\n    markerUnits: markerUnits,\n    orient: orient,\n    refX: \"0\",\n    refY: \"0\",\n    children: jsx(Symbol, {\n      color: color,\n      strokeWidth: strokeWidth\n    })\n  });\n};\nvar markerSelector = function markerSelector(_ref66) {\n  var defaultColor = _ref66.defaultColor,\n    rfId = _ref66.rfId;\n  return function (s) {\n    var ids = [];\n    return s.edges.reduce(function (markers, edge) {\n      [edge.markerStart, edge.markerEnd].forEach(function (marker) {\n        if (marker && typeof marker === 'object') {\n          var markerId = getMarkerId(marker, rfId);\n          if (!ids.includes(markerId)) {\n            markers.push(_objectSpread({\n              id: markerId,\n              color: marker.color || defaultColor\n            }, marker));\n            ids.push(markerId);\n          }\n        }\n      });\n      return markers;\n    }, []).sort(function (a, b) {\n      return a.id.localeCompare(b.id);\n    });\n  };\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nvar MarkerDefinitions = function MarkerDefinitions(_ref67) {\n  var defaultColor = _ref67.defaultColor,\n    rfId = _ref67.rfId;\n  var markers = useStore(useCallback(markerSelector({\n    defaultColor: defaultColor,\n    rfId: rfId\n  }), [defaultColor, rfId]),\n  // the id includes all marker options, so we just need to look at that part of the marker\n  function (a, b) {\n    return !(a.length !== b.length || a.some(function (m, i) {\n      return m.id !== b[i].id;\n    }));\n  });\n  return jsx(\"defs\", {\n    children: markers.map(function (marker) {\n      return jsx(Marker, {\n        id: marker.id,\n        type: marker.type,\n        color: marker.color,\n        width: marker.width,\n        height: marker.height,\n        markerUnits: marker.markerUnits,\n        strokeWidth: marker.strokeWidth,\n        orient: marker.orient\n      }, marker.id);\n    })\n  });\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\nvar selector$4 = function selector$4(s) {\n  return {\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError\n  };\n};\nvar EdgeRenderer = function EdgeRenderer(_ref68) {\n  var defaultMarkerColor = _ref68.defaultMarkerColor,\n    onlyRenderVisibleElements = _ref68.onlyRenderVisibleElements,\n    elevateEdgesOnSelect = _ref68.elevateEdgesOnSelect,\n    rfId = _ref68.rfId,\n    edgeTypes = _ref68.edgeTypes,\n    noPanClassName = _ref68.noPanClassName,\n    onEdgeUpdate = _ref68.onEdgeUpdate,\n    onEdgeContextMenu = _ref68.onEdgeContextMenu,\n    onEdgeMouseEnter = _ref68.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref68.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref68.onEdgeMouseLeave,\n    onEdgeClick = _ref68.onEdgeClick,\n    edgeUpdaterRadius = _ref68.edgeUpdaterRadius,\n    onEdgeDoubleClick = _ref68.onEdgeDoubleClick,\n    onEdgeUpdateStart = _ref68.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref68.onEdgeUpdateEnd,\n    children = _ref68.children;\n  var _useStore11 = useStore(selector$4, shallow),\n    edgesFocusable = _useStore11.edgesFocusable,\n    edgesUpdatable = _useStore11.edgesUpdatable,\n    elementsSelectable = _useStore11.elementsSelectable,\n    width = _useStore11.width,\n    height = _useStore11.height,\n    connectionMode = _useStore11.connectionMode,\n    nodeInternals = _useStore11.nodeInternals,\n    onError = _useStore11.onError;\n  var edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n  if (!width) {\n    return null;\n  }\n  return jsxs(Fragment, {\n    children: [edgeTree.map(function (_ref69) {\n      var level = _ref69.level,\n        edges = _ref69.edges,\n        isMaxLevel = _ref69.isMaxLevel;\n      return jsxs(\"svg\", {\n        style: {\n          zIndex: level\n        },\n        width: width,\n        height: height,\n        className: \"react-flow__edges react-flow__container\",\n        children: [isMaxLevel && jsx(MarkerDefinitions$1, {\n          defaultColor: defaultMarkerColor,\n          rfId: rfId\n        }), jsx(\"g\", {\n          children: edges.map(function (edge) {\n            var _targetHandleBounds$t, _targetHandleBounds$s;\n            var _getNodeData = getNodeData(nodeInternals.get(edge.source)),\n              _getNodeData2 = _slicedToArray(_getNodeData, 3),\n              sourceNodeRect = _getNodeData2[0],\n              sourceHandleBounds = _getNodeData2[1],\n              sourceIsValid = _getNodeData2[2];\n            var _getNodeData3 = getNodeData(nodeInternals.get(edge.target)),\n              _getNodeData4 = _slicedToArray(_getNodeData3, 3),\n              targetNodeRect = _getNodeData4[0],\n              targetHandleBounds = _getNodeData4[1],\n              targetIsValid = _getNodeData4[2];\n            if (!sourceIsValid || !targetIsValid) {\n              return null;\n            }\n            var edgeType = edge.type || 'default';\n            if (!edgeTypes[edgeType]) {\n              onError === null || onError === void 0 ? void 0 : onError('011', errorMessages['error011'](edgeType));\n              edgeType = 'default';\n            }\n            var EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n            // when connection type is loose we can define all handles as sources and connect source -> source\n            var targetNodeHandles = connectionMode === ConnectionMode.Strict ? targetHandleBounds.target : ((_targetHandleBounds$t = targetHandleBounds.target) !== null && _targetHandleBounds$t !== void 0 ? _targetHandleBounds$t : []).concat((_targetHandleBounds$s = targetHandleBounds.source) !== null && _targetHandleBounds$s !== void 0 ? _targetHandleBounds$s : []);\n            var sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n            var targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n            var sourcePosition = (sourceHandle === null || sourceHandle === void 0 ? void 0 : sourceHandle.position) || Position.Bottom;\n            var targetPosition = (targetHandle === null || targetHandle === void 0 ? void 0 : targetHandle.position) || Position.Top;\n            var isFocusable = !!(edge.focusable || edgesFocusable && typeof edge.focusable === 'undefined');\n            var isUpdatable = typeof onEdgeUpdate !== 'undefined' && (edge.updatable || edgesUpdatable && typeof edge.updatable === 'undefined');\n            if (!sourceHandle || !targetHandle) {\n              onError === null || onError === void 0 ? void 0 : onError('008', errorMessages['error008'](sourceHandle, edge));\n              return null;\n            }\n            var _getEdgePositions = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition),\n              sourceX = _getEdgePositions.sourceX,\n              sourceY = _getEdgePositions.sourceY,\n              targetX = _getEdgePositions.targetX,\n              targetY = _getEdgePositions.targetY;\n            return jsx(EdgeComponent, {\n              id: edge.id,\n              className: cc([edge.className, noPanClassName]),\n              type: edgeType,\n              data: edge.data,\n              selected: !!edge.selected,\n              animated: !!edge.animated,\n              hidden: !!edge.hidden,\n              label: edge.label,\n              labelStyle: edge.labelStyle,\n              labelShowBg: edge.labelShowBg,\n              labelBgStyle: edge.labelBgStyle,\n              labelBgPadding: edge.labelBgPadding,\n              labelBgBorderRadius: edge.labelBgBorderRadius,\n              style: edge.style,\n              source: edge.source,\n              target: edge.target,\n              sourceHandleId: edge.sourceHandle,\n              targetHandleId: edge.targetHandle,\n              markerEnd: edge.markerEnd,\n              markerStart: edge.markerStart,\n              sourceX: sourceX,\n              sourceY: sourceY,\n              targetX: targetX,\n              targetY: targetY,\n              sourcePosition: sourcePosition,\n              targetPosition: targetPosition,\n              elementsSelectable: elementsSelectable,\n              onEdgeUpdate: onEdgeUpdate,\n              onContextMenu: onEdgeContextMenu,\n              onMouseEnter: onEdgeMouseEnter,\n              onMouseMove: onEdgeMouseMove,\n              onMouseLeave: onEdgeMouseLeave,\n              onClick: onEdgeClick,\n              edgeUpdaterRadius: edgeUpdaterRadius,\n              onEdgeDoubleClick: onEdgeDoubleClick,\n              onEdgeUpdateStart: onEdgeUpdateStart,\n              onEdgeUpdateEnd: onEdgeUpdateEnd,\n              rfId: rfId,\n              ariaLabel: edge.ariaLabel,\n              isFocusable: isFocusable,\n              isUpdatable: isUpdatable,\n              pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined,\n              interactionWidth: edge.interactionWidth\n            }, edge.id);\n          })\n        })]\n      }, level);\n    }), children]\n  });\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\nvar selector$3 = function selector$3(s) {\n  return \"translate(\".concat(s.transform[0], \"px,\").concat(s.transform[1], \"px) scale(\").concat(s.transform[2], \")\");\n};\nfunction Viewport(_ref70) {\n  var children = _ref70.children;\n  var transform = useStore(selector$3);\n  return jsx(\"div\", {\n    className: \"react-flow__viewport react-flow__container\",\n    style: {\n      transform: transform\n    },\n    children: children\n  });\n}\nfunction useOnInitHandler(onInit) {\n  var rfInstance = useReactFlow();\n  var isInitialized = useRef(false);\n  useEffect(function () {\n    if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n      setTimeout(function () {\n        return onInit(rfInstance);\n      }, 1);\n      isInitialized.current = true;\n    }\n  }, [onInit, rfInstance.viewportInitialized]);\n}\nvar oppositePosition = (_oppositePosition = {}, _defineProperty(_oppositePosition, Position.Left, Position.Right), _defineProperty(_oppositePosition, Position.Right, Position.Left), _defineProperty(_oppositePosition, Position.Top, Position.Bottom), _defineProperty(_oppositePosition, Position.Bottom, Position.Top), _oppositePosition);\nvar ConnectionLine = function ConnectionLine(_ref71) {\n  var _fromNode$internalsSy, _fromNode$width, _fromNode$height, _fromNode$positionAbs, _fromNode$positionAbs2, _fromNode$positionAbs3, _fromNode$positionAbs4;\n  var nodeId = _ref71.nodeId,\n    handleType = _ref71.handleType,\n    style = _ref71.style,\n    _ref71$type = _ref71.type,\n    type = _ref71$type === void 0 ? ConnectionLineType.Bezier : _ref71$type,\n    CustomComponent = _ref71.CustomComponent,\n    connectionStatus = _ref71.connectionStatus;\n  var _useStore12 = useStore(useCallback(function (s) {\n      return {\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode\n      };\n    }, [nodeId]), shallow),\n    fromNode = _useStore12.fromNode,\n    handleId = _useStore12.handleId,\n    toX = _useStore12.toX,\n    toY = _useStore12.toY,\n    connectionMode = _useStore12.connectionMode;\n  var fromHandleBounds = fromNode === null || fromNode === void 0 ? void 0 : (_fromNode$internalsSy = fromNode[internalsSymbol]) === null || _fromNode$internalsSy === void 0 ? void 0 : _fromNode$internalsSy.handleBounds;\n  var handleBounds = fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType];\n  if (connectionMode === ConnectionMode.Loose) {\n    handleBounds = handleBounds ? handleBounds : fromHandleBounds === null || fromHandleBounds === void 0 ? void 0 : fromHandleBounds[handleType === 'source' ? 'target' : 'source'];\n  }\n  if (!fromNode || !handleBounds) {\n    return null;\n  }\n  var fromHandle = handleId ? handleBounds.find(function (d) {\n    return d.id === handleId;\n  }) : handleBounds[0];\n  var fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : ((_fromNode$width = fromNode.width) !== null && _fromNode$width !== void 0 ? _fromNode$width : 0) / 2;\n  var fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : (_fromNode$height = fromNode.height) !== null && _fromNode$height !== void 0 ? _fromNode$height : 0;\n  var fromX = ((_fromNode$positionAbs = (_fromNode$positionAbs2 = fromNode.positionAbsolute) === null || _fromNode$positionAbs2 === void 0 ? void 0 : _fromNode$positionAbs2.x) !== null && _fromNode$positionAbs !== void 0 ? _fromNode$positionAbs : 0) + fromHandleX;\n  var fromY = ((_fromNode$positionAbs3 = (_fromNode$positionAbs4 = fromNode.positionAbsolute) === null || _fromNode$positionAbs4 === void 0 ? void 0 : _fromNode$positionAbs4.y) !== null && _fromNode$positionAbs3 !== void 0 ? _fromNode$positionAbs3 : 0) + fromHandleY;\n  var fromPosition = fromHandle === null || fromHandle === void 0 ? void 0 : fromHandle.position;\n  var toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n  if (!fromPosition || !toPosition) {\n    return null;\n  }\n  if (CustomComponent) {\n    return jsx(CustomComponent, {\n      connectionLineType: type,\n      connectionLineStyle: style,\n      fromNode: fromNode,\n      fromHandle: fromHandle,\n      fromX: fromX,\n      fromY: fromY,\n      toX: toX,\n      toY: toY,\n      fromPosition: fromPosition,\n      toPosition: toPosition,\n      connectionStatus: connectionStatus\n    });\n  }\n  var dAttr = '';\n  var pathParams = {\n    sourceX: fromX,\n    sourceY: fromY,\n    sourcePosition: fromPosition,\n    targetX: toX,\n    targetY: toY,\n    targetPosition: toPosition\n  };\n  if (type === ConnectionLineType.Bezier) {\n    // we assume the destination position is opposite to the source position\n    var _getBezierPath3 = getBezierPath(pathParams);\n    var _getBezierPath4 = _slicedToArray(_getBezierPath3, 1);\n    dAttr = _getBezierPath4[0];\n  } else if (type === ConnectionLineType.Step) {\n    var _getSmoothStepPath3 = getSmoothStepPath(_objectSpread(_objectSpread({}, pathParams), {}, {\n      borderRadius: 0\n    }));\n    var _getSmoothStepPath4 = _slicedToArray(_getSmoothStepPath3, 1);\n    dAttr = _getSmoothStepPath4[0];\n  } else if (type === ConnectionLineType.SmoothStep) {\n    var _getSmoothStepPath5 = getSmoothStepPath(pathParams);\n    var _getSmoothStepPath6 = _slicedToArray(_getSmoothStepPath5, 1);\n    dAttr = _getSmoothStepPath6[0];\n  } else if (type === ConnectionLineType.SimpleBezier) {\n    var _getSimpleBezierPath3 = getSimpleBezierPath(pathParams);\n    var _getSimpleBezierPath4 = _slicedToArray(_getSimpleBezierPath3, 1);\n    dAttr = _getSimpleBezierPath4[0];\n  } else {\n    dAttr = \"M\".concat(fromX, \",\").concat(fromY, \" \").concat(toX, \",\").concat(toY);\n  }\n  return jsx(\"path\", {\n    d: dAttr,\n    fill: \"none\",\n    className: \"react-flow__connection-path\",\n    style: style\n  });\n};\nConnectionLine.displayName = 'ConnectionLine';\nvar selector$2 = function selector$2(s) {\n  return {\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height\n  };\n};\nfunction ConnectionLineWrapper(_ref72) {\n  var containerStyle = _ref72.containerStyle,\n    style = _ref72.style,\n    type = _ref72.type,\n    component = _ref72.component;\n  var _useStore13 = useStore(selector$2, shallow),\n    nodeId = _useStore13.nodeId,\n    handleType = _useStore13.handleType,\n    nodesConnectable = _useStore13.nodesConnectable,\n    width = _useStore13.width,\n    height = _useStore13.height,\n    connectionStatus = _useStore13.connectionStatus;\n  var isValid = !!(nodeId && handleType && width && nodesConnectable);\n  if (!isValid) {\n    return null;\n  }\n  return jsx(\"svg\", {\n    style: containerStyle,\n    width: width,\n    height: height,\n    className: \"react-flow__edges react-flow__connectionline react-flow__container\",\n    children: jsx(\"g\", {\n      className: cc(['react-flow__connection', connectionStatus]),\n      children: jsx(ConnectionLine, {\n        nodeId: nodeId,\n        handleType: handleType,\n        style: style,\n        type: type,\n        CustomComponent: component,\n        connectionStatus: connectionStatus\n      })\n    })\n  });\n}\nvar GraphView = function GraphView(_ref73) {\n  var nodeTypes = _ref73.nodeTypes,\n    edgeTypes = _ref73.edgeTypes,\n    onMove = _ref73.onMove,\n    onMoveStart = _ref73.onMoveStart,\n    onMoveEnd = _ref73.onMoveEnd,\n    onInit = _ref73.onInit,\n    onNodeClick = _ref73.onNodeClick,\n    onEdgeClick = _ref73.onEdgeClick,\n    onNodeDoubleClick = _ref73.onNodeDoubleClick,\n    onEdgeDoubleClick = _ref73.onEdgeDoubleClick,\n    onNodeMouseEnter = _ref73.onNodeMouseEnter,\n    onNodeMouseMove = _ref73.onNodeMouseMove,\n    onNodeMouseLeave = _ref73.onNodeMouseLeave,\n    onNodeContextMenu = _ref73.onNodeContextMenu,\n    onSelectionContextMenu = _ref73.onSelectionContextMenu,\n    onSelectionStart = _ref73.onSelectionStart,\n    onSelectionEnd = _ref73.onSelectionEnd,\n    connectionLineType = _ref73.connectionLineType,\n    connectionLineStyle = _ref73.connectionLineStyle,\n    connectionLineComponent = _ref73.connectionLineComponent,\n    connectionLineContainerStyle = _ref73.connectionLineContainerStyle,\n    selectionKeyCode = _ref73.selectionKeyCode,\n    selectionOnDrag = _ref73.selectionOnDrag,\n    selectionMode = _ref73.selectionMode,\n    multiSelectionKeyCode = _ref73.multiSelectionKeyCode,\n    panActivationKeyCode = _ref73.panActivationKeyCode,\n    zoomActivationKeyCode = _ref73.zoomActivationKeyCode,\n    deleteKeyCode = _ref73.deleteKeyCode,\n    onlyRenderVisibleElements = _ref73.onlyRenderVisibleElements,\n    elementsSelectable = _ref73.elementsSelectable,\n    selectNodesOnDrag = _ref73.selectNodesOnDrag,\n    defaultViewport = _ref73.defaultViewport,\n    translateExtent = _ref73.translateExtent,\n    minZoom = _ref73.minZoom,\n    maxZoom = _ref73.maxZoom,\n    preventScrolling = _ref73.preventScrolling,\n    defaultMarkerColor = _ref73.defaultMarkerColor,\n    zoomOnScroll = _ref73.zoomOnScroll,\n    zoomOnPinch = _ref73.zoomOnPinch,\n    panOnScroll = _ref73.panOnScroll,\n    panOnScrollSpeed = _ref73.panOnScrollSpeed,\n    panOnScrollMode = _ref73.panOnScrollMode,\n    zoomOnDoubleClick = _ref73.zoomOnDoubleClick,\n    panOnDrag = _ref73.panOnDrag,\n    onPaneClick = _ref73.onPaneClick,\n    onPaneMouseEnter = _ref73.onPaneMouseEnter,\n    onPaneMouseMove = _ref73.onPaneMouseMove,\n    onPaneMouseLeave = _ref73.onPaneMouseLeave,\n    onPaneScroll = _ref73.onPaneScroll,\n    onPaneContextMenu = _ref73.onPaneContextMenu,\n    onEdgeUpdate = _ref73.onEdgeUpdate,\n    onEdgeContextMenu = _ref73.onEdgeContextMenu,\n    onEdgeMouseEnter = _ref73.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref73.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref73.onEdgeMouseLeave,\n    edgeUpdaterRadius = _ref73.edgeUpdaterRadius,\n    onEdgeUpdateStart = _ref73.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref73.onEdgeUpdateEnd,\n    noDragClassName = _ref73.noDragClassName,\n    noWheelClassName = _ref73.noWheelClassName,\n    noPanClassName = _ref73.noPanClassName,\n    elevateEdgesOnSelect = _ref73.elevateEdgesOnSelect,\n    disableKeyboardA11y = _ref73.disableKeyboardA11y,\n    nodeOrigin = _ref73.nodeOrigin,\n    nodeExtent = _ref73.nodeExtent,\n    rfId = _ref73.rfId;\n  useOnInitHandler(onInit);\n  return jsx(FlowRenderer$1, {\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    deleteKeyCode: deleteKeyCode,\n    selectionKeyCode: selectionKeyCode,\n    selectionOnDrag: selectionOnDrag,\n    selectionMode: selectionMode,\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    panActivationKeyCode: panActivationKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    elementsSelectable: elementsSelectable,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    onSelectionContextMenu: onSelectionContextMenu,\n    preventScrolling: preventScrolling,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y,\n    children: jsxs(Viewport, {\n      children: [jsx(EdgeRenderer$1, {\n        edgeTypes: edgeTypes,\n        onEdgeClick: onEdgeClick,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeUpdate: onEdgeUpdate,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: !!elevateEdgesOnSelect,\n        disableKeyboardA11y: disableKeyboardA11y,\n        rfId: rfId,\n        children: jsx(ConnectionLineWrapper, {\n          style: connectionLineStyle,\n          type: connectionLineType,\n          component: connectionLineComponent,\n          containerStyle: connectionLineContainerStyle\n        })\n      }), jsx(\"div\", {\n        className: \"react-flow__edgelabel-renderer\"\n      }), jsx(NodeRenderer$1, {\n        nodeTypes: nodeTypes,\n        onNodeClick: onNodeClick,\n        onNodeDoubleClick: onNodeDoubleClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        selectNodesOnDrag: selectNodesOnDrag,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        noPanClassName: noPanClassName,\n        noDragClassName: noDragClassName,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent,\n        rfId: rfId\n      })]\n    })\n  });\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\nvar infiniteExtent = [[Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]];\nvar initialState = {\n  rfId: '1',\n  width: 0,\n  height: 0,\n  transform: [0, 0, 1],\n  nodeInternals: new Map(),\n  edges: [],\n  onNodesChange: null,\n  onEdgesChange: null,\n  hasDefaultNodes: false,\n  hasDefaultEdges: false,\n  d3Zoom: null,\n  d3Selection: null,\n  d3ZoomHandler: undefined,\n  minZoom: 0.5,\n  maxZoom: 2,\n  translateExtent: infiniteExtent,\n  nodeExtent: infiniteExtent,\n  nodesSelectionActive: false,\n  userSelectionActive: false,\n  userSelectionRect: null,\n  connectionNodeId: null,\n  connectionHandleId: null,\n  connectionHandleType: 'source',\n  connectionPosition: {\n    x: 0,\n    y: 0\n  },\n  connectionStatus: null,\n  connectionMode: ConnectionMode.Strict,\n  domNode: null,\n  paneDragging: false,\n  noPanClassName: 'nopan',\n  nodeOrigin: [0, 0],\n  snapGrid: [15, 15],\n  snapToGrid: false,\n  nodesDraggable: true,\n  nodesConnectable: true,\n  nodesFocusable: true,\n  edgesFocusable: true,\n  edgesUpdatable: true,\n  elementsSelectable: true,\n  elevateNodesOnSelect: true,\n  fitViewOnInit: false,\n  fitViewOnInitDone: false,\n  fitViewOnInitOptions: undefined,\n  multiSelectionActive: false,\n  connectionStartHandle: null,\n  connectionEndHandle: null,\n  connectionClickStartHandle: null,\n  connectOnClick: true,\n  ariaLiveMessage: '',\n  autoPanOnConnect: true,\n  autoPanOnNodeDrag: true,\n  connectionRadius: 20,\n  onError: devWarn,\n  isValidConnection: undefined\n};\nvar createRFStore = function createRFStore() {\n  return createStore(function (set, get) {\n    return _objectSpread(_objectSpread({}, initialState), {}, {\n      setNodes: function setNodes(nodes) {\n        var _get3 = get(),\n          nodeInternals = _get3.nodeInternals,\n          nodeOrigin = _get3.nodeOrigin,\n          elevateNodesOnSelect = _get3.elevateNodesOnSelect;\n        set({\n          nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect)\n        });\n      },\n      getNodes: function getNodes() {\n        return Array.from(get().nodeInternals.values());\n      },\n      setEdges: function setEdges(edges) {\n        var _get4 = get(),\n          _get4$defaultEdgeOpti = _get4.defaultEdgeOptions,\n          defaultEdgeOptions = _get4$defaultEdgeOpti === void 0 ? {} : _get4$defaultEdgeOpti;\n        set({\n          edges: edges.map(function (e) {\n            return _objectSpread(_objectSpread({}, defaultEdgeOptions), e);\n          })\n        });\n      },\n      setDefaultNodesAndEdges: function setDefaultNodesAndEdges(nodes, edges) {\n        var hasDefaultNodes = typeof nodes !== 'undefined';\n        var hasDefaultEdges = typeof edges !== 'undefined';\n        var nodeInternals = hasDefaultNodes ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect) : new Map();\n        var nextEdges = hasDefaultEdges ? edges : [];\n        set({\n          nodeInternals: nodeInternals,\n          edges: nextEdges,\n          hasDefaultNodes: hasDefaultNodes,\n          hasDefaultEdges: hasDefaultEdges\n        });\n      },\n      updateNodeDimensions: function updateNodeDimensions(updates) {\n        var _get5 = get(),\n          onNodesChange = _get5.onNodesChange,\n          nodeInternals = _get5.nodeInternals,\n          fitViewOnInit = _get5.fitViewOnInit,\n          fitViewOnInitDone = _get5.fitViewOnInitDone,\n          fitViewOnInitOptions = _get5.fitViewOnInitOptions,\n          domNode = _get5.domNode,\n          nodeOrigin = _get5.nodeOrigin;\n        var viewportNode = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n          return;\n        }\n        var style = window.getComputedStyle(viewportNode);\n        var _window$DOMMatrixRead = new window.DOMMatrixReadOnly(style.transform),\n          zoom = _window$DOMMatrixRead.m22;\n        var changes = updates.reduce(function (res, update) {\n          var node = nodeInternals.get(update.id);\n          if (node) {\n            var dimensions = getDimensions(update.nodeElement);\n            var doUpdate = !!(dimensions.width && dimensions.height && (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n            if (doUpdate) {\n              nodeInternals.set(node.id, _objectSpread(_objectSpread({}, node), {}, _defineProperty({}, internalsSymbol, _objectSpread(_objectSpread({}, node[internalsSymbol]), {}, {\n                handleBounds: {\n                  source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                  target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin)\n                }\n              })), dimensions));\n              res.push({\n                id: node.id,\n                type: 'dimensions',\n                dimensions: dimensions\n              });\n            }\n          }\n          return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        var nextFitViewOnInitDone = fitViewOnInitDone || fitViewOnInit && !fitViewOnInitDone && _fitView(get, _objectSpread({\n          initial: true\n        }, fitViewOnInitOptions));\n        set({\n          nodeInternals: new Map(nodeInternals),\n          fitViewOnInitDone: nextFitViewOnInitDone\n        });\n        if ((changes === null || changes === void 0 ? void 0 : changes.length) > 0) {\n          onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changes);\n        }\n      },\n      updateNodePositions: function updateNodePositions(nodeDragItems) {\n        var positionChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var dragging = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var _get6 = get(),\n          triggerNodeChanges = _get6.triggerNodeChanges;\n        var changes = nodeDragItems.map(function (node) {\n          var change = {\n            id: node.id,\n            type: 'position',\n            dragging: dragging\n          };\n          if (positionChanged) {\n            change.positionAbsolute = node.positionAbsolute;\n            change.position = node.position;\n          }\n          return change;\n        });\n        triggerNodeChanges(changes);\n      },\n      triggerNodeChanges: function triggerNodeChanges(changes) {\n        var _get7 = get(),\n          onNodesChange = _get7.onNodesChange,\n          nodeInternals = _get7.nodeInternals,\n          hasDefaultNodes = _get7.hasDefaultNodes,\n          nodeOrigin = _get7.nodeOrigin,\n          getNodes = _get7.getNodes,\n          elevateNodesOnSelect = _get7.elevateNodesOnSelect;\n        if (changes !== null && changes !== void 0 && changes.length) {\n          if (hasDefaultNodes) {\n            var nodes = applyNodeChanges(changes, getNodes());\n            var nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n            set({\n              nodeInternals: nextNodeInternals\n            });\n          }\n          onNodesChange === null || onNodesChange === void 0 ? void 0 : onNodesChange(changes);\n        }\n      },\n      addSelectedNodes: function addSelectedNodes(selectedNodeIds) {\n        var _get8 = get(),\n          multiSelectionActive = _get8.multiSelectionActive,\n          edges = _get8.edges,\n          getNodes = _get8.getNodes;\n        var changedNodes;\n        var changedEdges = null;\n        if (multiSelectionActive) {\n          changedNodes = selectedNodeIds.map(function (nodeId) {\n            return createSelectionChange(nodeId, true);\n          });\n        } else {\n          changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n          changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      addSelectedEdges: function addSelectedEdges(selectedEdgeIds) {\n        var _get9 = get(),\n          multiSelectionActive = _get9.multiSelectionActive,\n          edges = _get9.edges,\n          getNodes = _get9.getNodes;\n        var changedEdges;\n        var changedNodes = null;\n        if (multiSelectionActive) {\n          changedEdges = selectedEdgeIds.map(function (edgeId) {\n            return createSelectionChange(edgeId, true);\n          });\n        } else {\n          changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n          changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      unselectNodesAndEdges: function unselectNodesAndEdges() {\n        var _ref74 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          nodes = _ref74.nodes,\n          edges = _ref74.edges;\n        var _get10 = get(),\n          storeEdges = _get10.edges,\n          getNodes = _get10.getNodes;\n        var nodesToUnselect = nodes ? nodes : getNodes();\n        var edgesToUnselect = edges ? edges : storeEdges;\n        var changedNodes = nodesToUnselect.map(function (n) {\n          n.selected = false;\n          return createSelectionChange(n.id, false);\n        });\n        var changedEdges = edgesToUnselect.map(function (edge) {\n          return createSelectionChange(edge.id, false);\n        });\n        updateNodesAndEdgesSelections({\n          changedNodes: changedNodes,\n          changedEdges: changedEdges,\n          get: get,\n          set: set\n        });\n      },\n      setMinZoom: function setMinZoom(minZoom) {\n        var _get11 = get(),\n          d3Zoom = _get11.d3Zoom,\n          maxZoom = _get11.maxZoom;\n        d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.scaleExtent([minZoom, maxZoom]);\n        set({\n          minZoom: minZoom\n        });\n      },\n      setMaxZoom: function setMaxZoom(maxZoom) {\n        var _get12 = get(),\n          d3Zoom = _get12.d3Zoom,\n          minZoom = _get12.minZoom;\n        d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.scaleExtent([minZoom, maxZoom]);\n        set({\n          maxZoom: maxZoom\n        });\n      },\n      setTranslateExtent: function setTranslateExtent(translateExtent) {\n        var _get$d3Zoom;\n        (_get$d3Zoom = get().d3Zoom) === null || _get$d3Zoom === void 0 ? void 0 : _get$d3Zoom.translateExtent(translateExtent);\n        set({\n          translateExtent: translateExtent\n        });\n      },\n      resetSelectedElements: function resetSelectedElements() {\n        var _get13 = get(),\n          edges = _get13.edges,\n          getNodes = _get13.getNodes;\n        var nodes = getNodes();\n        var nodesToUnselect = nodes.filter(function (e) {\n          return e.selected;\n        }).map(function (n) {\n          return createSelectionChange(n.id, false);\n        });\n        var edgesToUnselect = edges.filter(function (e) {\n          return e.selected;\n        }).map(function (e) {\n          return createSelectionChange(e.id, false);\n        });\n        updateNodesAndEdgesSelections({\n          changedNodes: nodesToUnselect,\n          changedEdges: edgesToUnselect,\n          get: get,\n          set: set\n        });\n      },\n      setNodeExtent: function setNodeExtent(nodeExtent) {\n        var _get14 = get(),\n          nodeInternals = _get14.nodeInternals;\n        nodeInternals.forEach(function (node) {\n          node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n          nodeExtent: nodeExtent,\n          nodeInternals: new Map(nodeInternals)\n        });\n      },\n      panBy: function panBy(delta) {\n        var _get15 = get(),\n          transform = _get15.transform,\n          width = _get15.width,\n          height = _get15.height,\n          d3Zoom = _get15.d3Zoom,\n          d3Selection = _get15.d3Selection,\n          translateExtent = _get15.translateExtent;\n        if (!d3Zoom || !d3Selection || !delta.x && !delta.y) {\n          return;\n        }\n        var nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n        var extent = [[0, 0], [width, height]];\n        var constrainedTransform = d3Zoom === null || d3Zoom === void 0 ? void 0 : d3Zoom.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n      },\n      cancelConnection: function cancelConnection() {\n        return set({\n          connectionNodeId: initialState.connectionNodeId,\n          connectionHandleId: initialState.connectionHandleId,\n          connectionHandleType: initialState.connectionHandleType,\n          connectionStatus: initialState.connectionStatus,\n          connectionStartHandle: initialState.connectionStartHandle,\n          connectionEndHandle: initialState.connectionEndHandle\n        });\n      },\n      reset: function reset() {\n        return set(_objectSpread({}, initialState));\n      }\n    });\n  });\n};\nvar ReactFlowProvider = function ReactFlowProvider(_ref75) {\n  var children = _ref75.children;\n  var storeRef = useRef(null);\n  if (!storeRef.current) {\n    storeRef.current = createRFStore();\n  }\n  return jsx(Provider$1, {\n    value: storeRef.current,\n    children: children\n  });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\nvar Wrapper = function Wrapper(_ref76) {\n  var children = _ref76.children;\n  var isWrapped = useContext(StoreContext);\n  if (isWrapped) {\n    // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n    return jsx(Fragment, {\n      children: children\n    });\n  }\n  return jsx(ReactFlowProvider, {\n    children: children\n  });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n  var typesKeysRef = useRef(null);\n  var typesParsed = useMemo(function () {\n    if (process.env.NODE_ENV === 'development') {\n      var typeKeys = Object.keys(nodeOrEdgeTypes);\n      if (shallow(typesKeysRef.current, typeKeys)) {\n        devWarn('002', errorMessages['error002']());\n      }\n      typesKeysRef.current = typeKeys;\n    }\n    return createTypes(nodeOrEdgeTypes);\n  }, [nodeOrEdgeTypes]);\n  return typesParsed;\n}\nvar defaultNodeTypes = {\n  input: InputNode$1,\n  default: DefaultNode$1,\n  output: OutputNode$1,\n  group: GroupNode\n};\nvar defaultEdgeTypes = {\n  default: BezierEdge,\n  straight: StraightEdge,\n  step: StepEdge,\n  smoothstep: SmoothStepEdge,\n  simplebezier: SimpleBezierEdge\n};\nvar initNodeOrigin = [0, 0];\nvar initSnapGrid = [15, 15];\nvar initDefaultViewport = {\n  x: 0,\n  y: 0,\n  zoom: 1\n};\nvar wrapperStyle = {\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n  position: 'relative',\n  zIndex: 0\n};\nvar ReactFlow = forwardRef(function (_ref77, ref) {\n  var nodes = _ref77.nodes,\n    edges = _ref77.edges,\n    defaultNodes = _ref77.defaultNodes,\n    defaultEdges = _ref77.defaultEdges,\n    className = _ref77.className,\n    _ref77$nodeTypes = _ref77.nodeTypes,\n    nodeTypes = _ref77$nodeTypes === void 0 ? defaultNodeTypes : _ref77$nodeTypes,\n    _ref77$edgeTypes = _ref77.edgeTypes,\n    edgeTypes = _ref77$edgeTypes === void 0 ? defaultEdgeTypes : _ref77$edgeTypes,\n    onNodeClick = _ref77.onNodeClick,\n    onEdgeClick = _ref77.onEdgeClick,\n    onInit = _ref77.onInit,\n    onMove = _ref77.onMove,\n    onMoveStart = _ref77.onMoveStart,\n    onMoveEnd = _ref77.onMoveEnd,\n    onConnect = _ref77.onConnect,\n    onConnectStart = _ref77.onConnectStart,\n    onConnectEnd = _ref77.onConnectEnd,\n    onClickConnectStart = _ref77.onClickConnectStart,\n    onClickConnectEnd = _ref77.onClickConnectEnd,\n    onNodeMouseEnter = _ref77.onNodeMouseEnter,\n    onNodeMouseMove = _ref77.onNodeMouseMove,\n    onNodeMouseLeave = _ref77.onNodeMouseLeave,\n    onNodeContextMenu = _ref77.onNodeContextMenu,\n    onNodeDoubleClick = _ref77.onNodeDoubleClick,\n    onNodeDragStart = _ref77.onNodeDragStart,\n    onNodeDrag = _ref77.onNodeDrag,\n    onNodeDragStop = _ref77.onNodeDragStop,\n    onNodesDelete = _ref77.onNodesDelete,\n    onEdgesDelete = _ref77.onEdgesDelete,\n    onSelectionChange = _ref77.onSelectionChange,\n    onSelectionDragStart = _ref77.onSelectionDragStart,\n    onSelectionDrag = _ref77.onSelectionDrag,\n    onSelectionDragStop = _ref77.onSelectionDragStop,\n    onSelectionContextMenu = _ref77.onSelectionContextMenu,\n    onSelectionStart = _ref77.onSelectionStart,\n    onSelectionEnd = _ref77.onSelectionEnd,\n    _ref77$connectionMode = _ref77.connectionMode,\n    connectionMode = _ref77$connectionMode === void 0 ? ConnectionMode.Strict : _ref77$connectionMode,\n    _ref77$connectionLine = _ref77.connectionLineType,\n    connectionLineType = _ref77$connectionLine === void 0 ? ConnectionLineType.Bezier : _ref77$connectionLine,\n    connectionLineStyle = _ref77.connectionLineStyle,\n    connectionLineComponent = _ref77.connectionLineComponent,\n    connectionLineContainerStyle = _ref77.connectionLineContainerStyle,\n    _ref77$deleteKeyCode = _ref77.deleteKeyCode,\n    deleteKeyCode = _ref77$deleteKeyCode === void 0 ? 'Backspace' : _ref77$deleteKeyCode,\n    _ref77$selectionKeyCo = _ref77.selectionKeyCode,\n    selectionKeyCode = _ref77$selectionKeyCo === void 0 ? 'Shift' : _ref77$selectionKeyCo,\n    _ref77$selectionOnDra = _ref77.selectionOnDrag,\n    selectionOnDrag = _ref77$selectionOnDra === void 0 ? false : _ref77$selectionOnDra,\n    _ref77$selectionMode = _ref77.selectionMode,\n    selectionMode = _ref77$selectionMode === void 0 ? SelectionMode.Full : _ref77$selectionMode,\n    _ref77$panActivationK = _ref77.panActivationKeyCode,\n    panActivationKeyCode = _ref77$panActivationK === void 0 ? 'Space' : _ref77$panActivationK,\n    _ref77$multiSelection = _ref77.multiSelectionKeyCode,\n    multiSelectionKeyCode = _ref77$multiSelection === void 0 ? 'Meta' : _ref77$multiSelection,\n    _ref77$zoomActivation = _ref77.zoomActivationKeyCode,\n    zoomActivationKeyCode = _ref77$zoomActivation === void 0 ? 'Meta' : _ref77$zoomActivation,\n    _ref77$snapToGrid = _ref77.snapToGrid,\n    snapToGrid = _ref77$snapToGrid === void 0 ? false : _ref77$snapToGrid,\n    _ref77$snapGrid = _ref77.snapGrid,\n    snapGrid = _ref77$snapGrid === void 0 ? initSnapGrid : _ref77$snapGrid,\n    _ref77$onlyRenderVisi = _ref77.onlyRenderVisibleElements,\n    onlyRenderVisibleElements = _ref77$onlyRenderVisi === void 0 ? false : _ref77$onlyRenderVisi,\n    _ref77$selectNodesOnD = _ref77.selectNodesOnDrag,\n    selectNodesOnDrag = _ref77$selectNodesOnD === void 0 ? true : _ref77$selectNodesOnD,\n    nodesDraggable = _ref77.nodesDraggable,\n    nodesConnectable = _ref77.nodesConnectable,\n    nodesFocusable = _ref77.nodesFocusable,\n    _ref77$nodeOrigin = _ref77.nodeOrigin,\n    nodeOrigin = _ref77$nodeOrigin === void 0 ? initNodeOrigin : _ref77$nodeOrigin,\n    edgesFocusable = _ref77.edgesFocusable,\n    edgesUpdatable = _ref77.edgesUpdatable,\n    elementsSelectable = _ref77.elementsSelectable,\n    _ref77$defaultViewpor = _ref77.defaultViewport,\n    defaultViewport = _ref77$defaultViewpor === void 0 ? initDefaultViewport : _ref77$defaultViewpor,\n    _ref77$minZoom = _ref77.minZoom,\n    minZoom = _ref77$minZoom === void 0 ? 0.5 : _ref77$minZoom,\n    _ref77$maxZoom = _ref77.maxZoom,\n    maxZoom = _ref77$maxZoom === void 0 ? 2 : _ref77$maxZoom,\n    _ref77$translateExten = _ref77.translateExtent,\n    translateExtent = _ref77$translateExten === void 0 ? infiniteExtent : _ref77$translateExten,\n    _ref77$preventScrolli = _ref77.preventScrolling,\n    preventScrolling = _ref77$preventScrolli === void 0 ? true : _ref77$preventScrolli,\n    nodeExtent = _ref77.nodeExtent,\n    _ref77$defaultMarkerC = _ref77.defaultMarkerColor,\n    defaultMarkerColor = _ref77$defaultMarkerC === void 0 ? '#b1b1b7' : _ref77$defaultMarkerC,\n    _ref77$zoomOnScroll = _ref77.zoomOnScroll,\n    zoomOnScroll = _ref77$zoomOnScroll === void 0 ? true : _ref77$zoomOnScroll,\n    _ref77$zoomOnPinch = _ref77.zoomOnPinch,\n    zoomOnPinch = _ref77$zoomOnPinch === void 0 ? true : _ref77$zoomOnPinch,\n    _ref77$panOnScroll = _ref77.panOnScroll,\n    panOnScroll = _ref77$panOnScroll === void 0 ? false : _ref77$panOnScroll,\n    _ref77$panOnScrollSpe = _ref77.panOnScrollSpeed,\n    panOnScrollSpeed = _ref77$panOnScrollSpe === void 0 ? 0.5 : _ref77$panOnScrollSpe,\n    _ref77$panOnScrollMod = _ref77.panOnScrollMode,\n    panOnScrollMode = _ref77$panOnScrollMod === void 0 ? PanOnScrollMode.Free : _ref77$panOnScrollMod,\n    _ref77$zoomOnDoubleCl = _ref77.zoomOnDoubleClick,\n    zoomOnDoubleClick = _ref77$zoomOnDoubleCl === void 0 ? true : _ref77$zoomOnDoubleCl,\n    _ref77$panOnDrag = _ref77.panOnDrag,\n    panOnDrag = _ref77$panOnDrag === void 0 ? true : _ref77$panOnDrag,\n    onPaneClick = _ref77.onPaneClick,\n    onPaneMouseEnter = _ref77.onPaneMouseEnter,\n    onPaneMouseMove = _ref77.onPaneMouseMove,\n    onPaneMouseLeave = _ref77.onPaneMouseLeave,\n    onPaneScroll = _ref77.onPaneScroll,\n    onPaneContextMenu = _ref77.onPaneContextMenu,\n    children = _ref77.children,\n    onEdgeUpdate = _ref77.onEdgeUpdate,\n    onEdgeContextMenu = _ref77.onEdgeContextMenu,\n    onEdgeDoubleClick = _ref77.onEdgeDoubleClick,\n    onEdgeMouseEnter = _ref77.onEdgeMouseEnter,\n    onEdgeMouseMove = _ref77.onEdgeMouseMove,\n    onEdgeMouseLeave = _ref77.onEdgeMouseLeave,\n    onEdgeUpdateStart = _ref77.onEdgeUpdateStart,\n    onEdgeUpdateEnd = _ref77.onEdgeUpdateEnd,\n    _ref77$edgeUpdaterRad = _ref77.edgeUpdaterRadius,\n    edgeUpdaterRadius = _ref77$edgeUpdaterRad === void 0 ? 10 : _ref77$edgeUpdaterRad,\n    onNodesChange = _ref77.onNodesChange,\n    onEdgesChange = _ref77.onEdgesChange,\n    _ref77$noDragClassNam = _ref77.noDragClassName,\n    noDragClassName = _ref77$noDragClassNam === void 0 ? 'nodrag' : _ref77$noDragClassNam,\n    _ref77$noWheelClassNa = _ref77.noWheelClassName,\n    noWheelClassName = _ref77$noWheelClassNa === void 0 ? 'nowheel' : _ref77$noWheelClassNa,\n    _ref77$noPanClassName = _ref77.noPanClassName,\n    noPanClassName = _ref77$noPanClassName === void 0 ? 'nopan' : _ref77$noPanClassName,\n    _ref77$fitView = _ref77.fitView,\n    fitView = _ref77$fitView === void 0 ? false : _ref77$fitView,\n    fitViewOptions = _ref77.fitViewOptions,\n    _ref77$connectOnClick = _ref77.connectOnClick,\n    connectOnClick = _ref77$connectOnClick === void 0 ? true : _ref77$connectOnClick,\n    attributionPosition = _ref77.attributionPosition,\n    proOptions = _ref77.proOptions,\n    defaultEdgeOptions = _ref77.defaultEdgeOptions,\n    _ref77$elevateNodesOn = _ref77.elevateNodesOnSelect,\n    elevateNodesOnSelect = _ref77$elevateNodesOn === void 0 ? true : _ref77$elevateNodesOn,\n    _ref77$elevateEdgesOn = _ref77.elevateEdgesOnSelect,\n    elevateEdgesOnSelect = _ref77$elevateEdgesOn === void 0 ? false : _ref77$elevateEdgesOn,\n    _ref77$disableKeyboar = _ref77.disableKeyboardA11y,\n    disableKeyboardA11y = _ref77$disableKeyboar === void 0 ? false : _ref77$disableKeyboar,\n    _ref77$autoPanOnConne = _ref77.autoPanOnConnect,\n    autoPanOnConnect = _ref77$autoPanOnConne === void 0 ? true : _ref77$autoPanOnConne,\n    _ref77$autoPanOnNodeD = _ref77.autoPanOnNodeDrag,\n    autoPanOnNodeDrag = _ref77$autoPanOnNodeD === void 0 ? true : _ref77$autoPanOnNodeD,\n    _ref77$connectionRadi = _ref77.connectionRadius,\n    connectionRadius = _ref77$connectionRadi === void 0 ? 20 : _ref77$connectionRadi,\n    isValidConnection = _ref77.isValidConnection,\n    onError = _ref77.onError,\n    style = _ref77.style,\n    id = _ref77.id,\n    rest = _objectWithoutProperties(_ref77, _excluded5);\n  var nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n  var edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n  var rfId = id || '1';\n  return jsx(\"div\", _objectSpread(_objectSpread({}, rest), {}, {\n    style: _objectSpread(_objectSpread({}, style), wrapperStyle),\n    ref: ref,\n    className: cc(['react-flow', className]),\n    \"data-testid\": \"rf__wrapper\",\n    id: id,\n    children: jsxs(Wrapper, {\n      children: [jsx(GraphView$1, {\n        onInit: onInit,\n        onMove: onMove,\n        onMoveStart: onMoveStart,\n        onMoveEnd: onMoveEnd,\n        onNodeClick: onNodeClick,\n        onEdgeClick: onEdgeClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        onNodeDoubleClick: onNodeDoubleClick,\n        nodeTypes: nodeTypesWrapped,\n        edgeTypes: edgeTypesWrapped,\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineComponent: connectionLineComponent,\n        connectionLineContainerStyle: connectionLineContainerStyle,\n        selectionKeyCode: selectionKeyCode,\n        selectionOnDrag: selectionOnDrag,\n        selectionMode: selectionMode,\n        deleteKeyCode: deleteKeyCode,\n        multiSelectionKeyCode: multiSelectionKeyCode,\n        panActivationKeyCode: panActivationKeyCode,\n        zoomActivationKeyCode: zoomActivationKeyCode,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        selectNodesOnDrag: selectNodesOnDrag,\n        defaultViewport: defaultViewport,\n        translateExtent: translateExtent,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        preventScrolling: preventScrolling,\n        zoomOnScroll: zoomOnScroll,\n        zoomOnPinch: zoomOnPinch,\n        zoomOnDoubleClick: zoomOnDoubleClick,\n        panOnScroll: panOnScroll,\n        panOnScrollSpeed: panOnScrollSpeed,\n        panOnScrollMode: panOnScrollMode,\n        panOnDrag: panOnDrag,\n        onPaneClick: onPaneClick,\n        onPaneMouseEnter: onPaneMouseEnter,\n        onPaneMouseMove: onPaneMouseMove,\n        onPaneMouseLeave: onPaneMouseLeave,\n        onPaneScroll: onPaneScroll,\n        onPaneContextMenu: onPaneContextMenu,\n        onSelectionContextMenu: onSelectionContextMenu,\n        onSelectionStart: onSelectionStart,\n        onSelectionEnd: onSelectionEnd,\n        onEdgeUpdate: onEdgeUpdate,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noDragClassName: noDragClassName,\n        noWheelClassName: noWheelClassName,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: elevateEdgesOnSelect,\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent\n      }), jsx(StoreUpdater, {\n        nodes: nodes,\n        edges: edges,\n        defaultNodes: defaultNodes,\n        defaultEdges: defaultEdges,\n        onConnect: onConnect,\n        onConnectStart: onConnectStart,\n        onConnectEnd: onConnectEnd,\n        onClickConnectStart: onClickConnectStart,\n        onClickConnectEnd: onClickConnectEnd,\n        nodesDraggable: nodesDraggable,\n        nodesConnectable: nodesConnectable,\n        nodesFocusable: nodesFocusable,\n        edgesFocusable: edgesFocusable,\n        edgesUpdatable: edgesUpdatable,\n        elementsSelectable: elementsSelectable,\n        elevateNodesOnSelect: elevateNodesOnSelect,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        nodeExtent: nodeExtent,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        snapToGrid: snapToGrid,\n        snapGrid: snapGrid,\n        connectionMode: connectionMode,\n        translateExtent: translateExtent,\n        connectOnClick: connectOnClick,\n        defaultEdgeOptions: defaultEdgeOptions,\n        fitView: fitView,\n        fitViewOptions: fitViewOptions,\n        onNodesDelete: onNodesDelete,\n        onEdgesDelete: onEdgesDelete,\n        onNodeDragStart: onNodeDragStart,\n        onNodeDrag: onNodeDrag,\n        onNodeDragStop: onNodeDragStop,\n        onSelectionDrag: onSelectionDrag,\n        onSelectionDragStart: onSelectionDragStart,\n        onSelectionDragStop: onSelectionDragStop,\n        noPanClassName: noPanClassName,\n        nodeOrigin: nodeOrigin,\n        rfId: rfId,\n        autoPanOnConnect: autoPanOnConnect,\n        autoPanOnNodeDrag: autoPanOnNodeDrag,\n        onError: onError,\n        connectionRadius: connectionRadius,\n        isValidConnection: isValidConnection\n      }), jsx(Wrapper$1, {\n        onSelectionChange: onSelectionChange\n      }), children, jsx(Attribution, {\n        proOptions: proOptions,\n        position: attributionPosition\n      }), jsx(A11yDescriptions, {\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  }));\n});\nReactFlow.displayName = 'ReactFlow';\nvar selector$1 = function selector$1(s) {\n  var _s$domNode;\n  return (_s$domNode = s.domNode) === null || _s$domNode === void 0 ? void 0 : _s$domNode.querySelector('.react-flow__edgelabel-renderer');\n};\nfunction EdgeLabelRenderer(_ref78) {\n  var children = _ref78.children;\n  var edgeLabelRenderer = useStore(selector$1);\n  if (!edgeLabelRenderer) {\n    return null;\n  }\n  return createPortal(children, edgeLabelRenderer);\n}\nfunction useUpdateNodeInternals() {\n  var store = useStoreApi();\n  return useCallback(function (id) {\n    var _store$getState37 = store.getState(),\n      domNode = _store$getState37.domNode,\n      updateNodeDimensions = _store$getState37.updateNodeDimensions;\n    var nodeElement = domNode === null || domNode === void 0 ? void 0 : domNode.querySelector(\".react-flow__node[data-id=\\\"\".concat(id, \"\\\"]\"));\n    if (nodeElement) {\n      requestAnimationFrame(function () {\n        return updateNodeDimensions([{\n          id: id,\n          nodeElement: nodeElement,\n          forceUpdate: true\n        }]);\n      });\n    }\n  }, []);\n}\nvar nodesSelector = function nodesSelector(state) {\n  return state.getNodes();\n};\nfunction useNodes() {\n  var nodes = useStore(nodesSelector);\n  return nodes;\n}\nvar edgesSelector = function edgesSelector(state) {\n  return state.edges;\n};\nfunction useEdges() {\n  var edges = useStore(edgesSelector);\n  return edges;\n}\nvar viewportSelector = function viewportSelector(state) {\n  return {\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2]\n  };\n};\nfunction useViewport() {\n  var viewport = useStore(viewportSelector, shallow);\n  return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n  return function (initialItems) {\n    var _useState11 = useState(initialItems),\n      _useState12 = _slicedToArray(_useState11, 2),\n      items = _useState12[0],\n      setItems = _useState12[1];\n    var onItemsChange = useCallback(function (changes) {\n      return setItems(function (items) {\n        return applyChanges(changes, items);\n      });\n    }, []);\n    return [items, setItems, onItemsChange];\n  };\n}\nvar useNodesState = createUseItemsState(applyNodeChanges);\nvar useEdgesState = createUseItemsState(applyEdgeChanges);\nfunction useOnViewportChange(_ref79) {\n  var onStart = _ref79.onStart,\n    onChange = _ref79.onChange,\n    onEnd = _ref79.onEnd;\n  var store = useStoreApi();\n  useEffect(function () {\n    store.setState({\n      onViewportChangeStart: onStart\n    });\n  }, [onStart]);\n  useEffect(function () {\n    store.setState({\n      onViewportChange: onChange\n    });\n  }, [onChange]);\n  useEffect(function () {\n    store.setState({\n      onViewportChangeEnd: onEnd\n    });\n  }, [onEnd]);\n}\nfunction useOnSelectionChange(_ref80) {\n  var onChange = _ref80.onChange;\n  var store = useStoreApi();\n  useEffect(function () {\n    store.setState({\n      onSelectionChange: onChange\n    });\n  }, [onChange]);\n}\nvar selector = function selector(options) {\n  return function (s) {\n    if (s.nodeInternals.size === 0) {\n      return false;\n    }\n    return s.getNodes().filter(function (n) {\n      return options.includeHiddenNodes ? true : !n.hidden;\n    }).every(function (n) {\n      var _n$internalsSymbol;\n      return ((_n$internalsSymbol = n[internalsSymbol]) === null || _n$internalsSymbol === void 0 ? void 0 : _n$internalsSymbol.handleBounds) !== undefined;\n    });\n  };\n};\nvar defaultOptions = {\n  includeHiddenNodes: false\n};\nfunction useNodesInitialized() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n  var initialized = useStore(selector(options));\n  return initialized;\n}\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };","map":{"version":3,"names":["jsx","jsxs","Fragment","createContext","useContext","useMemo","memo","useRef","useState","useEffect","forwardRef","useCallback","cc","useStore","useStore$1","createStore","shallow","drag","select","pointer","zoomIdentity","zoom","createPortal","StoreContext","Provider$1","Provider","errorMessages","error001","error002","error003","nodeType","concat","error004","error005","error006","error007","id","error009","type","error008","sourceHandle","edge","targetHandle","error010","error011","edgeType","zustandErrorMessage","selector","equalityFn","store","Error","useStoreApi","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","_ref","position","children","className","style","rest","_objectWithoutProperties","_excluded","pointerEvents","positionClasses","split","_objectSpread","_toConsumableArray","Attribution","_ref2","proOptions","_ref2$position","hideAttribution","href","target","rel","EdgeText","_ref3","x","y","label","_ref3$labelStyle","labelStyle","_ref3$labelShowBg","labelShowBg","_ref3$labelBgStyle","labelBgStyle","_ref3$labelBgPadding","labelBgPadding","_ref3$labelBgBorderRa","labelBgBorderRadius","_excluded2","edgeRef","_useState","width","height","_useState2","_slicedToArray","edgeTextBbox","setEdgeTextBbox","edgeTextClasses","current","textBbox","getBBox","transform","visibility","rx","ry","dy","ref","EdgeText$1","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","arguments","length","undefined","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","xMovement","yMovement","getHostForElement","element","_element$getRootNode","_window","getRootNode","call","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","_ref4","boxToRect","_ref5","nodeToRect","positionAbsolute","getBoundsOfRects","rect1","rect2","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","process","env","NODE_ENV","console","warn","isReactKeyboardEvent","event","isInputDOMNode","_kbEvent$composedPath","_kbEvent$composedPath2","kbEvent","nativeEvent","composedPath","isInput","includes","nodeName","hasAttribute","closest","isMouseEvent","getEventPosition","_event$touches","_event$touches2","_bounds$left","_bounds$top","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","BaseEdge","_ref6","path","labelX","labelY","markerEnd","markerStart","_ref6$interactionWidt","interactionWidth","d","fill","strokeOpacity","strokeWidth","displayName","getMarkerEnd","markerType","markerEndId","getMouseHandler$1","handler","edges","find","e","getEdgeCenter","_ref7","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","centerY","getBezierEdgeCenter","_ref8","sourceControlX","sourceControlY","targetControlX","targetControlY","offsetX","offsetY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","_ref9","x1","y1","Left","Right","getSimpleBezierPath","_ref10","_ref10$sourcePosition","sourcePosition","Bottom","_ref10$targetPosition","targetPosition","Top","_getControl","_getControl2","_getControl3","_getControl4","_getBezierEdgeCenter","_getBezierEdgeCenter2","SimpleBezierEdge","_ref11","_ref11$sourcePosition","_ref11$targetPosition","_getSimpleBezierPath","_getSimpleBezierPath2","handleDirections","_handleDirections","_defineProperty","getDirection","_ref12","source","_ref12$sourcePosition","distance","a","b","sqrt","pow","getPoints","_ref13","_ref13$sourcePosition","_ref13$targetPosition","center","offset","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","points","_getEdgeCenter","_getEdgeCenter2","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","flipSourceTarget","pathPoints","getBend","c","size","bendSize","xDir","yDir","getSmoothStepPath","_ref14","_ref14$sourcePosition","_ref14$targetPosition","_ref14$borderRadius","borderRadius","_ref14$offset","_getPoints","_getPoints2","reduce","res","p","i","segment","SmoothStepEdge","_ref15","_ref15$sourcePosition","_ref15$targetPosition","pathOptions","_getSmoothStepPath","_getSmoothStepPath2","StepEdge","props","_props$pathOptions2","_props$pathOptions","getStraightPath","_ref16","_getEdgeCenter3","_getEdgeCenter4","StraightEdge","_ref17","_getStraightPath","_getStraightPath2","calculateControlOffset","curvature","getControlWithCurvature","_ref18","getBezierPath","_ref19","_ref19$sourcePosition","_ref19$targetPosition","_ref19$curvature","_getControlWithCurvat","_getControlWithCurvat2","_getControlWithCurvat3","_getControlWithCurvat4","_getBezierEdgeCenter3","_getBezierEdgeCenter4","BezierEdge","_ref20","_ref20$sourcePosition","_ref20$targetPosition","_getBezierPath","_getBezierPath2","NodeIdContext","Consumer","useNodeId","nodeId","isEdge","isNode","getOutgoers","nodes","outgoerIds","filter","map","getIncomers","incomersIds","getEdgeId","_ref21","getMarkerId","marker","rfId","idPrefix","Object","keys","sort","key","join","connectionExists","some","el","addEdge","edgeParams","updateEdge","oldEdge","newConnection","options","shouldReplaceId","oldEdgeId","_excluded3","foundEdge","pointToRendererPoint","_ref22","_ref23","snapToGrid","_ref24","_ref25","tx","ty","tScale","_ref26","snapX","snapY","round","rendererPointToPoint","_ref27","_ref28","_ref29","getNodePositionWithOrigin","_node$width","_node$height","nodeOrigin","getRectOfNodes","box","currBox","_getNodePositionWithO","Infinity","getNodesInside","nodeInternals","rect","_ref30","_ref31","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","_node$selectable","selectable","_node$hidden","hidden","_getNodePositionWithO2","nodeRect","overlappingArea","notInitialized","partiallyVisible","area","isVisible","dragging","push","getConnectedEdges","nodeIds","getTransformForBounds","minZoom","maxZoom","padding","xZoom","yZoom","clampedZoom","boundsCenterX","boundsCenterY","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","_node$positionAbsolut","_node$positionAbsolut2","_node$positionAbsolut3","_node$positionAbsolut4","getClosestHandle","connectionRadius","handles","closestHandle","minDistance","handle","nullConnection","isValidHandle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","doc","isTarget","handleDomNode","querySelector","_getEventPosition","handleBelow","elementFromPoint","handleToCheck","classList","contains","result","isValid","connection","endHandle","handleType","getHandleType","handleNodeId","getAttribute","handleId","connectable","connectableEnd","isConnectable","Strict","getHandleLookup","_ref32","sourceHandles","targetHandles","apply","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","_ref33","onConnect","onEdgeUpdateEnd","_getState","domNode","autoPanOnConnect","onConnectStart","panBy","getNodes","cancelConnection","autoPanId","prevClosestHandle","_getEventPosition2","clickedHandle","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","autoPan","_calcAutoPan","_calcAutoPan2","requestAnimationFrame","connectionNodeId","connectionHandleId","connectionHandleType","connectionStartHandle","connectionEndHandle","onPointerMove","_getState2","add","toggle","onPointerUp","_getState$onConnectEn","_getState3","onConnectEnd","cancelAnimationFrame","removeEventListener","addEventListener","alwaysValid","selector$f","connectOnClick","noPanClassName","connectingSelector","state","startHandle","clickHandle","connectionClickStartHandle","connecting","clickConnecting","Handle","_ref34","_ref34$type","_ref34$position","_ref34$isConnectable","_ref34$isConnectableS","isConnectableStart","_ref34$isConnectableE","isConnectableEnd","onMouseDown","onTouchStart","_excluded4","_useStore","_useStore2","_store$getState$onErr","_store$getState","onError","onConnectExtended","params","_store$getState2","defaultEdgeOptions","onConnectAction","hasDefaultEdges","_store$getState3","setEdges","onPointerDown","button","onClick","_store$getState4","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","_isValidHandle","connectablestart","connectableend","connectionindicator","Handle$1","DefaultNode","_ref35","data","_ref35$targetPosition","_ref35$sourcePosition","DefaultNode$1","InputNode","_ref36","_ref36$sourcePosition","InputNode$1","OutputNode","_ref37","_ref37$targetPosition","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","_ref38","onSelectionChange","_useStore3","_store$getState$onSel","_store$getState5","changeSelector","Wrapper$1","_ref39","storeHasSelectionChange","selector$d","setNodes","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","_ref40","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","edgesUpdatable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","_useStore4","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","_ref41","A11yDescriptions","_ref42","disableKeyboardA11y","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","_ref43","_ref43$radius","radius","onMouseEnter","onMouseOut","cx","cy","r","stroke","alwaysValidConnection","wrapEdge","EdgeComponent","EdgeWrapper","_ref44","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","onContextMenu","onMouseMove","onMouseLeave","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","ariaLabel","isFocusable","isUpdatable","_useState3","_useState4","updateHover","setUpdateHover","_useState5","_useState6","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeClick","_store$getState6","addSelectedEdges","nodesSelectionActive","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","_store$getState7","_onEdgeUpdateEnd","evt","onConnectEdge","onEdgeUpdaterSourceMouseDown","onEdgeUpdaterTargetMouseDown","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","onKeyDown","_store$getState8","unselectNodesAndEdges","unselect","_edgeRef$current","blur","onDoubleClick","tabIndex","role","createEdgeTypes","edgeTypes","standardTypes","default","straight","bezier","step","smoothstep","simplebezier","wrappedTypes","specialTypes","k","getHandlePosition","getHandle","getEdgePositions","sourceNodeRect","targetNodeRect","sourceHandlePos","targetHandlePos","isEdgeVisible","_ref45","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","getNodeData","_node$internalsSymbol","_node$positionAbsolut5","_node$positionAbsolut6","_node$positionAbsolut7","_node$positionAbsolut8","isParentSelected","parentNode","get","hasSelector","nodeRef","_current","matches","parentElement","getDragItems","mousePos","Array","from","values","draggable","_n$positionAbsolute$x","_n$positionAbsolute","_n$positionAbsolute$y","_n$positionAbsolute2","delta","calcNextPosition","nextPosition","currentExtent","parent","_getNodePositionWithO3","parentX","parentY","_getNodePositionWithO4","parentPosition","getEventHandlerParams","_ref46","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","_ref47","_ref47$unselect","_store$getState9","addSelectedNodes","multiSelectionActive","_nodeRef$current","useGetPointerPosition","getPointerPosition","_ref48","sourceEvent","_store$getState10","pointerPos","xSnapped","ySnapped","wrapSelectionDragFunc","selectionFunc","_","useDrag","_ref49","_ref49$disabled","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","_useState7","_useState8","setDragging","lastPos","mousePosition","dragEvent","updateNodes","_ref50","_store$getState11","updateNodePositions","hasChange","updatedPos","onDrag","_getEventHandlerParam","_getEventHandlerParam2","currentNode","_calcAutoPan3","_calcAutoPan4","_lastPos$current$x","_lastPos$current$y","_store$getState12","on","dragHandler","_store$getState13","onStart","_nodeInternals$get","_getEventHandlerParam3","_getEventHandlerParam4","_store$getState14","_store$getState15","onStop","_getEventHandlerParam5","_getEventHandlerParam6","isDraggable","useUpdateNodePositions","updatePositions","_store$getState16","xVelo","yVelo","factor","isShiftPressed","positionDiffX","positionDiffY","nodeUpdates","_calcNextPosition","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","_ref51","xPos","yPos","xPosOrigin","yPosOrigin","resizeObserver","dragHandle","zIndex","isParent","initialized","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","onSelectNodeHandler","prototype","hasOwnProperty","replace","toLowerCase","shiftKey","currNode","observe","unobserve","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","createNodeTypes","nodeTypes","input","output","group","getPositionWithOrigin","_ref53","origin","useKeyPress","keyCode","_useState9","_useState10","keyPressed","setKeyPressed","modifierPressed","pressedKeys","Set","_useMemo","keyCodeArr","isArray","kc","keysFlat","item","_useMemo2","keyCodes","keysToWatch","_options$target","_options$target2","downHandler","ctrlKey","metaKey","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","_options$target3","_options$target4","isUp","every","has","eventCode","calculateXYZPosition","_result$x","_result$y","_parentNode$internals","_parentNode$internals2","_result$z","_parentNode$internals3","_parentNode$internals4","_result$z2","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","_node$internalsSymbol2","_node$internalsSymbol3","_calculateXYZPosition","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","_currInternals$intern","currInternals","internals","defineProperty","enumerable","set","_get","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","d3initialized","_options$nodes","includeHiddenNodes","optionNode","nodesInitialized","_options$minZoom","_options$maxZoom","_options$padding","_getTransformForBound","_getTransformForBound2","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","_objectSpread2","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","_ref54","changedNodes","changedEdges","_get2","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","viewportInitialized","selector$b","useViewportHelper","_useStore5","viewportHelperFunctions","scaleBy","zoomLevel","scaleTo","_transform$x","_transform$y","_transform$zoom","_store$getState$trans","_store$getState$trans2","_store$getState17","nextZoom","_options$padding2","_store$getState18","_getTransformForBound3","_getTransformForBound4","_store$getState19","useReactFlow","viewportHelper","getNode","getEdges","_store$getState20","_store$getState20$edg","getEdge","_store$getState21","_store$getState21$edg","payload","_store$getState22","nextNodes","changes","_store$getState23","_store$getState23$edg","nextEdges","addNodes","_store$getState24","currentNodes","addEdges","_store$getState25","_store$getState25$edg","toObject","_store$getState26","_store$getState26$edg","_transform","viewport","deleteElements","_ref55","nodesDeleted","edgesDeleted","_store$getState27","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","_getNodeRect","_getNodeRect2","currNodeRect","isNodeIntersecting","_getNodeRect3","_getNodeRect4","useGlobalKeyHandler","_ref56","deleteKeyCode","multiSelectionKeyCode","_useReactFlow","deleteKeyPressed","multiSelectionKeyPressed","_store$getState28","useResizeHandler","rendererNode","updateDimensions","_store$getState$onErr2","_store$getState29","ResizeObserver","containerStyle","viewChanged","prevViewport","eventViewport","eventToFlowTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","selector$a","d3ZoomHandler","ZoomPane","_ref57","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","_ref57$zoomOnScroll","zoomOnScroll","_ref57$zoomOnPinch","zoomOnPinch","_ref57$panOnScroll","panOnScroll","_ref57$panOnScrollSpe","panOnScrollSpeed","_ref57$panOnScrollMod","panOnScrollMode","Free","_ref57$zoomOnDoubleCl","zoomOnDoubleClick","_ref57$panOnDrag","defaultViewport","zoomActivationKeyCode","_ref57$preventScrolli","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","_useStore6","zoomActivationKeyPressed","mouseButton","bbox","d3ZoomInstance","scaleExtent","updatedTransform","constrainedTransform","constrain","stopImmediatePropagation","currentZoom","property","point","pinchDelta","deltaY","deltaMode","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","passive","_event$sourceEvent","_store$getState30","onViewportChangeStart","paneDragging","flowTransform","_mouseButton$current","_store$getState31","onViewportChange","_mouseButton$current2","_store$getState32","onViewportChangeEnd","clearTimeout","setTimeout","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","_useStore7","isActive","handleParentExpand","updateItem","extendWidth","extendHeight","_parent$style$width","_parent$style$height","xDiff","yDiff","applyChanges","elements","initElements","currentChanges","_iterator","_createForOfIteratorHelper","_step","done","currentChange","expandParent","dimensions","updateStyle","resizing","err","f","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","_ref58","isSelecting","_ref58$selectionMode","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","_useStore8","resetUserSelection","resetSelectedElements","onWheel","_store$getState33","_getEventPosition3","startX","startY","_userSelectionRect$st","_userSelectionRect$st2","_store$getState34","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","_store$getState35","hasActiveSelection","selector$7","transformString","NodesSelection","_ref59","onSelectionContextMenu","_useStore9","_nodeRef$current2","focus","preventScroll","NodesSelection$1","selector$6","FlowRenderer","_ref60","selectionKeyCode","selectionOnDrag","panActivationKeyCode","_panOnDrag","selectionKeyPressed","panActivationKeyPressed","FlowRenderer$1","useVisibleNodes","onlyRenderVisible","selector$5","NodeRenderer","_useStore10","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","_resizeObserverRef$cu","disconnect","_clampedPosition$x","_clampedPosition$y","_node$width2","_node$height2","_node$internalsSymbol4","_node$internalsSymbol5","_node$internalsSymbol6","focusable","clampedPosition","posX","posY","posOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","defaultEdgeTree","level","isMaxLevel","groupEdgesByZLevel","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","_nodeInternals$get2","_nodeInternals$get2$i","_nodeInternals$get3","_nodeInternals$get3$i","edgeTree","_ref61","_ref62","useVisibleEdges","sourceNode","targetNode","ArrowSymbol","_ref63","_ref63$color","color","_ref63$strokeWidth","strokeLinecap","strokeLinejoin","ArrowClosedSymbol","_ref64","_ref64$color","_ref64$strokeWidth","MarkerSymbols","_MarkerSymbols","Arrow","ArrowClosed","useMarkerSymbol","symbol","symbolExists","_store$getState$onErr3","_store$getState36","Marker","_ref65","_ref65$width","_ref65$height","_ref65$markerUnits","markerUnits","_ref65$orient","orient","markerWidth","markerHeight","refX","refY","markerSelector","_ref66","defaultColor","ids","markers","markerId","localeCompare","MarkerDefinitions","_ref67","m","MarkerDefinitions$1","selector$4","EdgeRenderer","_ref68","defaultMarkerColor","_useStore11","_ref69","_targetHandleBounds$t","_targetHandleBounds$s","_getNodeData","_getNodeData2","sourceHandleBounds","sourceIsValid","_getNodeData3","_getNodeData4","targetHandleBounds","targetIsValid","targetNodeHandles","updatable","_getEdgePositions","EdgeRenderer$1","selector$3","Viewport","_ref70","useOnInitHandler","onInit","rfInstance","isInitialized","oppositePosition","_oppositePosition","ConnectionLine","_ref71","_fromNode$internalsSy","_fromNode$width","_fromNode$height","_fromNode$positionAbs","_fromNode$positionAbs2","_fromNode$positionAbs3","_fromNode$positionAbs4","_ref71$type","Bezier","CustomComponent","_useStore12","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","_getBezierPath3","_getBezierPath4","Step","_getSmoothStepPath3","_getSmoothStepPath4","SmoothStep","_getSmoothStepPath5","_getSmoothStepPath6","SimpleBezier","_getSimpleBezierPath3","_getSimpleBezierPath4","selector$2","ConnectionLineWrapper","_ref72","component","_useStore13","GraphView","_ref73","connectionLineComponent","connectionLineContainerStyle","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","createRFStore","_get3","_get4","_get4$defaultEdgeOpti","_get5","viewportNode","getComputedStyle","_window$DOMMatrixRead","DOMMatrixReadOnly","m22","update","doUpdate","nextFitViewOnInitDone","nodeDragItems","positionChanged","_get6","triggerNodeChanges","_get7","_get8","_get9","edgeId","_ref74","_get10","storeEdges","nodesToUnselect","edgesToUnselect","_get11","_get12","_get$d3Zoom","_get13","_get14","_get15","ReactFlowProvider","_ref75","storeRef","Wrapper","_ref76","isWrapped","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","typesKeysRef","typesParsed","typeKeys","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","_ref77","_ref77$nodeTypes","_ref77$edgeTypes","_ref77$connectionMode","_ref77$connectionLine","_ref77$deleteKeyCode","_ref77$selectionKeyCo","_ref77$selectionOnDra","_ref77$selectionMode","_ref77$panActivationK","_ref77$multiSelection","_ref77$zoomActivation","_ref77$snapToGrid","_ref77$snapGrid","_ref77$onlyRenderVisi","_ref77$selectNodesOnD","_ref77$nodeOrigin","_ref77$defaultViewpor","_ref77$minZoom","_ref77$maxZoom","_ref77$translateExten","_ref77$preventScrolli","_ref77$defaultMarkerC","_ref77$zoomOnScroll","_ref77$zoomOnPinch","_ref77$panOnScroll","_ref77$panOnScrollSpe","_ref77$panOnScrollMod","_ref77$zoomOnDoubleCl","_ref77$panOnDrag","_ref77$edgeUpdaterRad","_ref77$noDragClassNam","_ref77$noWheelClassNa","_ref77$noPanClassName","_ref77$fitView","_ref77$connectOnClick","attributionPosition","_ref77$elevateNodesOn","_ref77$elevateEdgesOn","_ref77$disableKeyboar","_ref77$autoPanOnConne","_ref77$autoPanOnNodeD","_ref77$connectionRadi","_excluded5","nodeTypesWrapped","edgeTypesWrapped","selector$1","_s$domNode","EdgeLabelRenderer","_ref78","edgeLabelRenderer","useUpdateNodeInternals","_store$getState37","nodesSelector","useNodes","edgesSelector","useEdges","viewportSelector","useViewport","createUseItemsState","initialItems","_useState11","_useState12","setItems","onItemsChange","useNodesState","useEdgesState","useOnViewportChange","_ref79","onChange","onEnd","useOnSelectionChange","_ref80","_n$internalsSymbol","defaultOptions","useNodesInitialized"],"sources":["/home/aaruni/Github/workflow_assignment/workflow-app/node_modules/@reactflow/core/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStore as useStore$1, createStore } from 'zustand';\nimport { shallow } from 'zustand/shallow';\nimport { drag } from 'd3-drag';\nimport { select, pointer } from 'd3-selection';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n};\n\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStore$1(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest, children: children }));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle, children: label }), children] }));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\n\nconst BaseEdge = ({ path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (jsxs(Fragment, { children: [jsx(\"path\", { style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }), interactionWidth && (jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })), label && isNumeric(labelX) && isNumeric(labelY) ? (jsx(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x || defaultCenterX;\n        centerY = center.y || defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        centerX = points[0].x;\n        centerY = points[0].y;\n    }\n    const pathPoints = [source, sourceGapped, ...points, targetGapped, target];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (jsx(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdgeId);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return [x, y, clampedZoom];\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(pos, connectionRadius, handles) {\n    let closestHandle = null;\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt(Math.pow(handle.x - pos.x, 2) + Math.pow(handle.y - pos.y, 2));\n        if (distance <= connectionRadius && distance < minDistance) {\n            minDistance = distance;\n            closestHandle = handle;\n        }\n    });\n    return closestHandle;\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(event, handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleDomNode = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const { x, y } = getEventPosition(event);\n    const handleBelow = doc.elementFromPoint(x, y);\n    const handleToCheck = handleBelow?.classList.contains('react-flow__handle') ? handleBelow : handleDomNode;\n    const result = {\n        handleDomNode: handleToCheck,\n        isValid: false,\n        connection: nullConnection,\n        endHandle: null,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        if (isValid) {\n            result.endHandle = {\n                nodeId: handleNodeId,\n                handleId,\n                type: handleType,\n            };\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onEdgeUpdateEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let prevClosestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionStatus: null,\n        // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStartHandle: {\n            nodeId,\n            handleId,\n            type: handleType,\n        },\n        connectionEndHandle: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        prevClosestHandle = getClosestHandle(pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup);\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        const result = isValidHandle(event, prevClosestHandle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc);\n        handleDomNode = result.handleDomNode;\n        connection = result.connection;\n        isValid = result.isValid;\n        setState({\n            connectionPosition: prevClosestHandle && isValid\n                ? rendererPointToPoint({\n                    x: prevClosestHandle.x,\n                    y: prevClosestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!prevClosestHandle, isValid),\n            connectionEndHandle: result.endHandle,\n        });\n        if (!prevClosestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((prevClosestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onEdgeUpdateEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionStartHandle: startHandle, connectionEndHandle: endHandle, connectionClickStartHandle: clickHandle, } = state;\n    return {\n        connecting: (startHandle?.nodeId === nodeId && startHandle?.handleId === handleId && startHandle?.type === type) ||\n            (endHandle?.nodeId === nodeId && endHandle?.handleId === handleId && endHandle?.type === type),\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.handleId === handleId && clickHandle?.type === type,\n    };\n};\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const { connecting, clickConnecting } = useStore(connectingSelector(nodeId, handleId, type));\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event);\n        if (isConnectableStart && ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n        const { connection, isValid } = isValidHandle(event, {\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                connecting: clickConnecting,\n                // this class is used to style the handle when the user is connecting\n                connectionindicator: isConnectable && ((isConnectableStart && !connecting) || (isConnectableEnd && connecting)),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (jsxs(Fragment, { children: [data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange?.(params);\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return jsx(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, edgesUpdatable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, isValidConnection, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage }));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (jsxs(Fragment, { children: [jsxs(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '] }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\" }), !disableKeyboardA11y && jsx(AriaLiveMessage, { rfId: rfId })] }));\n}\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nconst alwaysValidConnection = () => true;\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, isUpdatable, pathOptions, interactionWidth, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges } = store.getState();\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                addSelectedEdges([id]);\n            }\n            if (onClick) {\n                const edge = edges.find((e) => e.id === id);\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const { edges, isValidConnection: isValidConnectionStore } = store.getState();\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n            const isTarget = isSourceHandle;\n            const edge = edges.find((e) => e.id === id);\n            setUpdating(true);\n            onEdgeUpdateStart?.(event, edge, handleType);\n            const _onEdgeUpdateEnd = (evt) => {\n                setUpdating(false);\n                onEdgeUpdateEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const onKeyDown = (event) => {\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (jsxs(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef, children: [!updating && (jsx(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })), isUpdatable && (jsxs(Fragment, { children: [(isUpdatable === 'source' || isUpdatable === true) && (jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" })), (isUpdatable === 'target' || isUpdatable === true) && (jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" }))] }))] }));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (bounds.length === 1 || !handleId) {\n        return bounds[0];\n    }\n    else if (handleId) {\n        return bounds.find((d) => d.id === handleId) || null;\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nfunction isParentSelected(node, nodeInternals) {\n    if (!node.parentNode) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode,\n        width: n.width,\n        height: n.height,\n    }));\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    let currentExtent = node.extent || nodeExtent;\n    if (node.extent === 'parent') {\n        if (node.parentNode && node.width && node.height) {\n            const parent = nodeInternals.get(node.parentNode);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['error005']());\n            currentExtent = nodeExtent;\n        }\n    }\n    else if (node.extent && node.parentNode) {\n        const parent = nodeInternals.get(node.parentNode);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (node.parentNode) {\n        const parentNode = nodeInternals.get(node.parentNode);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            handler(event, { ...node });\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals } = store.getState();\n    const node = nodeInternals.get(id);\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a changes\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    updateNodes(lastPos.current);\n                    panBy({ x: xMovement, y: yMovement });\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { nodeInternals, multiSelectionActive, domNode, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                    const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                    if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n                        if (!nodeInternals.get(nodeId)?.selected) {\n                            // we need to reset selected nodes when selectNodesOnDrag=false\n                            unselectNodesAndEdges();\n                        }\n                    }\n                    if (nodeId && isSelectable && selectNodesOnDrag) {\n                        handleNodeClick({\n                            id: nodeId,\n                            store,\n                            nodeRef: nodeRef,\n                        });\n                    }\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                    if (onStart && dragItems.current) {\n                        const [currentNode, nodes] = getEventHandlerParams({\n                            nodeId,\n                            dragItems: dragItems.current,\n                            nodeInternals,\n                        });\n                        onStart(event.sourceEvent, currentNode, nodes);\n                    }\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag } = store.getState();\n                    if (!autoPanStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                onClick(event, { ...node });\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                    nodeRef,\n                });\n            }\n            else if (!disableKeyboardA11y &&\n                isDraggable &&\n                selected &&\n                Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                resizeObserver?.observe(currNode);\n                return () => resizeObserver?.unobserve(currNode);\n            }\n        }, [hidden]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (jsx(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }) }) }));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilites. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { target: doc }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            options?.target?.addEventListener('keydown', downHandler);\n            options?.target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                options?.target?.removeEventListener('keydown', downHandler);\n                options?.target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    if (!node.parentNode) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n            throw new Error(`Parent node ${node.parentNode} not found`);\n        }\n        if (node.parentNode || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            width: currInternals?.width,\n            height: currInternals?.height,\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        if (node.parentNode) {\n            internals.parentNode = node.parentNode;\n            parentNodes[node.parentNode] = true;\n        }\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getRectOfNodes(nodes, nodeOrigin);\n            const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find((n) => n.id === node.parentNode);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\nconst viewChanged = (prevViewport, eventViewport) => prevViewport.x !== eventViewport.x || prevViewport.y !== eventViewport.y || prevViewport.zoom !== eventViewport.k;\nconst eventToFlowTransform = (eventViewport) => ({\n    x: eventViewport.x,\n    y: eventViewport.y,\n    zoom: eventViewport.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    if (event.ctrlKey && zoomOnPinch) {\n                        const point = pointer(event);\n                        // taken from https://github.com/d3/d3-zoom/blob/master/src/zoom.js\n                        const pinchDelta = -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * 10;\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        d3Zoom.scaleTo(d3Selection, zoom, point);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    const deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    const deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed);\n                }, { passive: false });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                }, { passive: false });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent.button;\n                const { onViewportChangeStart } = store.getState();\n                isZoomingOrPanning.current = true;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                if (onMoveStart || onViewportChangeStart) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    onViewportChangeStart?.(flowTransform);\n                    onMoveStart?.(event.sourceEvent, flowTransform);\n                }\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if (onMove || onViewportChange) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if (event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) &&\n                    !panOnDrag.includes(event.button) &&\n                    (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parent = res.find((e) => e.id === updateItem.parentNode);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (jsxs(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle, children: [children, jsx(UserSelection, {})] }));\n});\nPane.displayName = 'Pane';\n\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getRectOfNodes(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } }) }));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (jsx(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, children: jsxs(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode, children: [children, nodesSelectionActive && (jsx(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y }))] }) }));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodes.map((node) => {\n            let nodeType = node.type || 'default';\n            if (!props.nodeTypes[nodeType]) {\n                onError?.('003', errorMessages['error003'](nodeType));\n                nodeType = 'default';\n            }\n            const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n            const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n            const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n            const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n            const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n            const clampedPosition = props.nodeExtent\n                ? clampPosition(node.positionAbsolute, props.nodeExtent)\n                : node.positionAbsolute;\n            const posX = clampedPosition?.x ?? 0;\n            const posY = clampedPosition?.y ?? 0;\n            const posOrigin = getPositionWithOrigin({\n                x: posX,\n                y: posY,\n                width: node.width ?? 0,\n                height: node.height ?? 0,\n                origin: props.nodeOrigin,\n            });\n            return (jsx(NodeComponent, { id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel }, node.id));\n        }) }));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            z = hasZIndex\n                ? edge.zIndex\n                : Math.max(nodeInternals.get(edge.source)?.[internalsSymbol]?.z || 0, nodeInternals.get(edge.target)?.[internalsSymbol]?.z || 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: color, points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, edgeUpdaterRadius, onEdgeDoubleClick, onEdgeUpdateStart, onEdgeUpdateEnd, children, }) => {\n    const { edgesFocusable, edgesUpdatable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (jsxs(Fragment, { children: [edgeTree.map(({ level, edges, isMaxLevel }) => (jsxs(\"svg\", { style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\", children: [isMaxLevel && jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }), jsx(\"g\", { children: edges.map((edge) => {\n                            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                            if (!sourceIsValid || !targetIsValid) {\n                                return null;\n                            }\n                            let edgeType = edge.type || 'default';\n                            if (!edgeTypes[edgeType]) {\n                                onError?.('011', errorMessages['error011'](edgeType));\n                                edgeType = 'default';\n                            }\n                            const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                            // when connection type is loose we can define all handles as sources and connect source -> source\n                            const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                                ? targetHandleBounds.target\n                                : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                            const sourcePosition = sourceHandle?.position || Position.Bottom;\n                            const targetPosition = targetHandle?.position || Position.Top;\n                            const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                            const isUpdatable = typeof onEdgeUpdate !== 'undefined' &&\n                                (edge.updatable || (edgesUpdatable && typeof edge.updatable === 'undefined'));\n                            if (!sourceHandle || !targetHandle) {\n                                onError?.('008', errorMessages['error008'](sourceHandle, edge));\n                                return null;\n                            }\n                            const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                            return (jsx(EdgeComponent, { id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: onEdgeUpdate, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, edgeUpdaterRadius: edgeUpdaterRadius, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, isUpdatable: isUpdatable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }, edge.id));\n                        }) })] }, level))), children] }));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (jsx(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform }, children: children }));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (jsx(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return jsx(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (jsx(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\", children: jsx(\"g\", { className: cc(['react-flow__connection', connectionStatus]), children: jsx(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }) }) }));\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    useOnInitHandler(onInit);\n    return (jsx(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, children: jsxs(Viewport, { children: [jsx(EdgeRenderer$1, { edgeTypes: edgeTypes, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId, children: jsx(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle }) }), jsx(\"div\", { className: \"react-flow__edgelabel-renderer\" }), jsx(NodeRenderer$1, { nodeTypes: nodeTypes, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId })] }) }));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    edgesUpdatable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectionEndHandle: null,\n    connectionClickStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n    isValidConnection: undefined,\n};\n\nconst createRFStore = () => createStore((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return;\n        }\n        const nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n        connectionStartHandle: initialState.connectionStartHandle,\n        connectionEndHandle: initialState.connectionEndHandle,\n    }),\n    reset: () => set({ ...initialState }),\n}));\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return jsx(Provider$1, { value: storeRef.current, children: children });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return jsx(Fragment, { children: children });\n    }\n    return jsx(ReactFlowProvider, { children: children });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                devWarn('002', errorMessages['error002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = 'Meta', zoomActivationKeyCode = 'Meta', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, edgesUpdatable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, isValidConnection, onError, style, id, ...rest }, ref) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    const rfId = id || '1';\n    return (jsx(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id, children: jsxs(Wrapper, { children: [jsx(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypesWrapped, edgeTypes: edgeTypesWrapped, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesUpdatable: edgesUpdatable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection }), jsx(Wrapper$1, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), jsx(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y })] }) }));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${id}\"]`);\n        if (nodeElement) {\n            requestAnimationFrame(() => updateNodeDimensions([{ id, nodeElement, forceUpdate: true }]));\n        }\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onSelectionChange: onChange });\n    }, [onChange]);\n}\n\nconst selector = (options) => (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s\n        .getNodes()\n        .filter((n) => (options.includeHiddenNodes ? true : !n.hidden))\n        .every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector(options));\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}