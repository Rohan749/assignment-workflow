{"ast":null,"code":"var _jsxFileName = \"/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/ReactFlowSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport \"./ReactFlowSection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'input node'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nconst initialEdges = [];\nlet id = 0;\nconst getId = () => `${id++}`;\nconst ReactFlowSection = props => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [name, setName] = useState('');\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  console.log(props);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n\n    // check if the dropped element is valid\n    if (typeof type === 'undefined' || !type) {\n      return;\n    }\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type: 'output',\n      position,\n      data: {\n        label: `${name} node`\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onInit: setReactFlowInstance,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          fitView: true,\n          children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ReactFlowSection, \"EgXuL4cNZ4QFNg2rac3XSWnVTaQ=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = ReactFlowSection;\nexport default ReactFlowSection;\nvar _c;\n$RefreshReg$(_c, \"ReactFlowSection\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","jsxDEV","_jsxDEV","initialNodes","id","type","data","label","position","x","y","initialEdges","getId","ReactFlowSection","props","_s","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","name","setName","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","console","log","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","newNode","nds","concat","className","children","ref","onInit","fitView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/ReactFlowSection.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  useNodesState,\n  useEdgesState,\n  Controls,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport \"./ReactFlowSection.css\"\n\n\nconst initialNodes = [\n  {\n    id: '1',\n    type: 'input',\n    data: { label: 'input node' },\n    position: { x: 250, y: 5 },\n  },\n];\n\nconst initialEdges = [];\n\nlet id = 0;\nconst getId = () => `${id++}`;\n\nconst ReactFlowSection = (props) => {\n\n\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [name, setName] = useState('')\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), [setEdges]);\n  console.log(props)\n\n  \n\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  const onDrop = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n      const type = event.dataTransfer.getData('application/reactflow');\n\n      // check if the dropped element is valid\n      if (typeof type === 'undefined' || !type) {\n        return;\n      }\n\n      const position = reactFlowInstance.project({\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top,\n      });\n      const newNode = {\n        id: getId(),\n        type: 'output',\n        position,\n        data: { label: `${name} node` },\n      };\n\n      setNodes((nds) => nds.concat(newNode));\n    },\n    [reactFlowInstance]\n  );\n\n  return (\n    <div className=\"dndflow\">\n      <ReactFlowProvider>\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onInit={setReactFlowInstance}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n            fitView\n          >\n            <Controls />\n          </ReactFlow>\n        </div>\n      </ReactFlowProvider>\n    </div>\n  );\n};\n\nexport default ReactFlowSection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}