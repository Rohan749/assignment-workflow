{"ast":null,"code":"import { jsx, jsxs } from 'react/jsx-runtime';\nimport { memo, useRef } from 'react';\nimport cc from 'classcat';\nimport { useStore } from '@reactflow/core';\nimport { shallow } from 'zustand/shallow';\nvar BackgroundVariant;\n(function (BackgroundVariant) {\n  BackgroundVariant[\"Lines\"] = \"lines\";\n  BackgroundVariant[\"Dots\"] = \"dots\";\n  BackgroundVariant[\"Cross\"] = \"cross\";\n})(BackgroundVariant || (BackgroundVariant = {}));\nfunction LinePattern(_ref) {\n  let {\n    color,\n    dimensions,\n    lineWidth\n  } = _ref;\n  return jsx(\"path\", {\n    stroke: color,\n    strokeWidth: lineWidth,\n    d: `M${dimensions[0] / 2} 0 V${dimensions[1]} M0 ${dimensions[1] / 2} H${dimensions[0]}`\n  });\n}\nfunction DotPattern(_ref2) {\n  let {\n    color,\n    radius\n  } = _ref2;\n  return jsx(\"circle\", {\n    cx: radius,\n    cy: radius,\n    r: radius,\n    fill: color\n  });\n}\nconst defaultColor = {\n  [BackgroundVariant.Dots]: '#91919a',\n  [BackgroundVariant.Lines]: '#eee',\n  [BackgroundVariant.Cross]: '#e2e2e2'\n};\nconst defaultSize = {\n  [BackgroundVariant.Dots]: 1,\n  [BackgroundVariant.Lines]: 1,\n  [BackgroundVariant.Cross]: 6\n};\nconst selector = s => ({\n  transform: s.transform,\n  patternId: `pattern-${s.rfId}`\n});\nfunction Background(_ref3) {\n  let {\n    id,\n    variant = BackgroundVariant.Dots,\n    // only used for dots and cross\n    gap = 20,\n    // only used for lines and cross\n    size,\n    lineWidth = 1,\n    offset = 2,\n    color,\n    style,\n    className\n  } = _ref3;\n  const ref = useRef(null);\n  const {\n    transform,\n    patternId\n  } = useStore(selector, shallow);\n  const patternColor = color || defaultColor[variant];\n  const patternSize = size || defaultSize[variant];\n  const isDots = variant === BackgroundVariant.Dots;\n  const isCross = variant === BackgroundVariant.Cross;\n  const gapXY = Array.isArray(gap) ? gap : [gap, gap];\n  const scaledGap = [gapXY[0] * transform[2] || 1, gapXY[1] * transform[2] || 1];\n  const scaledSize = patternSize * transform[2];\n  const patternDimensions = isCross ? [scaledSize, scaledSize] : scaledGap;\n  const patternOffset = isDots ? [scaledSize / offset, scaledSize / offset] : [patternDimensions[0] / offset, patternDimensions[1] / offset];\n  return jsxs(\"svg\", {\n    className: cc(['react-flow__background', className]),\n    style: {\n      ...style,\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      top: 0,\n      left: 0\n    },\n    ref: ref,\n    \"data-testid\": \"rf__background\",\n    children: [jsx(\"pattern\", {\n      id: patternId + id,\n      x: transform[0] % scaledGap[0],\n      y: transform[1] % scaledGap[1],\n      width: scaledGap[0],\n      height: scaledGap[1],\n      patternUnits: \"userSpaceOnUse\",\n      patternTransform: `translate(-${patternOffset[0]},-${patternOffset[1]})`,\n      children: isDots ? jsx(DotPattern, {\n        color: patternColor,\n        radius: scaledSize / offset\n      }) : jsx(LinePattern, {\n        dimensions: patternDimensions,\n        color: patternColor,\n        lineWidth: lineWidth\n      })\n    }), jsx(\"rect\", {\n      x: \"0\",\n      y: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      fill: `url(#${patternId + id})`\n    })]\n  });\n}\nBackground.displayName = 'Background';\nvar Background$1 = memo(Background);\nexport { Background$1 as Background, BackgroundVariant };","map":{"version":3,"names":["jsx","jsxs","memo","useRef","cc","useStore","shallow","BackgroundVariant","LinePattern","_ref","color","dimensions","lineWidth","stroke","strokeWidth","d","DotPattern","_ref2","radius","cx","cy","r","fill","defaultColor","Dots","Lines","Cross","defaultSize","selector","s","transform","patternId","rfId","Background","_ref3","id","variant","gap","size","offset","style","className","ref","patternColor","patternSize","isDots","isCross","gapXY","Array","isArray","scaledGap","scaledSize","patternDimensions","patternOffset","position","width","height","top","left","children","x","y","patternUnits","patternTransform","displayName","Background$1"],"sources":["/home/aaruni/Github/workflow_assignment/workflow-app/node_modules/@reactflow/background/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs } from 'react/jsx-runtime';\nimport { memo, useRef } from 'react';\nimport cc from 'classcat';\nimport { useStore } from '@reactflow/core';\nimport { shallow } from 'zustand/shallow';\n\nvar BackgroundVariant;\n(function (BackgroundVariant) {\n    BackgroundVariant[\"Lines\"] = \"lines\";\n    BackgroundVariant[\"Dots\"] = \"dots\";\n    BackgroundVariant[\"Cross\"] = \"cross\";\n})(BackgroundVariant || (BackgroundVariant = {}));\n\nfunction LinePattern({ color, dimensions, lineWidth, }) {\n    return (jsx(\"path\", { stroke: color, strokeWidth: lineWidth, d: `M${dimensions[0] / 2} 0 V${dimensions[1]} M0 ${dimensions[1] / 2} H${dimensions[0]}` }));\n}\nfunction DotPattern({ color, radius }) {\n    return jsx(\"circle\", { cx: radius, cy: radius, r: radius, fill: color });\n}\n\nconst defaultColor = {\n    [BackgroundVariant.Dots]: '#91919a',\n    [BackgroundVariant.Lines]: '#eee',\n    [BackgroundVariant.Cross]: '#e2e2e2',\n};\nconst defaultSize = {\n    [BackgroundVariant.Dots]: 1,\n    [BackgroundVariant.Lines]: 1,\n    [BackgroundVariant.Cross]: 6,\n};\nconst selector = (s) => ({ transform: s.transform, patternId: `pattern-${s.rfId}` });\nfunction Background({ id, variant = BackgroundVariant.Dots, \n// only used for dots and cross\ngap = 20, \n// only used for lines and cross\nsize, lineWidth = 1, offset = 2, color, style, className, }) {\n    const ref = useRef(null);\n    const { transform, patternId } = useStore(selector, shallow);\n    const patternColor = color || defaultColor[variant];\n    const patternSize = size || defaultSize[variant];\n    const isDots = variant === BackgroundVariant.Dots;\n    const isCross = variant === BackgroundVariant.Cross;\n    const gapXY = Array.isArray(gap) ? gap : [gap, gap];\n    const scaledGap = [gapXY[0] * transform[2] || 1, gapXY[1] * transform[2] || 1];\n    const scaledSize = patternSize * transform[2];\n    const patternDimensions = isCross ? [scaledSize, scaledSize] : scaledGap;\n    const patternOffset = isDots\n        ? [scaledSize / offset, scaledSize / offset]\n        : [patternDimensions[0] / offset, patternDimensions[1] / offset];\n    return (jsxs(\"svg\", { className: cc(['react-flow__background', className]), style: {\n            ...style,\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            top: 0,\n            left: 0,\n        }, ref: ref, \"data-testid\": \"rf__background\", children: [jsx(\"pattern\", { id: patternId + id, x: transform[0] % scaledGap[0], y: transform[1] % scaledGap[1], width: scaledGap[0], height: scaledGap[1], patternUnits: \"userSpaceOnUse\", patternTransform: `translate(-${patternOffset[0]},-${patternOffset[1]})`, children: isDots ? (jsx(DotPattern, { color: patternColor, radius: scaledSize / offset })) : (jsx(LinePattern, { dimensions: patternDimensions, color: patternColor, lineWidth: lineWidth })) }), jsx(\"rect\", { x: \"0\", y: \"0\", width: \"100%\", height: \"100%\", fill: `url(#${patternId + id})` })] }));\n}\nBackground.displayName = 'Background';\nvar Background$1 = memo(Background);\n\nexport { Background$1 as Background, BackgroundVariant };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}