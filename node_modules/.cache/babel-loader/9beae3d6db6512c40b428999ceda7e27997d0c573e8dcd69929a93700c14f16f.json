{"ast":null,"code":"var _jsxFileName = \"/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/ReactFlowSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport \"./ReactFlowSection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'input node'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nconst initialEdges = [];\nlet id = -5;\nconst getId = () => `dndnode_${id++}`;\nconst ReactFlowSection = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [isValid, setIsValid] = useState(false);\n  const [propVal, setPropVal] = useState();\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const data = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n\n    // check if the dropped element is valid\n\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type: 'default',\n      position,\n      data: {\n        label: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dragged_body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dragg _output\",\n            children: data.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dragg _name\",\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dragg _input\",\n            children: data.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  const validityHandler = () => {\n    const nodesObj = Object.values(element).filter(e => e.type === 'default');\n    let hasInvalidNodes = false;\n    for (const node of nodes) {\n      const incomingEdges = getIncomingEdges(node, edges);\n      if (incomingEdges.length === 0) {\n        node.style = {\n          border: \"1px solid red\"\n        };\n        hasInvalidNodes = true;\n      } else {\n        node.style = {};\n      }\n    }\n    setIsValid(!hasInvalidNodes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onInit: setReactFlowInstance,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          fitView: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(ReactFlowSection, \"c8XoRuu9GW5F+c54kgRwTf1Gas0=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = ReactFlowSection;\nexport default ReactFlowSection;\nvar _c;\n$RefreshReg$(_c, \"ReactFlowSection\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","jsxDEV","_jsxDEV","initialNodes","id","type","data","label","position","x","y","initialEdges","getId","ReactFlowSection","_s","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","isValid","setIsValid","propVal","setPropVal","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","JSON","parse","getData","project","clientX","left","clientY","top","newNode","className","children","input","fileName","_jsxFileName","lineNumber","columnNumber","name","output","nds","concat","validityHandler","nodesObj","Object","values","element","filter","e","hasInvalidNodes","node","incomingEdges","getIncomingEdges","length","style","border","ref","onInit","fitView","_c","$RefreshReg$"],"sources":["/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/ReactFlowSection.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  useNodesState,\n  useEdgesState,\n  Controls,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport \"./ReactFlowSection.css\"\n\n\nconst initialNodes = [\n  {\n    id: '1',\n    type: 'input',\n    data: { label: 'input node' },\n    position: { x: 250, y: 5 },\n  },\n];\n\nconst initialEdges = [];\n\nlet id = -5;\nconst getId = () => `dndnode_${id++}`;\n\nconst ReactFlowSection = () => {\n\n\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [isValid, setIsValid] = useState(false);\n\n  const [propVal, setPropVal] = useState();\n\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), [setEdges]);\n\n  \n\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n\n  }, []);\n\n  const onDrop = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n      const data = JSON.parse(event.dataTransfer.getData('application/reactflow'))\n\n\n      // check if the dropped element is valid\n\n      const position = reactFlowInstance.project({\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top,\n      });\n      const newNode = {\n        id: getId(),\n        type: 'default',\n        position,\n        data: { label: \n        <div className='dragged_body'>\n          <div className='dragg _output'>{data.input}</div>\n          <div className='dragg _name'>{data.name}</div>\n          <div className='dragg _input'>{data.output}</div>\n        </div> \n      },\n      };\n\n      setNodes((nds) => nds.concat(newNode));\n    },\n    [reactFlowInstance]\n  );\n\n  const validityHandler = () => {\n    const nodesObj = Object.values(element).filter((e) => e.type === 'default')\n    let hasInvalidNodes = false;\n\n    for (const node of nodes) {\n      const incomingEdges = getIncomingEdges(node, edges);\n      if (incomingEdges.length === 0) {\n        node.style = { border: \"1px solid red\" };\n        hasInvalidNodes = true;\n      } else {\n        node.style = {};\n      }\n    }\n  \n    setIsValid(!hasInvalidNodes);\n  \n  }\n\n  return (\n    <div className=\"dndflow\">\n      <ReactFlowProvider>\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onInit={setReactFlowInstance}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n            fitView\n          >\n          </ReactFlow>\n        </div>\n      </ReactFlowProvider>\n    </div>\n  );\n};\n\nexport default ReactFlowSection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}