[{"/home/aaruni/Github/workflow_assignment/workflow-app/src/index.js":"1","/home/aaruni/Github/workflow_assignment/workflow-app/src/App.js":"2","/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/WorkFlowList.jsx":"3","/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/WorkFlowItems.jsx":"4","/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/Designer.jsx":"5","/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/DesignModules.jsx":"6","/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/ReactFlowSection.jsx":"7","/home/aaruni/Public/new/workflow-app/src/index.js":"8","/home/aaruni/Public/new/workflow-app/src/App.js":"9","/home/aaruni/Public/new/workflow-app/src/Components/Designer.jsx":"10","/home/aaruni/Public/new/workflow-app/src/Components/WorkFlowList.jsx":"11","/home/aaruni/Public/new/workflow-app/src/Components/DesignModules.jsx":"12","/home/aaruni/Public/new/workflow-app/src/Components/ReactFlowSection.jsx":"13","/home/aaruni/Public/new/workflow-app/src/Components/WorkFlowItems.jsx":"14"},{"size":204,"mtime":1680959846416,"results":"15","hashOfConfig":"16"},{"size":571,"mtime":1681150053560,"results":"17","hashOfConfig":"16"},{"size":1221,"mtime":1681093325857,"results":"18","hashOfConfig":"16"},{"size":684,"mtime":1680969374214,"results":"19","hashOfConfig":"16"},{"size":1731,"mtime":1681093606072,"results":"20","hashOfConfig":"16"},{"size":813,"mtime":1681020896864,"results":"21","hashOfConfig":"16"},{"size":3200,"mtime":1681148441996,"results":"22","hashOfConfig":"16"},{"size":204,"mtime":1680959846416,"results":"23","hashOfConfig":"24"},{"size":571,"mtime":1681150053560,"results":"25","hashOfConfig":"24"},{"size":1733,"mtime":1681175044155,"results":"26","hashOfConfig":"24"},{"size":1222,"mtime":1681175381488,"results":"27","hashOfConfig":"24"},{"size":813,"mtime":1681020896864,"results":"28","hashOfConfig":"24"},{"size":3173,"mtime":1681175399563,"results":"29","hashOfConfig":"24"},{"size":684,"mtime":1680969374214,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"xpcumr",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1rny8fc",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/home/aaruni/Github/workflow_assignment/workflow-app/src/index.js",[],[],[],"/home/aaruni/Github/workflow_assignment/workflow-app/src/App.js",[],[],"/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/WorkFlowList.jsx",["78"],[],"import React, { useState, useEffect } from 'react'\nimport \"./WorkFlowList.css\"\nimport WorkFlowItems from './WorkFlowItems'\nimport axios from 'axios'\n\n\nconst WorkFlowList = () => {\n\n    const [detail, setDetail] = useState([]);\n\n    useEffect(() => {\n        axios.get('https://64307b10d4518cfb0e50e555.mockapi.io/workflow')\n            .then(response => setDetail(response.data))\n            .catch(error => console.log(error));\n    }, []);\n\n\n\n  return (\n    <>\n    <div className='workflow_heading'>Workflows</div>\n    {detail.length != 0 ?\n    <div className='workflow_body'>\n        <div>\n        <div className='workflow_details'>\n            <div className='workflow_value name'>Name</div>\n            <div className='workflow_value inputtype'>Input Type</div>\n            <div className='workflow_value date_created'>Created At</div>\n        </div>\n\n        {detail.map((val)=>{\n            return <WorkFlowItems \n                key = {val.id}\n                name = {val.name}\n                created = {val.createdAt}\n                input_type = {val.input_type}\n            />\n        })}\n        </div>\n    </div> : <h1 className='loading_page'>Loading...</h1>\n    }\n    </>\n  )\n}\n\nexport default WorkFlowList","/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/WorkFlowItems.jsx",[],[],"/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/Designer.jsx",["79"],[],"import React, { useState, useEffect} from 'react'\nimport \"./Designer.css\"\nimport DesignModules from './DesignModules'\nimport axios from 'axios'\nimport { useLocation } from 'react-router-dom'\nimport ReactFlowSection from './ReactFlowSection'\n\nconst Designer = (props) => {\n\n    const [detail, setDetail] = useState([]);\n    const location = useLocation()\n\n    useEffect(() => {\n        axios.get('https://64307b10d4518cfb0e50e555.mockapi.io/modules?page=1&limit=5')\n            .then(response => setDetail(response.data))\n            .catch(error => console.log(error));\n    }, []);\n\n\n\n  return (\n    <>\n        <div className='designer_body'>\n            <div className='designer_heading'><span>Workflow Name: {location.state.value}</span></div>\n            {detail.length !=0 ?\n            <div className='lowerDesign_body'>\n                <div className='lowerDesign_left'>\n                    <h3 className='moduleHead'>\n                        Modules\n                    </h3>\n                    {detail.map((value)=>{\n                        return (\n                            <div>\n                        <DesignModules \n                            key={value.id}\n                            name={value.name}\n                            input={value.input_type}\n                            output={value.output_type} \n                        />\n                        </div>\n                        )\n                    })}\n                    \n                </div>\n                <div className='lowerDesign_right'>\n                    <ReactFlowSection />\n                </div>\n            </div>\n            : <h1 className='loading_page'>Loading...</h1>}\n        </div>\n    </>\n  )\n}\n\nexport default Designer","/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/DesignModules.jsx",[],[],"/home/aaruni/Github/workflow_assignment/workflow-app/src/Components/ReactFlowSection.jsx",["80","81","82"],[],"import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport ReactFlow, {\n  addEdge,\n  useNodesState,\n  useEdgesState,\n  Background,\n  useReactFlow\n} from 'reactflow';\nimport 'reactflow/dist/base.css';\nimport \"./ReactFlowSection.css\"\n\n\nconst initialNodes = [\n  {\n    id: '1',\n    type: 'input',\n    data: { label: 'input node' },\n    position: { x: 0, y: 5 },\n    style: {\n      fontSize: '10px',\n      color: 'rgb(67, 67, 67)',\n      borderRadius: '3px',\n      padding: '4px',\n      width: '8rem',\n      textAlign: 'center',\n      backgroundColor: `rgb(231, 231, 255)`,\n      border: '1px solid rgb(231, 231, 231)'\n    }\n  },\n];\n\nconst initialEdges = [];\n\nlet id = -5;\nconst getId = () => `dndnode_${id++}`;\n\nconst ReactFlowSection = () => {\n\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const getNodes = useReactFlow()\n\n\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), [setEdges]);\n\n\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n\n  }, []);\n\n  const nodeStyle = {\n    border: '1px solid red',\n    width: '10rem',\n    backgroundColor: 'rgb(231, 231, 255',\n    borderRadius: '3px'\n\n  }\n\n  const connectedStyle = {\n    border: '1px solid black',\n    width: '10rem',\n    backgroundColor: 'rgb(231, 231, 255',\n    borderRadius: '3px'\n\n  }\n\n  useEffect(() => {\n\n    edges.forEach(edge => {\n      const srcNode = nodes.find(node => node.id === edge.target)\n      srcNode.style = connectedStyle \n    })\n\n  },[edges])\n\n\n  const onDrop = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n      const data = JSON.parse(event.dataTransfer.getData('application/reactflow'))\n\n\n      const position = reactFlowInstance.project({\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top,\n      });\n\n      const newNode = {\n        id: getId(),\n        type: 'default',\n        position,\n        style: nodeStyle,\n        data: {\n          label:\n            <div className='dragged_body'>\n              <div className='dragg _output'>{data.input}</div>\n              <div className='dragg _name'>{data.name}</div>\n              <div className='dragg _input'>{data.output}</div>\n            </div>\n        },\n      };\n\n      setNodes((nds) => nds.concat(newNode));\n    },\n    [reactFlowInstance]\n  );\n\n  return (\n    <div className=\"dndflow\">\n      <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          onInit={setReactFlowInstance}\n          onDrop={onDrop}\n          onDragOver={onDragOver}\n          fitView\n          Background\n        >\n          <Background />\n        </ReactFlow>\n      </div>\n    </div>\n  );\n};\n\nexport default ReactFlowSection;","/home/aaruni/Public/new/workflow-app/src/index.js",[],[],[],"/home/aaruni/Public/new/workflow-app/src/App.js",[],[],"/home/aaruni/Public/new/workflow-app/src/Components/Designer.jsx",[],[],"/home/aaruni/Public/new/workflow-app/src/Components/WorkFlowList.jsx",[],[],"/home/aaruni/Public/new/workflow-app/src/Components/DesignModules.jsx",[],[],"/home/aaruni/Public/new/workflow-app/src/Components/ReactFlowSection.jsx",["83","84"],[],"/home/aaruni/Public/new/workflow-app/src/Components/WorkFlowItems.jsx",[],[],{"ruleId":"85","severity":1,"message":"86","line":22,"column":20,"nodeType":"87","messageId":"88","endLine":22,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":25,"column":28,"nodeType":"87","messageId":"88","endLine":25,"endColumn":30},{"ruleId":"89","severity":1,"message":"90","line":43,"column":9,"nodeType":"91","messageId":"92","endLine":43,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":78,"column":5,"nodeType":"95","endLine":78,"endColumn":12,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":111,"column":5,"nodeType":"95","endLine":111,"endColumn":24,"suggestions":"98"},{"ruleId":"93","severity":1,"message":"99","line":60,"column":9,"nodeType":"100","endLine":66,"endColumn":4},{"ruleId":"93","severity":1,"message":"97","line":108,"column":5,"nodeType":"95","endLine":108,"endColumn":24,"suggestions":"101"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'getNodes' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'connectedStyle' and 'nodes'. Either include them or remove the dependency array.","ArrayExpression",["102"],"React Hook useCallback has missing dependencies: 'nodeStyle' and 'setNodes'. Either include them or remove the dependency array.",["103"],"The 'connectedStyle' object makes the dependencies of useEffect Hook (at line 75) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'connectedStyle' in its own useMemo() Hook.","VariableDeclarator",["104"],{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"107","fix":"109"},"Update the dependencies array to be: [connectedStyle, edges, nodes]",{"range":"110","text":"111"},"Update the dependencies array to be: [nodeStyle, reactFlowInstance, setNodes]",{"range":"112","text":"113"},{"range":"114","text":"113"},[1740,1747],"[connectedStyle, edges, nodes]",[2629,2648],"[nodeStyle, reactFlowInstance, setNodes]",[2602,2621]]